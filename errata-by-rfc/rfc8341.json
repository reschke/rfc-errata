[
  {
    "errata_id": "6493",
    "doc-id": "RFC8341",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.5.2",
    "orig_text": "All the same rules as an instance-identifier apply,\r\nexcept that predicates for keys are optional.  If a key\r\npredicate is missing, then the node-instance-identifier\r\nrepresents all possible server instances for that key.",
    "correct_text": "All the same rules as an instance-identifier apply,\r\nexcept that predicates for keys are optional.  If a key\r\npredicate is missing, then the node-instance-identifier\r\nrepresents all possible server instances for that key.\r\n\r\nSpecifying prefixes for the node names is OPTIONAL. If a prefix is not specified the node-instance-identifier represents all possible server instances.",
    "notes": "For the typedef node-instance-identifier (and the leaf path) it is not clear whether the value should or should not include prefixes?\r\n \r\nhttps://tools.ietf.org/html/rfc7950#section-9.13.2 states\r\n\"All node names in an instance-identifier value MUST be qualified with\r\n   explicit namespace prefixes\"\r\n\r\nhttps://tools.ietf.org/html/rfc7950#section-14 - instance-identifier rule\r\nindicates the prefixes are optional.\r\n\r\nWhichever is the correct answer it should be explicitly stated.\r\nIf prefixes are optional and we have 2 leaves with the same path except the namespace/prefix I assume both are referenced (effected) by the nacm rule. Correct?\r\n\r\nActually this is a bit misleading also in RFC7950.\n --VERIFIER NOTES-- \nThe required behavior is specified via section 9.13.2 of RFC 7950.\r\n\r\nThe ABNF for instance-identifier in RFC 7950 could be clearer to indicate that explicit prefixes are required, but either way the rules in section 9.13.2 of RFC 7950 for instance identifiers cannot be ignored.",
    "submit_date": "2021-03-24",
    "submitter_name": "Balazs Lengyel",
    "verifier_id": "166",
    "verifier_name": "Robert Wilton",
    "update_date": "2021-04-07 08:21:19"
  },
  {
    "errata_id": "8302",
    "doc-id": "RFC8341",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.2.3",
    "orig_text": "   Not all RESTCONF methods are subject to access control.  The\r\n   following table specifies how each method is mapped to NETCONF\r\n   protocol operations.  The value \"none\" indicates that the NACM is not\r\n   applied at all to the specific RESTCONF method.\r\n\r\n   +---------+-----------------+---------------------+-----------------+\r\n   | Method  | Resource class  | NETCONF operation   | Access          |\r\n   |         |                 |                     | operation       |\r\n   +---------+-----------------+---------------------+-----------------+\r\n   | OPTIONS | all             | none                | none            |\r\n   | HEAD    | all             | <get>, <get-config> | read            |\r\n   | GET     | all             | <get>, <get-config> | read            |\r\n   | POST    | datastore, data | <edit-config>       | create          |\r\n   | POST    | operation       | specified operation | execute         |\r\n   | PUT     | data            | <edit-config>       | create, update  |\r\n   | PUT     | datastore       | <copy-config>       | update          |\r\n   | PATCH   | data, datastore | <edit-config>       | update          |\r\n   | DELETE  | data            | <edit-config>       | delete          |\r\n   +---------+-----------------+---------------------+-----------------+\r\n\r\n               Table 1: Mapping RESTCONF Methods to NETCONF",
    "correct_text": "   o   For GET requests on event stream resources (i.e. subscriptions),\r\n       map access control to the <create-subscription> RPC in NETCONF\r\n       Notifications [RFC5277]. See Section 3.4.6 for details when\r\n       authorizing notifications.\r\n\r\n   Not all RESTCONF methods are subject to access control.  The\r\n   following table specifies how each method is mapped to NETCONF\r\n   protocol operations.  The value \"none\" indicates that the NACM is not\r\n   applied at all to the specific RESTCONF method.\r\n\r\n   +---------+-----------------+-----------------------+-----------------+\r\n   | Method  | Resource class  | NETCONF operation     | Access          |\r\n   |         |                 |                       | operation       |\r\n   +---------+-----------------+-----------------------+-----------------+\r\n   | OPTIONS | all             | none                  | none            |\r\n   | HEAD    | all             | <get>, <get-config>   | read            |\r\n   | GET     | all             | <get>, <get-config>   | read            |\r\n   | GET     | event stream    | <create-subscription> | execute, read   |\r\n   | POST    | datastore, data | <edit-config>         | create          |\r\n   | POST    | operation       | specified operation   | execute         |\r\n   | PUT     | data            | <edit-config>         | create, update  |\r\n   | PUT     | datastore       | <copy-config>         | update          |\r\n   | PATCH   | data, datastore | <edit-config>         | update          |\r\n   | DELETE  | data            | <edit-config>         | delete          |\r\n   +---------+-----------------+-----------------------+-----------------+\r\n\r\n               Table 1: Mapping RESTCONF Methods to NETCONF",
    "notes": "It seems to have been an oversight when the document was\r\nwritten to map RESTCONF Event Streams [0] to the correct\r\ncorresponding NETCONF resource class.\r\n\r\nNETCONF Notifications are handled by checking the \"action\"\r\nleaf in the matching rule. [1]\r\n\r\n   8.   If a matching rule is found, then the \"action\" leaf is checked.\r\n        If it is equal to \"permit\", then permit the notification;\r\n        otherwise, drop the notification for the associated\r\n        subscription.\r\n\r\nIt is not specified anywhere that the corresponding functionality\r\nshould work the same for RESTCONF, although it is the intention\r\nin RFC 8040 and RFC 8341. This can however be inferred\r\nand understood as such.\r\n\r\nHowever, the resource class mapping is wrong for RESTCONF\r\nevent stream resource the mapping would use GET, and hence\r\ncheck only the \"read\" leaf. This is wrong and does not align with\r\nthe instructions on how to handle notifications in Section 3.4.6;\r\nwhich is to first check the \"execute\" leaf, then check the\r\n\"read-default\" leaf.\r\n\r\n[0] RFC 8040 Sections 3.8 and 6\r\n[1] RFC 8341 Section 3.4.6",
    "submit_date": "2025-02-20",
    "submitter_name": "Per Andersson",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
