[
  {
    "errata_id": "8477",
    "doc-id": "RFC9426",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.2",
    "orig_text": "   function DegreeSampler(j, DD)\r\n       Let CDF be an array\r\n       CDF[0] = 0\r\n       for i = 1, ..., MAX_DEG do\r\n           CDF[i] = CDF[i - 1] + DD[i]\r\n       Rand_Init(j)\r\n       r = Rand() % CDF[MAX_DEG]\r\n       for d = 1, ..., MAX_DEG do\r\n           if r >= CDF[d] do\r\n               return min(d, K)\r\n       return min(MAX_DEG, K)\r\n\r\n                     Figure 7: Degree Sampler Function",
    "correct_text": "   function DegreeSampler(j, DD)\r\n       Let CDF be an array\r\n       CDF[0] = 0\r\n       for i = 1, ..., MAX_DEG do\r\n           CDF[i] = CDF[i - 1] + DD[i]\r\n       Rand_Init(j)\r\n       r = Rand() % CDF[MAX_DEG]\r\n       for d = 1, ..., MAX_DEG do\r\n           if r < CDF[d] do\r\n               return min(d, K)\r\n       return min(MAX_DEG, K)\r\n\r\n                     Figure 7: Degree Sampler Function",
    "notes": "- if r >= CDF[d] do\r\n+ if r < CDF[d] do\r\n\r\nWhen sampling a degree from the degree distribution using the CDF, you should check that the random number is *less than* the CDF at that degree. As an example, assume the CDF is [0, 10, 100], and r is from [0,100). This means that d=1 should be chosen 10% of the time. The old code would choose d=1 90% of the time. It would also never choose any other value besides d=1, as later CDF values are guaranteed larger. If r was smaller than CDF[1] it is guaranteed to be smaller than CDF[2]",
    "submit_date": "2025-06-23",
    "submitter_name": "Marco Munizaga",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
