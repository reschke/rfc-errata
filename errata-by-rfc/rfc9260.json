[
  {
    "errata_id": "7147",
    "doc-id": "RFC9260",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.2",
    "orig_text": "          +----+--------------------------------------------------+\r\n          | 00 | Stop processing this SCTP packet and discard the |\r\n          |    | unrecognized chunk and all further chunks.       |\r\n          +----+--------------------------------------------------+\r\n          | 01 | Stop processing this SCTP packet, discard the    |\r\n          |    | unrecognized chunk and all further chunks, and   |\r\n          |    | report the unrecognized chunk in an ERROR chunk  |\r\n          |    | using the 'Unrecognized Chunk Type' error cause. |\r\n          +----+--------------------------------------------------+\r\n          | 10 | Skip this chunk and continue processing.         |\r\n          +----+--------------------------------------------------+\r\n          | 11 | Skip this chunk and continue processing, but     |\r\n          |    | report it in an ERROR chunk using the            |\r\n          |    | 'Unrecognized Chunk Type' error cause.           |\r\n          +----+--------------------------------------------------+\r\n",
    "correct_text": "          +----+--------------------------------------------------+\r\n          | 00 | Stop processing this SCTP packet and discard the |\r\n          |    | unrecognized chunk and all further chunks.       |\r\n          +----+--------------------------------------------------+\r\n          | 01 | Stop processing this SCTP packet, discard the    |\r\n          |    | unrecognized chunk and all further chunks, and   |\r\n          |    | report the unrecognized chunk in an ERROR chunk  |\r\n          |    | using the \"Unrecognized Chunk Type\" error cause. |\r\n          +----+--------------------------------------------------+\r\n          | 10 | Skip this chunk and continue processing.         |\r\n          +----+--------------------------------------------------+\r\n          | 11 | Skip this chunk and continue processing, but     |\r\n          |    | report it in an ERROR chunk using the            |\r\n          |    | \"Unrecognized Chunk Type\" error cause.           |\r\n          +----+--------------------------------------------------+\r\n",
    "notes": "In the rest of the document, error cause names are enclosed in double quotes, not in single quotes.",
    "submit_date": "2022-10-06",
    "submitter_name": "Michael T端xen",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2022-10-10 14:00:11"
  },
  {
    "errata_id": "7148",
    "doc-id": "RFC9260",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.3.3",
    "orig_text": "A receiver of an INIT ACK chunk with the a_rwnd value set to a\r\nvalue smaller than 1500 MUST discard the packet, SHOULD send a\r\npacket in response containing an ABORT chunk and using the\r\nInitiate Tag as the Verification Tag, and MUST NOT change the\r\nstate of any existing association.\r\n",
    "correct_text": "If an endpoint in the COOKIE-WAIT state receives an INIT ACK chunk\r\nwith the a_rwnd value set to a value smaller than 1500, it MUST\r\ndestroy the TCB and SHOULD send an ABORT chunk.  If such an\r\nINIT ACK chunk is received in any state other than CLOSED or\r\nCOOKIE-WAIT, it SHOULD be discarded silently (see Section 5.2.3).\r\n",
    "notes": "The handling of a_rwnd < 1500 should be similar to the handling of OS = 0 or MIS = 0.",
    "submit_date": "2022-10-06",
    "submitter_name": "Michael T端xen",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2022-10-06 10:59:19"
  },
  {
    "errata_id": "7387",
    "doc-id": "RFC9260",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5.2.4.1",
    "orig_text": "   Endpoint A                                          Endpoint Z\r\n   <-------------- Association is established---------------------->\r\n   Tag=Tag_A                                             Tag=Tag_Z\r\n   <--------------------------------------------------------------->\r\n   {A crashes and restarts}\r\n   {app sets up an association with Z}\r\n   (build TCB)\r\n   INIT [I-Tag=Tag_A'\r\n         & other info]  --------\\\r\n   (Start T1-init timer)         \\\r\n   (Enter COOKIE-WAIT state)      \\---> (find an existing TCB,\r\n                                         populate TieTags if needed,\r\n                                         compose Cookie_Z with Tie-Tags\r\n                                         and other info)\r\n                                   /--- INIT ACK [Veri Tag=Tag_A',\r\n                                  /               I-Tag=Tag_Z',\r\n   (Cancel T1-init timer) <------/                Cookie_Z]\r\n                                        (leave original TCB in place)\r\n   COOKIE ECHO [Veri=Tag_Z',\r\n                Cookie_Z]-------\\\r\n   (Start T1-init timer)         \\\r\n   (Enter COOKIE-ECHOED state)    \\---> (Find existing association,\r\n                                         Tie-Tags in Cookie_Z match\r\n                                         Tie-Tags in TCB,\r\n                                         Tags do not match, i.e.,\r\n                                         case X X M M above,\r\n                                         Announce Restart to ULP\r\n                                         and reset association).\r\n                                  /---- COOKIE ACK\r\n   (Cancel T1-init timer, <------/\r\n    Enter ESTABLISHED state)\r\n   {app sends 1st user data; strm 0}\r\n   DATA [TSN=Initial TSN_A\r\n       Strm=0,Seq=0 & user data]--\\\r\n   (Start T3-rtx timer)            \\\r\n                                    \\->\r\n                                 /--- SACK [TSN Ack=init TSN_A,Block=0]\r\n   (Cancel T3-rtx timer) <------/\r\n",
    "correct_text": "   Endpoint A                                          Endpoint Z\r\n   <-------------- Association is established---------------------->\r\n   Tag=Tag_A                                             Tag=Tag_Z\r\n   <--------------------------------------------------------------->\r\n   {A crashes and restarts}\r\n   {app sets up an association with Z}\r\n   (build TCB)\r\n   INIT [I-Tag=Tag_A'\r\n         & other info]  --------\\\r\n   (Start T1-init timer)         \\\r\n   (Enter COOKIE-WAIT state)      \\---> (find an existing TCB,\r\n                                         populate TieTags if needed,\r\n                                         compose Cookie_Z with Tie-Tags\r\n                                         and other info)\r\n                                   /--- INIT ACK [Veri Tag=Tag_A',\r\n                                  /               I-Tag=Tag_Z',\r\n   (Cancel T1-init timer) <------/                Cookie_Z]\r\n                                        (leave original TCB in place)\r\n   COOKIE ECHO [Veri=Tag_Z',\r\n                Cookie_Z]-------\\\r\n   (Start T1-cookie timer)       \\\r\n   (Enter COOKIE-ECHOED state)    \\---> (Find existing association,\r\n                                         Tie-Tags in Cookie_Z match\r\n                                         Tie-Tags in TCB,\r\n                                         Tags do not match, i.e.,\r\n                                         case X X M M above,\r\n                                         Announce Restart to ULP\r\n                                         and reset association).\r\n                                  /---- COOKIE ACK\r\n   (Cancel T1-cookie timer, <----/\r\n    Enter ESTABLISHED state)\r\n   {app sends 1st user data; strm 0}\r\n   DATA [TSN=Initial TSN_A\r\n       Strm=0,Seq=0 & user data]--\\\r\n   (Start T3-rtx timer)            \\\r\n                                    \\->\r\n                                 /--- SACK [TSN Ack=init TSN_A,Block=0]\r\n   (Cancel T3-rtx timer) <------/\r\n",
    "notes": "A packet containing an COOKIE-ECHO chunk is protected against loss by the T1-cookie timer, not the T1-init timer.",
    "submit_date": "2023-03-16",
    "submitter_name": "Michael T端xen",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2023-04-27 14:14:18"
  },
  {
    "errata_id": "7852",
    "doc-id": "RFC9260",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "8.5",
    "orig_text": "When receiving an SCTP packet, the endpoint MUST ensure that the\r\nvalue in the Verification Tag field of the received SCTP packet\r\nmatches its own tag.",
    "correct_text": "When receiving an SCTP packet, the endpoint MUST first ensure that the\r\nvalue in the Verification Tag field of the received SCTP packet\r\nmatches its own tag before processing any chunks or changing its state.",
    "notes": "State explicitly that the check of the verification tag needs to be done before any processing of the packet.\r\n\r\nThanks to Jake Ginesin, Max von Hippel, and Cristina Nita-Rotaru for reporting issue and discussing it with me.",
    "submit_date": "2024-03-15",
    "submitter_name": "Michael T端xen",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2025-03-18 01:01:23"
  },
  {
    "errata_id": "7988",
    "doc-id": "RFC9260",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": ".3.2.  Initiation",
    "orig_text": "not clearly specified  sending IP Address for INIT",
    "correct_text": "INIT can be accepted from either the Primary or Secondary IP Address",
    "notes": "Based on the dicussion here (https://mailarchive.ietf.org/arch/msg/tsvwg/KmARqJ0C3lDnyrv9Wz_IH0Rwqyc/) this errata is rejected.\n --VERIFIER NOTES-- \nBased on the dicussion here (https://mailarchive.ietf.org/arch/msg/tsvwg/KmARqJ0C3lDnyrv9Wz_IH0Rwqyc/) this errata is rejected.",
    "submit_date": "2024-06-01",
    "submitter_name": "Milen Hristov",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2025-03-18 00:46:19"
  },
  {
    "errata_id": "8387",
    "doc-id": "RFC9260",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.3.10.6",
    "orig_text": "Unrecognized Chunk: variable length\r\n   The Unrecognized Chunk field contains the unrecognized chunk from\r\n   the SCTP packet complete with Chunk Type, Chunk Flags, and Chunk\r\n   Length.",
    "correct_text": "Unrecognized Chunk: variable length\r\n   The Unrecognized Chunk field contains the unrecognized chunk from\r\n   the SCTP packet complete with Chunk Type, Chunk Flags, Chunk Length,\r\n   and Chunk Value.",
    "notes": "If the Unrecognized Chunk field of the Unrecognized Chunk Type (6) error cause only contained \"Chunk Type, Chunk Flags, and Chunk Length\" (as the RFC says) then the Cause Length would have fixed value 8. However, Unrecognized Chunk is defined as variable length, meaning that it must contain the entire unrecognized Chunk including its Chunk Value field.",
    "submit_date": "2025-04-20",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2025-04-29 14:31:39"
  },
  {
    "errata_id": "8402",
    "doc-id": "RFC9260",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.1.6",
    "orig_text": "If the T1-init timer expires at \"A\" after the INIT or COOKIE ECHO\r\nchunks are sent, the same INIT or COOKIE ECHO chunk with the same\r\nInitiate Tag (i.e., Tag_A) or State Cookie is retransmitted and the\r\ntimer is restarted.",
    "correct_text": "If the T1-init timer expires at \"A\" after the INIT chunk is sent or\r\nif the T1-cookie timer expires at \"A\" after the the COOKIE ECHO chunk\r\nis sent, the same INIT or COOKIE ECHO chunk with the same Initiate\r\nTag (i.e., Tag_A) or State Cookie is retransmitted and the timer is\r\nrestarted.",
    "notes": "T1-init timer is cancelled at \"A\" upon receipt of INIT ACK chunk from \"Z\", so it's impossible that T1-init timer expires at \"A\" after the COOKIE ECHO chunk is sent (since COOKIE ECHO chunk is immediately sent after INIT ACK chunk is received).",
    "submit_date": "2025-05-02",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
