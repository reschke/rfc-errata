[
  {
    "errata_id": "3345",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5",
    "orig_text": " Certificate exchange.[...]Completion of this exchange lights the VAL bit as described below.",
    "correct_text": "Certificate exchange.[...]Completion of this exchange lights the CERT bit as described below.",
    "notes": null,
    "submit_date": "2012-09-12",
    "submitter_name": "liyh",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3346",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5",
    "orig_text": "Identity exchange.[...] Completion of this exchange lights the IFF bit as described below.",
    "correct_text": "Identity exchange.[...] Completion of this exchange lights the VRFY bit as described below.",
    "notes": null,
    "submit_date": "2012-09-12",
    "submitter_name": "liyh",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3347",
    "doc-id": "RFC5906",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "Cookie exchange.  The request includes the public key of the server.The response includes the server cookie encrypted with this key.",
    "correct_text": "I don't know.",
    "notes": "how to decrypt?\n --VERIFIER NOTES-- \nThe decryption is carried out with the private key.   ",
    "submit_date": "2012-09-12",
    "submitter_name": "liyh",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3348",
    "doc-id": "RFC5906",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "5",
    "orig_text": "Autokey exchange.[...]Completion of this exchange lights the AUT bit as described below.",
    "correct_text": "Autokey exchange.[...]Completion of this exchange lights the AUTO bit as described below.",
    "notes": null,
    "submit_date": "2012-09-12",
    "submitter_name": "liyh",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3349",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5",
    "orig_text": "Leapseconds exchange.  [...]Completion of this exchange lights the LPT bit as described below.",
    "correct_text": "Leapseconds exchange.  [...]Completion of this exchange lights the LEAP bit as described below.",
    "notes": "refer to 11.1",
    "submit_date": "2012-09-12",
    "submitter_name": "liyh",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4026",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "10",
    "orig_text": "One or more extension fields follow the NTP packet header and the\r\n   last followed by the MAC.  The extension field parser initializes a\r\n   pointer to the first octet beyond the NTP packet header and\r\n   calculates the number of octets remaining to the end of the packet.\r\n   If the remaining length is 20 (128-bit digest plus 4-octet key ID) or\r\n   22 (160-bit digest plus 4-octet key ID), the remaining data are the\r\n   MAC and parsing is complete.  If the remaining length is greater than\r\n   22, an extension field is present.  If the remaining length is less\r\n   than 8 or not a multiple of 4, a format error has occurred and the\r\n   packet is discarded; otherwise, the parser increments the pointer by\r\n   the extension field length and then uses the same rules as above to\r\n   determine whether a MAC is present or another extension field.",
    "correct_text": "One or more extension fields follow the NTP packet header and the\r\n   last followed by the MAC.  The extension field parser initializes a\r\n   pointer to the first octet beyond the NTP packet header and\r\n   calculates the number of octets remaining to the end of the packet.\r\n   If the remaining length is 20 (128-bit digest plus 4-octet key ID) or\r\n   24 (160-bit digest plus 4-octet key ID), the remaining data are the\r\n   MAC and parsing is complete.  If the remaining length is greater than\r\n   24, an extension field is present.  If the remaining length is less\r\n   than 8 or not a multiple of 4, a format error has occurred and the\r\n   packet is discarded; otherwise, the parser increments the pointer by\r\n   the extension field length and then uses the same rules as above to\r\n   determine whether a MAC is present or another extension field.",
    "notes": "The original text stated that a MAC is present if the remaining length is 20 octets or 22 octets. This was a typo; the correct statement is that a MAC is present if the remaining length is 20 octets or *24 octets*.",
    "submit_date": "2014-06-25",
    "submitter_name": "Tal Mizrahi",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6402",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix J",
    "orig_text": "   CertificateSerialNumber\r\n   SET { ::= INTEGER\r\n           Validity ::= SEQUENCE {\r\n                   notBefore              UTCTime,\r\n                   notAfter               UTCTime\r\n           }\r\n   }",
    "correct_text": "   CertificateSerialNumber ::= INTEGER\r\n\r\n   Validity ::= SEQUENCE {\r\n                   notBefore              UTCTime,\r\n                   notAfter               UTCTime\r\n   }",
    "notes": "The original ASN.1 will not compile.",
    "submit_date": "2021-01-20",
    "submitter_name": "Russ Housley",
    "verifier_id": "165",
    "verifier_name": "Erik Kline",
    "update_date": "2022-07-27 08:36:21"
  },
  {
    "errata_id": "8204",
    "doc-id": "RFC5906",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Table of Contents",
    "orig_text": "   13. IANA Considerations ...........................................42\r\n   13. References ....................................................42\r\n      13.1. Normative References .....................................42\r\n      13.2. Informative References ...................................43",
    "correct_text": "   13. IANA Considerations ...........................................42\r\n   14. References ....................................................42\r\n      14.1. Normative References .....................................42\r\n      14.2. Informative References ...................................43",
    "notes": "Repeated Section 13 in the Table of Contents. (14 is correctly numbered in the body of the document.)",
    "submit_date": "2024-12-06",
    "submitter_name": "RFC Editor",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-12-06 10:03:41"
  }
]
