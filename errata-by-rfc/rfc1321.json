[
  {
    "errata_id": "550",
    "doc-id": "RFC1321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "In Section A.4: ",
    "orig_text": "   #define MD MD5",
    "correct_text": "   #define MD 5\n",
    "notes": "",
    "submit_date": "2001-01-19",
    "submitter_name": "Matt Borland",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "551",
    "doc-id": "RFC1321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.4",
    "orig_text": "   /* Round 3. */\r\n   /* Let [abcd k s t] denote the operation\r\n        a = b + ((a + H(b,c,d) + X[k] + T[i]) <<< s). */\r\n   /* Do the following 16 operations. */",
    "correct_text": "   /* Round 3. */\r\n   /* Let [abcd k s i] denote the operation\r\n        a = b + ((a + H(b,c,d) + X[k] + T[i]) <<< s). */\r\n   /* Do the following 16 operations. */",
    "notes": "",
    "submit_date": "2002-06-14",
    "submitter_name": "Gregory Smith",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "552",
    "doc-id": "RFC1321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.4",
    "orig_text": "   the each bit of F(X,Y,Z) will be independent",
    "correct_text": "   then each bit of F(X,Y,Z) will be independent\n",
    "notes": "",
    "submit_date": "2000-04-12",
    "submitter_name": "Michael Amling",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "553",
    "doc-id": "RFC1321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix A says:",
    "orig_text": "  printf\r\n (\"MD%d time trial. Digesting %d %d-byte blocks ...\", MD,\r\n  TEST_BLOCK_LEN, TEST_BLOCK_COUNT);",
    "correct_text": "  printf\r\n (\"MD%d time trial. Digesting %d %d-byte blocks ...\", MD,\r\n  TEST_BLOCK_COUNT, TEST_BLOCK_LEN);",
    "notes": "",
    "submit_date": "2006-11-15",
    "submitter_name": "Gennaro Prota",
    "verifier_id": "112",
    "verifier_name": "Tim Polk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "585",
    "doc-id": "RFC1321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.4",
    "orig_text": "/* Round 4. */\r\n   /* Let [abcd k s t] denote the operation\r\n        a = b + ((a + I(b,c,d) + X[k] + T[i]) <<< s). */",
    "correct_text": "/* Round 4. */\r\n   /* Let [abcd k s i] denote the operation\r\n        a = b + ((a + I(b,c,d) + X[k] + T[i]) <<< s). */",
    "notes": "",
    "submit_date": "2002-06-14",
    "submitter_name": "Gregory Smith",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6193",
    "doc-id": "RFC1321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "A.4",
    "orig_text": "  printf\r\n (\"Speed = %ld bytes/second\\n\",\r\n  (long)TEST_BLOCK_LEN * (long)TEST_BLOCK_COUNT/(endTime-startTime));",
    "correct_text": " if(endTime-startTime)\r\n printf\r\n (\"Speed = %ld bytes/second\\n\",\r\n  (long)TEST_BLOCK_LEN * (long)TEST_BLOCK_COUNT/(endTime-startTime));",
    "notes": "The result of endTime-startTime may be zero. The result is a division by zero. This check prevents this.\r\n\r\nAD Note: Technically endTime-startTime is not a bool, so a better fix would be:\r\n                if ((endTime-startTime) !=0)",
    "submit_date": "2020-05-29",
    "submitter_name": "User",
    "verifier_id": "173",
    "verifier_name": "Paul Wouters",
    "update_date": "2024-01-12 11:32:39"
  },
  {
    "errata_id": "7814",
    "doc-id": "RFC1321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Appendix A.1 says:",
    "orig_text": "/* POINTER defines a generic pointer type */\r\ntypedef unsigned char *POINTER;\r\n\r\n/* UINT2 defines a two byte word */\r\ntypedef unsigned short int UINT2;\r\n\r\n/* UINT4 defines a four byte word */\r\ntypedef unsigned long int UINT4;\r\n",
    "correct_text": "#include <stdint.h>\r\n\r\n/* POINTER defines a generic pointer type */\r\ntypedef unsigned char *POINTER;\r\n\r\n/* UINT2 defines a two byte word */\r\ntypedef uint16_t UINT2;\r\n\r\n/* UINT4 defines a four byte word */\r\ntypedef uint32_t UINT4;",
    "notes": "On some modern systems like x86-64 Linux, unsigned long int is 8 bytes, which causes the original implementation to be incorrect.\n --VERIFIER NOTES-- \nSec AD(Paul Wouters): At the time of writing, this was correct. As this document is not going to be updated in the future, there is no point updating the C code to modern or future compiler features.",
    "submit_date": "2024-02-19",
    "submitter_name": "Nilstrieb",
    "verifier_id": "173",
    "verifier_name": "Paul Wouters",
    "update_date": "2025-03-07 08:47:15"
  }
]
