[
  {
    "errata_id": "1774",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.3",
    "orig_text": "   For each distribution point (DP) in the certificate CRL distribution\r\n   points extension, for each corresponding CRL in the local CRL cache,\r\n   while ((reasons_mask is not all-reasons) and (cert_status is\r\n   UNREVOKED)) perform the following:\r\n\r\n      (a)  Update the local CRL cache by obtaining a complete CRL, a\r\n      delta CRL, or both, as required:\r\n",
    "correct_text": "   For each distribution point (DP) in the certificate CRL distribution\r\n   points extension, for each corresponding CRL in the local CRL cache,\r\n   while ((reasons_mask is not all-reasons) and (cert_status is\r\n   UNREVOKED)) perform the following:\r\n\r\n   (l)  Set the reasons_mask state variable to the union of\r\n        its previous value and the value of the interim_reasons_mask\r\n        state variable.\r\n\r\n      (a)  Update the local CRL cache by obtaining a complete CRL, a\r\n      delta CRL, or both, as required:",
    "notes": "This was reported in 2002 for RFC 3280, which this document obsoletes.  The correction did not make it in to RFC 5280, and therefore applies to RFC 5280 as well.\n --VERIFIER NOTES-- \nThe correction already appears as step (l), the last step in the loop.",
    "submit_date": "2009-05-04",
    "submitter_name": "Takashi Ito",
    "verifier_id": "111",
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3085",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "A.1",
    "orig_text": "BuiltInStandardAttributes ::= SEQUENCE {\r\n   country-name                  CountryName OPTIONAL,\r\n   administration-domain-name    AdministrationDomainName OPTIONAL,\r\n   network-address           [0] IMPLICIT NetworkAddress OPTIONAL,\r\n     -- see also extended-network-address\r\n   terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\r\n   private-domain-name       [2] PrivateDomainName OPTIONAL,\r\n   organization-name         [3] IMPLICIT OrganizationName OPTIONAL,\r\n     -- see also teletex-organization-name\r\n   numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier\r\n                                 OPTIONAL,\r\n   personal-name             [5] IMPLICIT PersonalName OPTIONAL,\r\n     -- see also teletex-personal-name\r\n   organizational-unit-names [6] IMPLICIT OrganizationalUnitNames\r\n                                 OPTIONAL }\r\n     -- see also teletex-organizational-unit-names\r\n",
    "correct_text": "BuiltInStandardAttributes ::= SEQUENCE {\r\n   country-name                  CountryName OPTIONAL,\r\n   administration-domain-name    AdministrationDomainName OPTIONAL,\r\n   network-address           [0] IMPLICIT NetworkAddress OPTIONAL,\r\n     -- see also extended-network-address\r\n   terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,\r\n   private-domain-name       [2] IMPLICIT PrivateDomainName OPTIONAL,\r\n   organization-name         [3] IMPLICIT OrganizationName OPTIONAL,\r\n     -- see also teletex-organization-name\r\n   numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier\r\n                                 OPTIONAL,\r\n   personal-name             [5] IMPLICIT PersonalName OPTIONAL,\r\n     -- see also teletex-personal-name\r\n   organizational-unit-names [6] IMPLICIT OrganizationalUnitNames\r\n                                 OPTIONAL }\r\n     -- see also teletex-organizational-unit-names\r\n",
    "notes": "Seems to me that private-domain-name ought to be tagged IMPLICIT just like everything else?\n --VERIFIER NOTES-- \nPrivateDomainName (unlike the other tagged components) is an untagged\r\nCHOICE type.\r\n\r\n\r\nQuote from X.680:\r\n\r\n'30.8       The IMPLICIT alternative shall not be used if the type defined\r\nby \"Type\" is an untagged choice type or an untagged open type or an untagged\r\n\"DummyReference\" (see ITU-T Rec. X.683 | ISO/IEC 8824-4, 8.3).'   ",
    "submit_date": "2012-01-06",
    "submitter_name": "Jim Wigginton",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3200",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1.2.2",
    "orig_text": "   The serial number MUST be a positive integer assigned by the CA to\r\n   each certificate.  It MUST be unique for each certificate issued by a\r\n   given CA (i.e., the issuer name and serial number identify a unique\r\n   certificate).  CAs MUST force the serialNumber to be a non-negative\r\n   integer.",
    "correct_text": "   The serial number MUST be a positive non-zero integer assigned by the\r\n   CA to each certificate.  It MUST be unique for each certificate issued\r\n   by a given CA (i.e., the issuer name and serial number identify a\r\n   unique certificate).  CAs MUST force the serialNumber to be a positive\r\n   integer.",
    "notes": "\"positive\" and \"non-negative\" do not mean the same thing. I used the third paragraph of the section as a tie-breaker to decide which of the two terms was intended:\r\n\r\n   Note: Non-conforming CAs may issue certificates with serial numbers\r\n   that are negative or zero.  Certificate users SHOULD be prepared to\r\n   gracefully handle such certificates.",
    "submit_date": "2012-04-24",
    "submitter_name": "David Mandelberg",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3466",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.2.1.6",
    "orig_text": "   If the subjectAltName extension is present, the sequence MUST contain\r\n   at least one entry.  Unlike the subject field, conforming CAs MUST\r\n|  NOT issue certificates with subjectAltNames containing empty\r\n   GeneralName fields.  For example, an rfc822Name is represented as an\r\n   IA5String.  While an empty string is a valid IA5String, such an\r\n   rfc822Name is not permitted by this profile. ",
    "correct_text": "   If the subjectAltName extension is present, the sequence MUST contain\r\n   at least one entry.  Unlike the subject field, conforming CAs MUST\r\n|  NOT issue certificates with subjectAltName extensions containing empty\r\n   GeneralName fields.  For example, an rfc822Name is represented as an\r\n   IA5String.  While an empty string is a valid IA5String, such an\r\n   rfc822Name is not permitted by this profile. ",
    "notes": "Certificates do not have \"subjectAltNames\" but only \"subjectAltName extensions\", which is the correct wording that is thoroughly used in the document.",
    "submit_date": "2013-01-18",
    "submitter_name": "Annie Yousar",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3579",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.2.1.4",
    "orig_text": "certificatePolicies ::= SEQUENCE SIZE (1..MAX) OF PolicyInformation",
    "correct_text": "CertificatePolicies ::= SEQUENCE SIZE (1..MAX) OF PolicyInformation",
    "notes": "ASN.1 type references must begin with an upper case character.  Schema in A.2 is correct.",
    "submit_date": "2013-04-03",
    "submitter_name": "Timothy J. Miller",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3674",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.3",
    "orig_text": "If the distribution point name is present in the IDP CRL \r\nextension and the distribution field is present in the DP, \r\nthen verify that one of the names in the IDP matches one \r\nof the names in the DP.",
    "correct_text": "If the distribution point name is present in the IDP CRL \r\nextension and the distributionPoint field is present in \r\nthe DP, then verify that one of the names in the IDP \r\nmatches one of the names in the DP.",
    "notes": "Original text refers to the non existent field \"distribution\" in DP.",
    "submit_date": "2013-06-28",
    "submitter_name": "Piyush Jain",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3693",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.2.1.10",
    "orig_text": "   DNS name restrictions are expressed as host.example.com.  Any DNS\r\n   name that can be constructed by simply adding zero or more labels to\r\n   the left-hand side of the name satisfies the name constraint.  For\r\n   example, www.host.example.com would satisfy the constraint but\r\n   host1.example.com would not.\r\n",
    "correct_text": "[Add this to the paragraph]\r\n\r\n   If an implementation extracts DNS names from the subject\r\n   distinguished name, DNS name restrictions MUST be applied\r\n   to these names as well.\r\n",
    "notes": "When used with TLS and HTTP (according to RFC 2818), section 4.2.1.10, Name Constraints, is technically a NOP that doesn't constraint the CA that has this attribute because RFC 2818 mandates processing of the common name attribute in the subject distinguished name.  Consequentially, the constraint can be bypassed by issuing a certificate without a subject alternative name.  The fix is to apply the DNS name restrictions to the relevant parts of the subject distinguished name, too, as implemented here:\r\n\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=394919\n --VERIFIER NOTES-- \nThe suggested change is not editorial; it represents a significant\r\ntechnical change. It also does not accurately reflect the intent of the WG.    ",
    "submit_date": "2013-08-12",
    "submitter_name": "Florian Weimer",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3754",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.1",
    "orig_text": "-- Naming attributes of type X520countryName (digraph from IS 3166)",
    "correct_text": "-- Naming attributes of type X520countryName (digraph from ISO 3166)",
    "notes": "typo in ASN.1 comment (\"IS\", should be \"ISO\")",
    "submit_date": "2013-10-16",
    "submitter_name": "Michal Bozon",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3986",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1.1.3",
    "orig_text": "4.1.1.3.  signatureValue\r\n\r\n   The signatureValue field contains a digital signature computed upon\r\n   the ASN.1 DER encoded tbsCertificate.  The ASN.1 DER encoded\r\n   tbsCertificate is used as the input to the signature function.  This\r\n   signature value is encoded as a BIT STRING and included in the\r\n   signature field.  The details of this process are specified for each\r\n   of the algorithms listed in [RFC3279], [RFC4055], and [RFC4491].",
    "correct_text": "4.1.1.3.  signatureValue\r\n\r\n   The signatureValue field contains a digital signature computed upon\r\n   the ASN.1 DER encoded tbsCertificate.  The ASN.1 DER encoded\r\n   tbsCertificate is used as the input to the signature function. The \r\n   output of the signature function is encoded as a BIT STRING and \r\n   included in the signatureValue field.  The details of this process \r\n   are specified for each of the algorithms listed in [RFC3279], \r\n   [RFC4055], and [RFC4491].",
    "notes": "The \"included in the signature field\" should have been \"included in the signatureValue field\".  A field called \"signature\" does exist in the 5280 structure, but it is not intended to hold the value of the result of the signature function.  The sentence was reworded for word flow (and to avoid using \"signature value\" and \"signatureValue\" in the same sentence).\r\n\r\nVerifier note:  Hold for document update to prevent potential ASN.1 breaks",
    "submit_date": "2014-05-13",
    "submitter_name": "Sandra Murphy",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:14:39"
  },
  {
    "errata_id": "4274",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.1",
    "orig_text": "-- Naming attributes of type X520CommonName:\r\n--   X520CommonName ::= DirectoryName (SIZE (1..ub-common-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520LocalityName:\r\n--   X520LocalityName ::= DirectoryName (SIZE (1..ub-locality-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520StateOrProvinceName:\r\n--   X520StateOrProvinceName ::= DirectoryName (SIZE (1..ub-state-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520OrganizationName:\r\n--   X520OrganizationName ::=\r\n--          DirectoryName (SIZE (1..ub-organization-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520OrganizationalUnitName:\r\n--   X520OrganizationalUnitName ::=\r\n--          DirectoryName (SIZE (1..ub-organizational-unit-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520Title:\r\n--   X520Title ::= DirectoryName (SIZE (1..ub-title))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520Pseudonym:\r\n--   X520Pseudonym ::= DirectoryName (SIZE (1..ub-pseudonym))\r\n",
    "correct_text": "-- Naming attributes of type X520CommonName:\r\n--   X520CommonName ::= DirectoryString (SIZE (1..ub-common-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520LocalityName:\r\n--   X520LocalityName ::= DirectoryString (SIZE (1..ub-locality-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520StateOrProvinceName:\r\n--   X520StateOrProvinceName ::=\r\n--          DirectoryString (SIZE (1..ub-state-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520OrganizationName:\r\n--   X520OrganizationName ::=\r\n--          DirectoryString (SIZE (1..ub-organization-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520OrganizationalUnitName:\r\n--   X520OrganizationalUnitName ::=\r\n--          DirectoryString (SIZE (1..ub-organizational-unit-name))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520Title:\r\n--   X520Title ::= DirectoryString (SIZE (1..ub-title))\r\n\r\n...\r\n\r\n-- Naming attributes of type X520Pseudonym:\r\n--   X520Pseudonym ::= DirectoryString (SIZE (1..ub-pseudonym))\r\n",
    "notes": "Appendix B.  ASN.1 Notes says that:\r\n\r\n   For many of the attribute types defined in [X.520], the\r\n   AttributeValue uses the DirectoryString type.  Of the attributes\r\n   specified in Appendix A, the name, surname, givenName, initials,\r\n   generationQualifier, commonName, localityName, stateOrProvinceName,\r\n   organizationName, organizationalUnitName, title, and pseudonym\r\n   attributes all use the DirectoryString type.  X.520 uses a\r\n   parameterized type definition [X.683] of DirectoryString to specify\r\n   the syntax for each of these attributes.  The parameter is used to\r\n   indicate the maximum string length allowed for the attribute.  In\r\n   Appendix A, in order to avoid the use of parameterized type\r\n   definitions, the DirectoryString type is written in its expanded form\r\n   for the definition of each of these attribute types.  So, the ASN.1\r\n   in Appendix A describes the syntax for each of these attributes as\r\n   being a CHOICE of TeletexString, PrintableString, UniversalString,\r\n   UTF8String, and BMPString, with the appropriate constraints on the\r\n   string length applied to each of the types in the CHOICE, rather than\r\n   using the ASN.1 type DirectoryString to describe the syntax.\r\n\r\nThere is nothing about DirectoryName type here. So comments in ASN.1 in\r\nA.1 are wrong and DirectoryName should be fixed to DirectoryString.\r\n\r\nFrom Expert PKIX reviewers:\r\nThe errata calls for changing \"DirectoryName\" to \"DirectoryString\" in the comments\r\nof the ASN.1. Nobody seems to disagree with this correction.\r\n\r\nThis message triggered a lot of discussion about whether to remove the string size limits.\r\nThat discussion ended with consensus to retain the size limits.",
    "submit_date": "2015-02-19",
    "submitter_name": "Ilya V. Matveychikov",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4847",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.1",
    "orig_text": "    id-qt OBJECT IDENTIFIER ::= { id-pkix 2 }\r\n            -- arc for policy qualifier types\r\n    id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }\r\n|           -- arc for extended key purpose OIDS\r\n    id-ad OBJECT IDENTIFIER ::= { id-pkix 48 }\r\n            -- arc for access descriptors",
    "correct_text": "    id-qt OBJECT IDENTIFIER ::= { id-pkix 2 }\r\n            -- arc for policy qualifier types\r\n    id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }\r\n|           -- arc for extended key purpose OIDs\r\n    id-ad OBJECT IDENTIFIER ::= { id-pkix 48 }\r\n            -- arc for access descriptors",
    "notes": "\"Object Identifiers\" are abbreviated as \"OIDs\" and not as \"OIDS\".",
    "submit_date": "2016-10-30",
    "submitter_name": "Annie Yousar",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5802",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2.1.12",
    "orig_text": "   id-kp-serverAuth             OBJECT IDENTIFIER ::= { id-kp 1 }\r\n   -- TLS WWW server authentication\r\n   -- Key usage bits that may be consistent: digitalSignature,\r\n   -- keyEncipherment or keyAgreement\r\n\r\n   id-kp-clientAuth             OBJECT IDENTIFIER ::= { id-kp 2 }\r\n   -- TLS WWW client authentication\r\n   -- Key usage bits that may be consistent: digitalSignature\r\n   -- and/or keyAgreement",
    "correct_text": "   id-kp-serverAuth             OBJECT IDENTIFIER ::= { id-kp 1 }\r\n   -- TLS server authentication\r\n   -- Key usage bits that may be consistent: digitalSignature,\r\n   -- keyEncipherment or keyAgreement\r\n\r\n   id-kp-clientAuth             OBJECT IDENTIFIER ::= { id-kp 2 }\r\n   -- TLS client authentication\r\n   -- Key usage bits that may be consistent: digitalSignature\r\n   -- and/or keyAgreement",
    "notes": "The proposed change removes the WWW part of the description. In practice these object identifiers are used for server and client applications, but not necessarily web applications. In particular:\r\n - openssl verification considers them unconditionally even if the server is not a web server or the client a web client\r\n - There is no object identifier that can be used for protocols like SMTP, IMAP, POP3, LDAP, radius, ...; in practice all these protocols are deployed with the identifiers for WWW\r\n - Standards like common criteria assume that these object identifiers are for generic server and clients [0].\r\n\r\n[0]. https://www.niap-ccevs.org/MMO/PP/-442-/#FCS_TLSC_EXT.1.1",
    "submit_date": "2019-08-06",
    "submitter_name": "Nikos Mavrogiannopoulos",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:19:26"
  },
  {
    "errata_id": "5876",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.2.1.6",
    "orig_text": "   When the subjectAltName extension contains an iPAddress, the address\r\n   MUST be stored in the octet string in \"network byte order\", as\r\n   specified in [RFC791]. ",
    "correct_text": "   When the subjectAltName extension contains an IP address, the address\r\n   MUST be stored in the iPAddress (an octet string). The address \r\n   MUST be stored in the octet string in \"network byte order\", as\r\n   specified in [RFC791]. ",
    "notes": "For email addresses and domain names, this section is very prescriptive:\r\n\r\n   When the subjectAltName extension contains an Internet mail address,\r\n   the address MUST be stored in the rfc822Name. \r\n...\r\n   When the subjectAltName extension contains a domain name system\r\n   label, the domain name MUST be stored in the dNSName…\r\n\r\nHowever, for IP addresses, it's possible to interpret the current wording as saying that *if* you happen to choose the iPAddress form for an IP address, then you must represent that as big-endian. I suspect this was a poor choice of wording and the intent was to say that you MUST use the iPAddress form for an IP address.",
    "submit_date": "2019-10-16",
    "submitter_name": "David Woodhouse",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-10-20 16:44:06"
  },
  {
    "errata_id": "5938",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.1",
    "orig_text": "The primary goal of path validation is to verify the binding between\r\na subject distinguished name or a subject alternative name and\r\nsubject public key, as represented in the target certificate, based\r\non the public key of the trust anchor. In most cases, the target",
    "correct_text": "  The primary goal of path validation is to verify the binding between\r\n| a subject distinguished name and/or a subject alternative name and\r\n  subject public key, as represented in the target certificate, based\r\n  on the public key of the trust anchor. In most cases, the target",
    "notes": "The correction conforms to the first paragraph, Sec. 6, \"Certification \r\npath processing verifies the binding between the subject distinguished\r\nname and/or subject alternative name and subject public key.\" \r\n\r\nIn addition, it is not very clear in RFC 5280, given a certificate with\r\na non-empty subject DN and an SAN extension instance (critical or \r\nnon-critical), which one (the subject DN, the SAN extension,  or they \r\nboth) should be bound to the subject public key during path validation.\r\nMore explanations are needed.",
    "submit_date": "2019-12-15",
    "submitter_name": "Yuting Chen",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:21:21"
  },
  {
    "errata_id": "5967",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.2.2.1.",
    "orig_text": "The authority information access extension indicates how to access information and services for the issuer of the certificate in which the extension appears.",
    "correct_text": "The authority information access extension indicates how to access information and services of the issuer of the certificate in which the extension appears.",
    "notes": "When you use \"access services for the issuer\" you refer to grandparent node for the certificate in certification path. But actually you mean here the parent node  in certification path (the services of the CA that has issued the certificate) and that would be  \"services of the issuer\".\n --VERIFIER NOTES-- \n\"the issuer of the certificate in which the extension appears\" is a precise indication of the parent node and does not refer to the grandparent node.",
    "submit_date": "2020-01-27",
    "submitter_name": "Maxim",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2020-02-01 21:23:49"
  },
  {
    "errata_id": "5997",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.2.1.10",
    "orig_text": "   DNS name restrictions are expressed as host.example.com.  Any DNS\r\n   name that can be constructed by simply adding zero or more labels to\r\n   the left-hand side of the name satisfies the name constraint.  For\r\n   example, www.host.example.com would satisfy the constraint but\r\n   host1.example.com would not.\r\n",
    "correct_text": "   For DNS names, restrictions MUST use the dNSName syntax in\r\n   Section 4.2.1.6.  Any DNS name that can be constructed by simply\r\n   adding zero or more labels to the left-hand side of the name satisfies\r\n   the name constraint.  For example, if the constraint contains\r\n   host.example.com, then www.host.example.com would satisfy the\r\n   constraint but host1.example.com would not.",
    "notes": "Currently, the syntax for a dNSName nameConstraint is left implicit, and thus has resulted in ambiguities in encoding and processing that have resulted in ineroperability issues.\r\n\r\nOne interpretation is that the dNSName nameConstraint must be a valid \"host name\" (as discussed in RFC 8499), which is to say must be a Fully-Qualified Domain Name in the preferred name syntax. This interpretation is supported by Section 4.2.1.6, which explicitly states that for the subjectAltName. As 4.2.1.10 does not define an exception to this (as discussed in Appendix B), the interpretation, along with the existing example, would conclude that this field uses preferred name syntax, and that \"DNS name\" here matches the \"host name\" interpretation from RFC 8499\r\n\r\nA different interpretation is that the dNSName nameConstraint uses the modified syntax similar to the URI nameConstraint. That is, it explicitly permits a leading period to indicate that one or more labels preceding is required in order to satisfy the constraint. This allows subdomains, but does not allow the base domain to match. While the language for the DNS name constraint makes it clear that a host name with no preceding period matches both that host and sub-domains, the existence of a preceding period would constraint it to only subdomains.\r\n\r\nAligning with Section 4.2.1.6 would prohibit the latter interpretation, as the preferred name syntax does not permit leading periods. Alternatively, if the latter interpretation is intended, this section would benefit from making that explicit.\r\n\r\nThis has been a source of interoperability issues, with additional information and discussion captured at:\r\n- https://github.com/golang/go/issues/16347\r\n- https://rt.openssl.org/Ticket/Display.html?id=3562\r\n\r\nWhile \"running code\" has aligned in being permissive with a leading period, implementations have gone and seemingly aligned on a third interpretation:\r\n\r\nThe syntax of a dNSName MUST be as described in Section 4.2.1.6, with the exception that it MAY contain a leading period. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name, ignoring any leading period, satisfies the name constraint.\r\n\r\nThis seems to support implementations expecting the first interpretation in the certificates they receive, and seeing leading period as an encoding mistake, not an explicit desire for the second interpretation.",
    "submit_date": "2020-02-27",
    "submitter_name": "Ryan Sleevi",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2020-03-16 22:13:33"
  },
  {
    "errata_id": "6414",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2.1.12",
    "orig_text": "   id-kp-serverAuth             OBJECT IDENTIFIER ::= { id-kp 1 }\r\n   -- TLS WWW server authentication\r\n   -- Key usage bits that may be consistent: digitalSignature,\r\n   -- keyEncipherment or keyAgreement",
    "correct_text": "   id-kp-serverAuth             OBJECT IDENTIFIER ::= { id-kp 1 }\r\n   -- TLS WWW server authentication\r\n   -- Key usage bits that may be consistent: digitalSignature\r\n   -- and/or (keyEncipherment or keyAgreement)",
    "notes": "In https://github.com/zmap/zlint/issues/553 there's been some disagreement and confusion about how to correctly interpret the \"or\" in the Original Text.  \"You can only set one of these three bits\" is one interpretation, and it's hard to argue that this interpretation is inconsistent with the Original Text.\r\n\r\nHowever, digitalSignature+keyEncipherment makes sense for an RSA leaf certificate, and digitalSignature+keyAgreement makes sense for an ECC leaf certificate.  Both are widely used, to enable ephemeral and non-ephemeral TLS ciphersuites in conjunction with a single server certificate.\r\n\r\nGiven that RFC5480 section 3 explicitly permits digitalSignature+keyAgreement in an ECC leaf certificate, I think it's likely that my proposed Corrected Text conveys the RFC5280 authors' intended meaning.",
    "submit_date": "2021-01-28",
    "submitter_name": "Rob Stradling",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:27:06"
  },
  {
    "errata_id": "6830",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Appendix A.1",
    "orig_text": "-- Note - upper bounds on string types, such as TeletexString, are\r\n-- measured in characters.  Excepting PrintableString or IA5String, a\r\n-- significantly greater number of octets will be required to hold\r\n-- such a value.  As a minimum, 16 octets, or twice the specified\r\n-- upper bound, whichever is the larger, should be allowed for\r\n-- TeletexString.  For UTF8String or UniversalString at least four\r\n-- times the upper bound should be allowed.",
    "correct_text": "-- Note - upper bounds on string types, such as TeletexString, are\r\n-- measured in characters.  Excepting PrintableString or IA5String, a\r\n-- significantly greater number of octets will be required to hold\r\n-- such a value.  As a minimum, 16 octets, or twice the specified\r\n-- upper bound, whichever is the larger, should be allowed for\r\n-- TeletexString.  For UTF8String or UniversalString, four\r\n-- times the upper bound should be allowed.",
    "notes": "\"at least four times\" is likely a holdover from RFC 3280, as the same text exists in that RFC. In RFC 3280, the definition of UTF-8 in UTF8String was normatively referencing RFC 2279, which allowed for a maximum of 6 octets to represent a single Unicode character in UTF-8. However, RFC 5280 was updated to normatively reference RFC 3629, which restricts the allowed set of characters in a UTF-8 string to match those allowed in UTF-16 (i.e., the BMP and 16 supplementary planes as opposed to all 32k planes). As a result, the maximum length for a single RFC 3629 UTF-8 character is 4 octets, rendering the guidance of \"at least four times\" wholly unnecessary; \"four times\" is sufficient in all cases.\n --VERIFIER NOTES-- \n   Verifier Notes:  'At least four times' includes 'four times'.",
    "submit_date": "2022-02-02",
    "submitter_name": "Corey Bonnell",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:31:51"
  },
  {
    "errata_id": "7164",
    "doc-id": "RFC5280",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.2.5",
    "orig_text": "   If the distributionPoint field is absent, the CRL MUST contain\r\n   entries for all revoked unexpired certificates issued by the CRL\r\n   issuer, if any, within the scope of the CRL.",
    "correct_text": "   If the distributionPoint field is absent, the CRL MUST contain\r\n   entries for all revoked unexpired certificates issued by the CRL\r\n   issuer.",
    "notes": "The removed phrase does not appear in the original text that this requirement is derived from, ITU-T Rec. X.509 (08/2005) Section 8.6.2.2: \"If the issuing distribution point field, the AA issuing distribution point field, and the CRL scope field are all absent, the CRL shall contain entries for all revoked unexpired public-key certificates issued by the CRL issuer.\"\r\n\r\nThe removed phrase does not serve to create a stricter requirement; rather it creates a looser requirement which allows a CRL which does contain entries for all revoked unexpired certificates *within its scope* to not include the distributionPoint field. Given that the distributionPoint field serves an important security purpose in preventing substitution attacks, it is unlikely that this loosening was the intent of the original authors.\n --VERIFIER NOTES-- \n   Verifier notes:  Discussed here:  https://mailarchive.ietf.org/arch/msg/pkix/YuErTrIPYt7MzTKE6R_KRqNouto/",
    "submit_date": "2022-10-14",
    "submitter_name": "Aaron Gable",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:35:05"
  },
  {
    "errata_id": "7634",
    "doc-id": "RFC5280",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "   Certificate  ::=  SEQUENCE  {\r\n        tbsCertificate       TBSCertificate,\r\n        signatureAlgorithm   AlgorithmIdentifier,\r\n        signatureValue       BIT STRING  }",
    "correct_text": "   Certificate  ::=  SEQUENCE  {\r\n        tbsCertificate       TBSCertificate,\r\n        signatureAlgorithm   AlgorithmIdentifier,\r\n        signature            BIT STRING  }",
    "notes": "The definition in section 4.1 disagrees with the definition in appendix A.1 (page 116) on whether the name of the field containing the signature is \"signatureValue\" or \"signature\". This error appears in RFC 3280 and RFC 2459 as well.\r\n\r\nThe versions of X.509 in force when RFCs 2459, 3280, and 5280 were published use neither of those names. (Those versions of X.509 considered a signature to be an encrypted hash and called the field \"encrypted\".) The current version, ITU-T X.509 (10/2019), defines this field to be \"signature\" in section 6.2.1. (X.509 defines the Certificate type using a component type of SIGNATURE, which has two fields named \"algorithmIdentifier\" and \"signature\".)\r\n\r\nIn addition to changing the field name in the definition of the Certificate type in section 4.1, the title and text of subsection 4.1.1.3 should be updated to replace \"signatureValue\" with \"signature\".\r\n\r\nVerifier note:  Hold for document update to avoid changes that potentially break ASN.1",
    "submit_date": "2023-09-08",
    "submitter_name": "Nick Harper",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:13:01"
  },
  {
    "errata_id": "7658",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "7.1",
    "orig_text": "The hyperlink to \"Section 2.6.1\" of RFC 4158 in this text is incorrect:\r\n\r\n   *  In step 6, Insignificant Character Removal, perform white space\r\n      compression as specified in Section 2.6.1, Insignificant Space\r\n      Handling, of [RFC4518].\r\n\r\nIt currently points to https://www.rfc-editor.org/rfc/rfc5280#section-2.6.1",
    "correct_text": "It should point to https://www.rfc-editor.org/rfc/rfc4518#section-2.6.1",
    "notes": "Simple fix to correct an incorrect hyperlink.",
    "submit_date": "2023-09-26",
    "submitter_name": "Sean Mullan",
    "verifier_id": "162",
    "verifier_name": "Roman Danyliw",
    "update_date": "2024-01-11 13:39:58"
  },
  {
    "errata_id": "7661",
    "doc-id": "RFC5280",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.5",
    "orig_text": "      (g)  cross-certification:  Two CAs exchange information used in\r\n           establishing a cross-certificate.  A cross-certificate is a\r\n           certificate issued by one CA to another CA that contains a CA\r\n           signature key used for issuing certificates.",
    "correct_text": "      (g)  cross-certification:  Two CAs exchange information used in\r\n           establishing a cross-certificate.",
    "notes": "The removed sentence is factually inaccurate and misleading: \"A cross-certificate is a certificate issued by one CA to another CA that contains a CA signature key used for issuing certificates.\" \r\nA \"signature key used for issuing certificates\" would be a private key.  A certificate simply does not contain a private key.  A definition of \"cross-certificate\" for the purpose of this RFC is already provided in section 3.2, so there is no point in elaborating here.  \r\n(The definition given in section 3.2 conflicts with the narrower, and more generally used, definition given in RFC 4949, but that is beside the point.)",
    "submit_date": "2023-09-28",
    "submitter_name": "Benjamin Strauss",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-10-29 08:17:30"
  }
]
