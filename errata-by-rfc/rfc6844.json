[
  {
    "errata_id": "3528",
    "doc-id": "RFC6844",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "s7.3",
    "orig_text": "Reserved>",
    "correct_text": "Reserved",
    "notes": "The additional \">\" is unnecessary.",
    "submit_date": "2013-03-10",
    "submitter_name": "Sean Turner",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3532",
    "doc-id": "RFC6844",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "s7.3",
    "orig_text": "1-7          Reserved                 [RFC6844]\r\n",
    "correct_text": "1-7          Unassigned              [RFC6844]\r\n",
    "notes": "\"Unassigned\" is better than Reserved.",
    "submit_date": "2013-03-10",
    "submitter_name": "Sean Turner",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3547",
    "doc-id": "RFC6844",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "s7.2",
    "orig_text": "auth         Reserved                [HB2011]\r\npath         Reserved                [HB2011]\r\npolicy       Reserved                [HB2011]",
    "correct_text": "auth         Reserved                [RFC6844]\r\npath         Reserved                [RFC6844]\r\npolicy       Reserved                [RFC6844]",
    "notes": "Better to use the datatracker history to find the values than the expired drafts.",
    "submit_date": "2013-03-15",
    "submitter_name": "Sean Turner",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4061",
    "doc-id": "RFC6844",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.1",
    "orig_text": "Tag values SHOULD NOT contain any other characters.",
    "correct_text": "Tag values MUST NOT contain any other characters.",
    "notes": "Since the text representation of the tag field is unquoted, spaces and other whitespace must be explicitly excluded.  Otherwise, it is possible to create a CAA record whose text representation cannot be parsed.\n --VERIFIER NOTES-- \n   This really gets down to MUST/SHOULD theology and whether you consider\r\nthe zone file syntax at the same level of conformance as DNS protocol.\r\n\r\nThe author believes SHOULD is correct here. The protocol on the wire will work\r\njust fine if someone breaks this advice.\r\n\r\nYes, it might well break some zone file parsers. But those aren't on\r\nthe wire and that type of incompatibility is exactly what I would\r\nexpect from violating a SHOULD.\r\n\r\nCode has to work if someone creates a RR with a non conformant label,\r\ntherefore a MUST does not saves any work. And the only circumstance in\r\nwhich the editor can imagine someone using it would be where they wanted a\r\nlabel that could not be inserted through normal zone files.\r\n\r\nPhil Hallam-Baker certainly doesn't want people writing parsers to strip out records\r\nwith non conformant labels. So, stick with SHOULD.",
    "submit_date": "2014-07-24",
    "submitter_name": "Evan Hunt",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4062",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5.1.1",
    "orig_text": "Value:  Is the <character-string> encoding of the value field as\r\nspecified in [RFC1035], Section 5.1.",
    "correct_text": "Value:  The value field, expressed as a contiguous set of characters\r\nwithout interior spaces, or as a quoted string.  See the the\r\n<character-string> format specified in [RFC1035], Section 5.1,\r\nbut note that the value field contains no length byte and is not\r\nlimited to 255 characters.",
    "notes": "<character-string> is defined in RFC 1035 as being limited to 255 characters\r\npreceded by a length byte. Saying the field is encoded as a <character-string>\r\ncreates ambiguity as to whether the value field is intended to be size-limited.\r\n\r\nRFC author agreed that it was okay to make this more explicit with the proposed text.",
    "submit_date": "2014-07-24",
    "submitter_name": "Evan Hunt",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4070",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3",
    "orig_text": "   $ORIGIN example.com\r\n   .       CAA 0 issue \"ca.example.net\"\r\n",
    "correct_text": "   $ORIGIN example.com.\r\n           CAA 0 issue \"ca.example.net\"\r\n",
    "notes": "The original text is obviously incorrect (or at least something not really intended) in that the owner name is absolute.  It just doesn't make sense to use $ORIGIN if we use an absolute owner name for the actual RR.  The \"corrected text\" is one representation of what I guess the author really intended.\r\n\r\nThere are other instances of the same kind of this error in this section, but I don't bother to list all of them as it should be obvious and the sense of the \"fix\" should be the same.\r\n\r\nFrom the verification of the errata:\r\nThe errata is correct as reported with the following caveat, some implementations of DNS presentation format assume all $ORIGIN statements are Fully Qualified Domain Names,\r\nbut others do not and those will take the domain name and append to it current origin. \r\nThus the trailing dot removes any ambiguity that the name specified is FQDN. ",
    "submit_date": "2014-08-05",
    "submitter_name": "JINMEI Tatuya",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4515",
    "doc-id": "RFC6844",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "   o  If A(X) is not null, and R(A(X)) is not empty, then R(X) =\r\n      R(A(X)), otherwise\r\n",
    "correct_text": "   o  If A(X) is not null, and CAA(A(X)) is not empty, then R(X) =\r\n      CAA(A(X)), otherwise\r\n",
    "notes": "R is the algorithm being described here, so R(A(X)) means a recursive search on the CNAME target, including its parents. However, the example that follows, Parent(Alias(x.y.z)) is not part of the search. Either the algorithm is incorrectly specified, or the example is incomplete.\r\n\r\nWhile this change is correct, it has already been accepted with HFDU in errata 5065.\n --VERIFIER NOTES-- \n   Errata 5065 was accepted first and covers this error.",
    "submit_date": "2015-10-29",
    "submitter_name": "Tom Clegg",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4922",
    "doc-id": "RFC6844",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "The search for a CAA record climbs the DNS name tree from the\r\n   specified label up to but not including the DNS root '.'.",
    "correct_text": "The search for a CAA record must not climb the DNS name tree from the\r\n   specified label up.",
    "notes": "Obviously it does not make any sense to climb up. If there would be CAA record published for the \"com\" TLD, than it would make what relation to the CAA of the \"example.com\" domain? From an other viewpoint: all CAs are going to check the \"com\" TLD for CAA record if a given organization has no CAA record published in its own domain?\r\nAnother, more practical example: \"example.com\" needs a certificate for his top domain (https://example.com/), so it decides to publish the CAA record to enforce the security. Doing this it may unknowingly affect the renewal of the certificate for the wellhidden.hr.example.com where the hr.example.com domain is under different administrative authority than example.com domain itself.\n --VERIFIER NOTES-- \n   This would be a change and hence is not an erratum",
    "submit_date": "2017-02-03",
    "submitter_name": "Attila Bruncs√°k",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5065",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "   Let CAA(X) be the record set returned in response to performing a CAA\r\n   record query on the label X, P(X) be the DNS label immediately above\r\n   X in the DNS hierarchy, and A(X) be the target of a CNAME or DNAME\r\n   alias record specified at the label X.\r\n\r\n   o  If CAA(X) is not empty, R(X) = CAA (X), otherwise\r\n\r\n   o  If A(X) is not null, and R(A(X)) is not empty, then R(X) =\r\n      R(A(X)), otherwise\r\n\r\n   o  If X is not a top-level domain, then R(X) = R(P(X)), otherwise\r\n\r\n   o  R(X) is empty.",
    "correct_text": "   Let CAA(X) be the record set returned in response to performing a CAA\r\n   record query on the label X, P(X) be the DNS label immediately above\r\n   X in the DNS hierarchy, and A(X) be the target of a CNAME or DNAME\r\n   alias record chain specified at the label X.\r\n \r\n   o  If CAA(X) is not empty, R(X) = CAA (X), otherwise\r\n \r\n   o  If A(X) is not null, and CAA(A(X)) is not empty, then R(X) =\r\n      CAA(A(X)), otherwise\r\n \r\n   o  If X is not a top-level domain, then R(X) = R(P(X)), otherwise\r\n \r\n   o  R(X) is empty.\r\n \r\n  Thus, when a search at node X returns a CNAME record, the CA will\r\n  follow the CNAME record chain to its target. If the target label \r\n  contains a CAA record, it is returned.\r\n\r\n  ?O?therwise, the CA continues the search at\r\n  the parent of node X.\r\n \r\n  Note that the search does not include the parent of a target of a\r\n  CNAME record (except when the CNAME points back to its own path).\r\n \r\n  To prevent resource exhaustion attacks, CAs SHOULD limit the length of\r\n  CNAME chains that are accepted. However CAs MUST process CNAME\r\n  chains that contain 8 or fewer CNAME records.",
    "notes": "This is the updated errata to replace the ones previously deleted. It has been reviewed by all the parties concerned. Since this is a breaking change, this will have to go to hold for document update. The LAMPS working group is currently considering a more radical re-working of the CAA discovery scheme as a work item for its new charter.\r\n\r\nI will be in Prague to discuss...",
    "submit_date": "2017-07-10",
    "submitter_name": "Phillip Hallam-Baker",
    "verifier_id": "156",
    "verifier_name": "EKR",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5090",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "2.2",
    "orig_text": "   Resource Record Set (RRSet):  A set of Resource Records or a\r\n      particular owner name, class, and type.  The time to live on all\r\n      RRs with an RRSet is always the same, but the data may be\r\n      different among RRs in the RRSet.",
    "correct_text": "   Resource Record Set (RRSet):  A set of Resource Records for a\r\n      particular owner name, class, and type.  The time to live on all\r\n      RRs with an RRSet is always the same, but the data may be\r\n      different among RRs in the RRSet.",
    "notes": "Changed 'or' to 'for', the former not making sense in this context and being a likely typo.",
    "submit_date": "2017-08-18",
    "submitter_name": "Mak Kolybabi",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5091",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4",
    "orig_text": "   o  If CAA(X) is not empty, R(X) = CAA (X), otherwise",
    "correct_text": "   o  If CAA(X) is not empty, R(X) = CAA(X), otherwise",
    "notes": "Remove unnecessary space after second CAA, making appearances of CAA(X) consistent throughout the section.\r\nThis builds on errata 5065, where this error wasn't fixed.",
    "submit_date": "2017-08-18",
    "submitter_name": "Mak Kolybabi",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5097",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "Let CAA(X) be the record set returned in response to performing a CAA\r\nrecord query on the label X, P(X) be the DNS label immediately above\r\nX in the DNS hierarchy, and A(X) be the target of a CNAME or DNAME\r\nalias record specified at the label X.",
    "correct_text": "Let CAA(X) be the record set returned in response to performing a CAA\r\nrecord query on the label X, P(X) be the DNS label immediately above\r\nX in the DNS hierarchy, and A(X) be the target of a CNAME\r\nalias record specified at the label X.",
    "notes": "As currently worded, section 4 tells the CA to look up a DNAME record specified *at* the label X, and if one is found, look up a CAA record at the DNAME's target.  This is contrary to the behavior of DNAME as specified in RFC 6672, which is to redirect names subordinate of the DNAME but not the DNAME itself.\r\n\r\nSince DNAMEs cause CNAMEs to be synthesized for subordinate names, there is no need for implementers of CAA to care about the presence of DNAMEs at all, so this erratum simply removes any mention of DNAME.",
    "submit_date": "2017-08-25",
    "submitter_name": "Andrew Ayer",
    "verifier_id": "156",
    "verifier_name": "EKR",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5200",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3",
    "orig_text": "<Issuer Domain Name> [; <name>=<value> ]*",
    "correct_text": "<Issuer Domain Name> [; [ <name>=<value> ]* ]",
    "notes": "For values of the \"issue\" and \"issuewild\" property tags, section 3 specifies [; <name>=<value> ]* (which seems to indicate that every parameter is preceded by a semicolon) but the grammar in section 5.2 specifies [\";\" *(space parameter) space] (in which parameters are separated by whitespace and the entire list is preceded by a single semicolon). Presumably, the formal grammar is definitive and the preceding shorthand should be updated to better express it.",
    "submit_date": "2017-12-08",
    "submitter_name": "Richard Gibson",
    "verifier_id": "156",
    "verifier_name": "EKR",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5244",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5.2",
    "orig_text": "CAA authorizations are additive; thus, the result of specifying both\r\nthe empty issuer and a specified issuer is the same as specifying\r\njust the specified issuer alone.",
    "correct_text": "CAA authorizations are additive; thus, the result of specifying both\r\nthe empty issuer and a specified issuer is the same as specifying\r\njust the specified issuer alone.  A non-empty CAA record set that does\r\nnot contain an issue property tag is authorization to any certificate\r\nissuer to issue for the corresponding domain, provided that no\r\nrecords in the CAA record set otherwise prohibit issuance.",
    "notes": "The current wording in the RFC does not clearly state how non-empty CAA record sets which do not contain any \"issue\" property tags should be handled in terms of whether or not such record sets authorize issuance. The additional wording clarifies the correct handling of this case.",
    "submit_date": "2018-01-26",
    "submitter_name": "Corey Bonnell",
    "verifier_id": "156",
    "verifier_name": "EKR",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5452",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "The EBNF (scattered throughout the document) does not match the examples\r\nnor the prose. It is also ambiguous in places (allowing two different\r\ninterpretations of a parameter list), and nonsensical in others (such\r\nas the handling of whitespace).",
    "correct_text": "The EBNF should be corrected as follows:\r\n\r\nissuevalue = *WSP [domain *WSP] [\";\" *WSP [parameters *WSP]]\r\n\r\ndomain = label *(\".\" label)\r\nlabel = (ALPHA / DIGIT) *( *(\"-\") (ALPHA / DIGIT))\r\n\r\nparameters = (parameter *WSP \";\" *WSP parameters) / parameter\r\nparameter = tag *WSP \"=\" *WSP value\r\ntag = (ALPHA / DIGIT) *(ALPHA / DIGIT)\r\nvalue = *(%x21-3A / %x3C-7E)\r\n",
    "notes": "[EBNF, text, examples do not match.]\r\n\r\nI am proposing this on behalf of the IETF ACME WG. We want to submit a standards-track document, but the current CAA specification is broken. We know it is being revised, but we do not want to wait.  Our AD has said to submit the errata and he will accept it.",
    "submit_date": "2018-08-06",
    "submitter_name": "Rich Salz",
    "verifier_id": "156",
    "verifier_name": "EKR",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6715",
    "doc-id": "RFC6844",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "",
    "orig_text": "If the domain name holder specifies one or more iodef properties, a\r\ncertificate issuer MAY report invalid certificate requests to that\r\naddress.",
    "correct_text": "If the domain name holder specifies one or more iodef properties, a\r\ncertificate issuer MAY report invalid certificate requests to those\r\naddresses.",
    "notes": "\"address\" should be plural.\r\n\r\nNote:  This has been corrected in RFC 8659",
    "submit_date": "2021-10-18",
    "submitter_name": "Jaime Hablutzel",
    "verifier_id": "179",
    "verifier_name": "Deb Cooley",
    "update_date": "2025-01-24 04:18:15"
  }
]
