[
  {
    "errata_id": "1766",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.4.1",
    "orig_text": "If the\r\nstring can be represented as a dot-atom (that is, it contains no\r\ncharacters other than atext characters or \".\" surrounded by atext\r\ncharacters), then the dot-atom form SHOULD be used and the quoted-\r\nstring form SHOULD NOT be used.",
    "correct_text": "If the\r\nstring can be represented as a dot-atom (that is, it contains no \r\ncharacters other than atext characters or one or more of \".\" \r\nsurrounded by atext characters), then the dot-atom form SHOULD \r\nbe used and the quoted-string form SHOULD NOT be used.",
    "notes": "Based on sec. 3.2.3 (\"dot-atom = [CFWS] dot-atom-text [CFWS]\" (brackets so in original) & \"dot-atom-text = 1*atext *('.' 1*atext)\") and on appx. A.1.2 (the example \"john.q.public@example.com\").",
    "submit_date": "2009-04-16",
    "submitter_name": "Nick Levinson",
    "verifier_id": "2",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "1905",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "   obs-unstruct    =   *((*LF *CR *(obs-utext *LF *CR)) / FWS)",
    "correct_text": "   obs-unstruct    =   *( (*CR 1*(obs-utext / FWS)) / 1*LF ) *CR",
    "notes": "It looks to me, as if the rule for obs-unstruct matches any US_ASCII character sequence, and is, hence, either overly complicated, or simply wrong.  For example: CR LF 'A' is matched by the original rule (loop matches CR first, then LF 'A').  If I understand the accompaying text right, the intention was to allow for reversed sequences LF CR, as well as bare CR and LF sequences, but strictly forbid any occurrence of CR LF (in that order).  This would be expressed by my rule, that basically states that any sequence of CR either is at the end, or is followed by a non-LF, or an FWS\r\n\r\n[Alexey: removed unchanged ABNF rules, corrected an obvious error in the description of the change.]",
    "submit_date": "2009-10-09",
    "submitter_name": "Wolf Lammen",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "1906",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "   obs-body        =   *((*LF *CR *((%d0 / text) *LF *CR)) / CRLF)",
    "correct_text": "   obs-body        =   *(%d0-127)",
    "notes": "The regular expression for obs-body is overly complex and can be simplified as suggested. Alternatively, one could use\r\n*(d0 /text / LF / CR)\r\nshould the difference to 'text' be emphazised.\r\n\r\n[Alexey: I've edited this to only show 1 issue per erratum.]",
    "submit_date": "2009-10-10",
    "submitter_name": "Wolf Lammen",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "1908",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2",
    "orig_text": "   In the obsolete syntax, any amount of folding white space MAY be\r\n   inserted where the obs-FWS rule is allowed.  This creates the\r\n   possibility of having two consecutive \"folds\" in a line, and\r\n   therefore the possibility that a line which makes up a folded header\r\n   field could be composed entirely of white space.\r\n\r\n   obs-FWS         =   1*WSP *(CRLF 1*WSP)\r\n",
    "correct_text": "   In the obsolete syntax, any amount of folding white space MAY be\r\n   inserted where the obs-FWS rule is allowed.  This creates the\r\n   possibility of having two consecutive \"folds\" in a line, and\r\n   therefore the possibility that a line which makes up a folded header\r\n   field could be composed entirely of white space.\r\n\r\n   obs-FWS         =   1*([CRLF] WSP)\r\n",
    "notes": "If I understand the relevant portions of RFC 822 right (notably section 3.1.1\r\n[\"The general rule is that wherever there may be linear-white-space...\r\na CRLF followed by ... LWSP-char(s) may instead be inserted\"], along with\r\nsection 3.1.4, section 3.3), it is permitted to extend a phrase\r\n  atom SPACE atom\r\nby inserting linear-white-space (CRLF SPACE CRLF SPACE) instead, yielding:\r\n  atom CRLF SPACE CRLF SPACE atom\r\nHowever, this is not recognized by the rules of RFC 5322, because the new\r\nsyntax forbids consecutive foldings, whereas obs-FWS requires a leading\r\nwhite-space character at the beginning.",
    "submit_date": "2009-10-11",
    "submitter_name": "Wolf Lammen",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2104",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "obs-unstruct    =   *((*LF *CR *(obs-utext *LF *CR)) / FWS)",
    "correct_text": "obs-unstruct    =   *(*LF *CR (obs-utext / FWS)) *LF *CR\r\n                    ;The CR of a following CRLF MUST NOT be consumed.",
    "notes": "[I was notified, that errata report 1766 and 1908 has been verified, but apparently, report 1905 was left undecided.  I am a bit concerned, because this report points to a true defect of RFC 5322, so, maybe, a clearer reasoning helps.  This report is meant to replace my former posting 1905.]\r\n\r\nThe <obs-unstruct> rule covers field bodies of unstructured fields (as declared in section 2.2.1), that conform to obsoleted RFC 2822 or RFC 822.  It is only to be used for downward compatibility when reading messages.  It corresponds to <text> in RFC 822 and <obs-utext> in RFC 2822.  In a conforming message, an unstructured field body is always followed by a field delimiting non-folding CRLF.\r\n\r\n<obs-unstruct> is equivalent to *(d0-d127), so the CRLF delimiting the field is made part of the field body, as is the rest of the header section.\r\n\r\nSo my proposal refines the rule: Use any, possibly empty, sequence of ASCII characters, as long as it does not contain a CRLF outside of a folding white space.\r\n\r\nThere is a nuisance left: when applied possessively, the CR of the adjacent field delimiter CRLF is consumed as well.  This cannot be overcome, no matter how you rewrite the rule, because the ABNF in RFC 5324 is not rich enough to express something like \"consume all but one CR\".  A higher level construct like \"obs-unstruct CRLF\" must enforce a back-tracking step on the part of <obs-unstruct> in order to match.  That is why I added the comment.\n --VERIFIER NOTES-- \nDuplicate of erratum 1905, which I believe is correct as stated.   ",
    "submit_date": "2010-04-02",
    "submitter_name": "Wolf Lammen",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2515",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Appendix A.5",
    "orig_text": "From: Pete(A nice \\) chap) <pete(his account)@silly.test(his host)>",
    "correct_text": "From: Pete(A nice \\) chap) <pete@silly.test(his host)>",
    "notes": "Section 3.4.1: \"Comments and folding white space SHOULD NOT be used around the \"@\" in the addr-spec.\"",
    "submit_date": "2010-09-10",
    "submitter_name": "Michael Rushton",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2579",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Appendix A.5",
    "orig_text": "   To:A Group(Some people)\r\n        :Chris Jones <c@(Chris's host.)public.example>,\r\n            joe@example.org,\r\n     John <jdoe@one.test> (my dear friend); (the end of the group)",
    "correct_text": "   To:A Group(Some people)\r\n        :Chris Jones <c@public.example(Chris's host.)>,\r\n            joe@example.org,\r\n     John <jdoe@one.test> (my dear friend); (the end of the group)",
    "notes": "Section 3.4.1: \"Comments and folding white space SHOULD NOT be used around the \"@\" in the addr-spec.\"",
    "submit_date": "2010-10-18",
    "submitter_name": "Dominic Sayers",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2619",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.4.1",
    "orig_text": "      It is therefore\r\n      incumbent upon implementations to conform to the syntax of\r\n      addresses for the context in which they are used.",
    "correct_text": "      Implementations MUST conform to the syntax of\r\n      addresses for the context in which they are used.",
    "notes": "The phrase \"incumbent upon\" is not defined in RFC 2119. If another RFC defines a standard with the force of \"MUST\", then it is not an option for an implementation to ignore that standard. Therefore, implementations MUST conform to their syntax.\r\n\r\nThis rewording clarifies the recognition that should be given to the RFCs that inform the particular context of the implementation.\n --VERIFIER NOTES-- \nConforming (or failing to conform) to the syntax of another specification does not affect the interoperability of *this* specification. Therefore, RFC 2119 language is not appropriate. However, even if it could be argued that it was, an erratum is not the appropriate place to make such a change.   ",
    "submit_date": "2010-11-10",
    "submitter_name": "Dominic Sayers",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2620",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.4.1",
    "orig_text": "   Comments and folding white space\r\n   SHOULD NOT be used around the \"@\" in the addr-spec.",
    "correct_text": "   Comments and folding white space\r\n   SHOULD NOT be used around the \"@\" in the addr-spec. Comments and\r\n   folding white space at the beginning and end of an addr-spec are\r\n   semantically invisible.",
    "notes": "Section 3.2.2 says\r\n\r\n   \"Runs of FWS, comment, or CFWS that occur between lexical tokens in a\r\n   structured header field are semantically interpreted as a single\r\n   space character.\"\r\n\r\nbut a leading or trailing space on an addr-spec would prevent it being interpreted as a valid RFC 5321 Mailbox (see http://tools.ietf.org/html/rfc5321#section-4.1.2).\r\n\r\nThis is important because this section of RFC 5322 also says\r\n\r\n      \"It is therefore\r\n      incumbent upon implementations to conform to the syntax of\r\n      addresses for the context in which they are used.\"\r\n\r\nEither the leading and trailing CFWS should be semantically \"invisible\" or additional logic is required for implementations to transform an RFC 5322 addr-spec into an RFC 5321 Mailbox.\r\n\r\nNote: It may be true that leading and trailing CFWS is not \"between lexical tokens\". If so then it should be made clear what semantic interpretation to put on it in this case.\n --VERIFIER NOTES-- \n1. \"addr-spec\" does not appear in 5321. 5321 and 5322 have two different definitions for \"Mailbox\" and \"mailbox\" respectively, and that is a topic for an update of these documents, not for an erratum.\r\n\r\n2. This report does not want the CFWS to be *semantically* invisible; it wants it to be *syntactically* invisible when moving an addr-spec from a 5322 context to a 5321 context. This document does not discuss this use.",
    "submit_date": "2010-11-10",
    "submitter_name": "Dominic Sayers",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2726",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.3",
    "orig_text": "   The zone specifies the offset from Coordinated Universal Time (UTC,\r\n   formerly referred to as \"Greenwich Mean Time\") that the date and\r\n   time-of-day represent.  The \"+\" or \"-\" indicates whether the time-of-\r\n   day is ahead of (i.e., east of) or behind (i.e., west of) Universal\r\n   Time.  The first two digits indicate the number of hours difference\r\n   from Universal Time, and the last two digits indicate the number of\r\n   additional minutes difference from Universal Time.  (Hence, +hhmm\r\n   means +(hh * 60 + mm) minutes, and -hhmm means -(hh * 60 + mm)\r\n   minutes).  The form \"+0000\" SHOULD be used to indicate a time zone at\r\n   Universal Time.  Though \"-0000\" also indicates Universal Time, it is\r\n   used to indicate that the time was generated on a system that may be\r\n   in a local time zone other than Universal Time and that the date-time\r\n   contains no information about the local time zone.",
    "correct_text": "   The zone specifies the offset from Coordinated Universal Time (UTC) \r\n   that the date and time-of-day represent.\r\n   The \"+\" or \"-\" indicates whether the time-of-\r\n   day is ahead of (i.e., east of) or behind (i.e., west of) UTC.\r\n   The first two digits indicate the number of hours difference\r\n   from UTC, and the last two digits indicate the number of\r\n   additional minutes difference from UTC.  (Hence, +hhmm\r\n   means +(hh * 60 + mm) minutes, and -hhmm means -(hh * 60 + mm)\r\n   minutes).  The form \"+0000\" SHOULD be used to indicate a time zone at\r\n   UTC.  Though \"-0000\" also indicates UTC, it is\r\n   used to indicate that the time was generated on a system that may be\r\n   in a local time zone other than UTC and that the date-time\r\n   contains no information about the local time zone.",
    "notes": "It is not correct to say that UTC was formerly referred to as GMT. I think this was an editorial mistake: RFC 822 did not use the term UTC and said \"Universal  Time (formerly called Greenwich Mean Time)\" which is reasonably correct for UT without a suffix.\r\n\r\nFor the purposes of RFC 5322 and for consistency with RFC 3339 and ISO 8601 I think it is best to refer to UTC throughout - though see the next erratum for notes on the obsolete syntax.",
    "submit_date": "2011-02-21",
    "submitter_name": "Tony Finch",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2816",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.6.2",
    "orig_text": "   from            =   \"From:\" mailbox-list CRLF\r\n\r\n   sender          =   \"Sender:\" mailbox CRLF\r\n\r\n   reply-to        =   \"Reply-To:\" address-list CRLF",
    "correct_text": "   from            =   \"From:\" mailbox-list CRLF\r\n\r\n   sender          =   \"Sender:\" mailbox CRLF\r\n\r\n   reply-to        =   \"Reply-To:\" mailbox-list CRLF",
    "notes": "The text in section 3.6.2 (and everywhere else Reply-To is mentioned) makes it clear that Reply-To is envisioned as referring to one or more mailboxes.  But the following chain of productions:\r\n\r\naddress-list -> address -> group -> DQUOTE DQUOTE \":\" \";\"\r\n\r\n...means that the following Reply-To header would be permitted by the spec:\r\n\r\n  Reply-To: \"\" : ;\r\n\r\nThis header has no mailbox in it at all.  So either the reply-to production rule is wrong (and should be a mailbox-list instead of an address-list), or the spec needs to explain what the semantics are for a Reply-To line with no mailboxes in it.\r\n\r\nNote also the description of \"group\" in section 3.4:\r\n\r\n  The group construct allows the sender to indicate a named group of recipients.\r\n\r\nAgain, this does not envision using a group in a header like Reply-To.  But that is what the current reply-to construct permits.\r\n\r\nSummary:  The RFC either needs to forbid Reply-To with zero mailboxes, or it needs to explain what the semantics of such a Reply-To are.\n --VERIFIER NOTES-- \nReply-To has allowed address lists (as against mailbox lists) as far back as RFC 733. This would be a change to long held consensus. Not appropriate for an erratum.   ",
    "submit_date": "2011-05-27",
    "submitter_name": "Nemo",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2950",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.6",
    "orig_text": "   fields          =   *(trace\r\n                         *optional-field /\r\n                         *(resent-date /\r\n                          resent-from /\r\n                          resent-sender /\r\n                          resent-to /\r\n                          resent-cc /\r\n                          resent-bcc /\r\n                          resent-msg-id))\r\n                       *(orig-date /\r\n                       from /\r\n                       sender /\r\n                       reply-to /\r\n                       to /\r\n                       cc /\r\n                       bcc /\r\n                       message-id /\r\n                       in-reply-to /\r\n                       references /\r\n                       subject /\r\n                       comments /\r\n                       keywords /\r\n                       optional-field)",
    "correct_text": "   fields          =   *(trace\r\n                         *optional-field /\r\n                         1*(resent-date /\r\n                           resent-from /\r\n                           resent-sender /\r\n                           resent-to /\r\n                           resent-cc /\r\n                           resent-bcc /\r\n                           resent-msg-id))\r\n                       *(orig-date /\r\n                       from /\r\n                       sender /\r\n                       reply-to /\r\n                       to /\r\n                       cc /\r\n                       bcc /\r\n                       message-id /\r\n                       in-reply-to /\r\n                       references /\r\n                       subject /\r\n                       comments /\r\n                       keywords /\r\n                       optional-field)",
    "notes": "The original version causes an infinite loop (matching an infinite list of empty strings).",
    "submit_date": "2011-08-30",
    "submitter_name": "Antonio Regidor García",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:48:09"
  },
  {
    "errata_id": "3048",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.6.6.  Rese",
    "orig_text": "   When resent fields are used, the \"Resent-From:\" and \"Resent-Date:\"\r\n   fields MUST be sent.  The \"Resent-Message-ID:\" field SHOULD be sent.",
    "correct_text": "   When resent fields are used, the \"Resent-From:\" and \"Resent-Date:\"\r\n   fields MUST be set.  The \"Resent-Message-ID:\" field SHOULD be set.",
    "notes": "[Verifier note: The original report only noted the second use of the word \"sent\". I have updated to include both. I have marked as \"Hold\" because (a) I believe the meaning is clear in the current and (b) it is not obvious that \"set\" is the correct word here; perhaps \"used\" is better. Left for an editing pass when this moves to Standard.]",
    "submit_date": "2011-12-08",
    "submitter_name": "Pan GaoYong",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3088",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.3",
    "orig_text": "date-time       =   [ day-of-week \",\" ] date time [CFWS]",
    "correct_text": "date-time       =   [ day-of-week \",\" ] date time [comment]",
    "notes": "If using the [CFWS] at the end of the original text, by the rules of CFWS, the next line could contain only FWS after the CRLF, which would violate the requirement found in 3.2.2, which reads: \"...where CFWS occurs in this specification, it MUST NOT be inserted in such a way that any line of a folded header field is made up entirely of WSP characters and nothing else.\"\n --VERIFIER NOTES-- \nCFWS allows there to be multiple comments, including comments that go on to the second line, which is perfectly OK.",
    "submit_date": "2012-01-11",
    "submitter_name": "Michael Redwine",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3134",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "Appendix A.5",
    "orig_text": "   From: Pete(A nice \\) chap) <pete(his account)@silly.test(his host)>\r\n   To:A Group(Some people)\r\n        :Chris Jones <c@(Chris's host.)public.example>,\r\n            joe@example.org,\r\n     John <jdoe@one.test> (my dear friend); (the end of the group)\r\n",
    "correct_text": "   From: Pete(A nice \\) chap) <pete(his account)@silly.test(his host)>\r\n   To:A Group(Some people)\r\n        :Chris Jones <c@(Chris's host.)public.example>,\r\n            joe@example.org,\r\n     John <jdoe@one.test> (my dear friend); (the end of the group)\r\n",
    "notes": "Errata 2515 and 2579 change the above text, but there is no change needed to the original RFC. The quote from Section 3.4.1 says \"SHOULD NOT\", not \"MUST NOT\" (\"Comments and folding white space SHOULD NOT be used around the \"@\" in the addr-spec.\"). The example in A.5 \"is aesthetically displeasing, but perfectly legal.\" It's meant to highlight extreme cases.\n --VERIFIER NOTES-- \nThough unstated in the text, the intention of the WG was that the examples in A.1-5 were intended to be messages that conformed to all of the MUSTs and SHOULDs of section 3. Indeed, RFC 2119 defines SHOULD NOT  to mean effectively MUST NOT unless you have fully understood and weighed the reasons for choosing a different course. The description below the example says that it is \"aesthetically displeasing, but perfectly legal\". I don't think violating a SHOULD NOT makes it \"perfectly\" legal.",
    "submit_date": "2012-02-25",
    "submitter_name": "Ashley Willis",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3135",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2.4",
    "orig_text": "   quoted-string   =   [CFWS]\r\n                       DQUOTE *([FWS] qcontent) [FWS] DQUOTE\r\n                       [CFWS]\r\n",
    "correct_text": "   quoted-string   =   [CFWS]\r\n                       DQUOTE ((1*([FWS] qcontent) [FWS]) / FWS) DQUOTE\r\n                       [CFWS]",
    "notes": "The text following this definition states that a \"quoted-string is identical to atom, semantically.\" \"Semantically, neither the optional CFWS outside of the quote characters nor the quote characters themselves are part of the quoted-string; the quoted-string is what is contained between the two quote characters.\"\r\n\r\nThe published definition allows, for example, an angle-addr of <\"\"@ietf.org> which is equivalent to <@ietf.org>, hence invalid. The corrected definition ensures that at a minimum there is one FWS or qcontent between each DQUOTE.\r\n\r\nCurrently allowed yet invalid: <\"\"@ietf.org>, <foo.\"\"@ietf.org>, <\"\".bar@ietf.org>, and <foo.\"\".bar@ietf.org>.\r\n\r\nAs a quoted-string must be bound by the ends of the local-part or by a dot, there is no change in regard to the currently invalid addresses such as <foo\"\"@ietf.org>, <\"\"bar@ietf.org>, and <foo\"\"bar@ietf.org>.",
    "submit_date": "2012-02-25",
    "submitter_name": "Ashley Willis",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:47:31"
  },
  {
    "errata_id": "3400",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.5.",
    "orig_text": "   message         =   (fields / obs-fields)\r\n                       [CRLF body]\r\n\r\n   body            =   (*(*998text CRLF) *998text) / obs-body\r\n",
    "correct_text": "   message         =   (fields / obs-fields)\r\n                       [CRLF body]\r\n\r\n   body            =   (*(*998text CRLF) *998text) / obs-body\r\n\r\nIt is RECOMMENDED that message bodies are terminated by CRLF, though \r\nthis is in principle not necessary (this does not apply to messages \r\nconsisting only of a header section, as header fields are always CRLF\r\nterminated).\r\n\r\nNote however, that when transporting messages via SMTP the last lines \r\nof message bodies MUST be terminated by CRLF as specified int \r\nRFC 5321, section 4.1.1.4.",
    "notes": "Hi folks.\r\n\r\nAFAIU, the definition of body allows message bodies (not header sections) that end without CRLF.\r\n\r\nRFC5321 section 4.1.1.4. however states: \"The mail data are terminated by a line containing only a period, that is, the character sequence \"<CRLF>.<CRLF>\", where the first <CRLF> is actually the terminator of the previous line\".\r\n\r\nSo SMTP forbids, what this RFC allows.\r\nI guess the SMTP RFC can't be changed here and it makes no particular sense to restrict RFC5322 on the other hand.\r\n\r\nMy suggestion was to add this clarification.\r\n\r\nPerhaps a similar one should be added to RFC5321, telling that Internet Messages themselves wouldn't need the last CRLF.\n --VERIFIER NOTES-- \nIt is clearly a change from WG consensus to add any normative 2119 text regarding a terminating CRLF. (See archive of the DRUMS WG, 17-18 March 1998 in a thread with a subject of \"Small Clarification to msg-fmt-04\".) The CRLF is not required for the message syntax. There are things other than this that 5321 cannot transport, so  is also unlikely to be in scope for 5321 as an erratum either. Perhaps a discussion of this might be useful for RFC 3030, but again, it is unlikely to be an erratum.",
    "submit_date": "2012-11-06",
    "submitter_name": "Christoph Anton Mitterer",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3675",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3",
    "orig_text": "3.2.3.  Atom Says:\r\n\r\n   dot-atom        =   [CFWS] dot-atom-text [CFWS]\r\n\r\n3.2.4.  Quoted Strings (but superseded by Errata 3135) Says:\r\n\r\n   quoted-string   =   [CFWS]\r\n                       DQUOTE ((1*([FWS] qcontent) [FWS]) / FWS) DQUOTE\r\n                       [CFWS]\r\n\r\n3.4.1.  Addr-Spec Specification Says:\r\n\r\n   addr-spec       =   local-part \"@\" domain\r\n\r\n   local-part      =   dot-atom / quoted-string / obs-local-part\r\n\r\n   domain          =   dot-atom / domain-literal / obs-domain\r\n\r\n   domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\r\n",
    "correct_text": "3.2.3.  Atom\r\n\r\n   dot-atom        =   [CFWS] dot-atom-text [CFWS]\r\n\r\n   dot-atom-lh     =   [CFWS] dot-atom-text [FWS]\r\n\r\n   dot-atom-rh     =   [FWS] dot-atom-text [CFWS]\r\n\r\n3.2.4.  Quoted Strings (but superseded by Errata 3135)\r\n\r\n   quoted-string   =   [CFWS]\r\n                       DQUOTE ((1*([FWS] qcontent) [FWS]) / FWS) DQUOTE\r\n                       [CFWS]\r\n\r\n   quoted-string-lh =  [CFWS]\r\n                       DQUOTE ((1*([FWS] qcontent) [FWS]) / FWS) DQUOTE\r\n                       [FWS]\r\n\r\n3.4.1.  Addr-Spec Specification\r\n\r\n   addr-spec       =   local-part \"@\" domain\r\n\r\n   local-part      =   dot-atom-lh / quoted-string-lh / obs-local-part\r\n\r\n   domain          =   dot-atom-rh / domain-literal / obs-domain\r\n\r\n   domain-literal  =   [FWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\r\n",
    "notes": "Section 3.4.1 states \"Comments and folding white space SHOULD NOT be used around the \"@\" in the addr-spec.\", yet the ABNF specifically allows it without recourse to obsoleted terms. Given that the above statement is in fact correct, then the current ABNF should be modified as shown to reflect the above statement.\n --VERIFIER NOTES-- \nThe DRUMS Working Group made a conscious decision at the time of writing 2822 that they preferred clarity and ease of understanding of the ABNF at the expense of shift-reduce conflicts and other things that had to be limited in the text descriptions of the syntax, and that assumption carried over into 5322. This is one of those cases. While more precise, the correction is not what was intended, and there are many other cases where the text limits the more free syntax.",
    "submit_date": "2013-06-29",
    "submitter_name": "David Hoerl",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3979",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.6.7; 4.5.7",
    "orig_text": "received        =   \"Received:\" *received-token \";\" date-time CRLF\r\n\r\nobs-received    =   \"Received\" *WSP \":\" *received-token CRLF",
    "correct_text": "received        =   \"Received:\" [1*received-token / CFWS]\r\n                      \";\" date-time CRLF\r\n\r\nobs-received    =   \"Received\" *WSP \":\" [1*received-token / CFWS] CRLF",
    "notes": "\"The 'Received:' field contains a (possibly empty) list of tokens followed by a semicolon and a date-time specification.\" As it was originally written, though, whitespace and comments are disallowed right after the colon if the list of tokens is empty: for example, the header field \"Received: ; Wed, 30 Apr 2014 00:00:00 -0000\\r\\n\" (with a space after the first colon) would be invalid according to the current spec; only \"Received:; Wed, 30 Apr 2014 00:00:00 -0000\\r\\n\" (without a space) would be.\r\n\r\nVerifier note: The erratum is clearly correct. There are other possible ABNF solutions, but the one above is sufficient to fix the problem.",
    "submit_date": "2014-04-30",
    "submitter_name": "Peter Occil",
    "verifier_id": "127",
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4692",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2.4",
    "orig_text": "   qtext           =   %d33 /             ; Printable US-ASCII\r\n                       %d35-91 /          ;  characters not including\r\n                       %d93-126 /         ;  \"\\\" or the quote character\r\n                       obs-qtext",
    "correct_text": "   qtext           =   %d32 /             ; Printable US-ASCII\r\n                       %d33 /             ;  characters not including\r\n                       %d35-91 /          ;  \"\\\" or the quote character\r\n                       %d93-126 /\r\n                       obs-qtext",
    "notes": "According to the Open Group's definition of the \"print\" class of characters in a locale [1], the SPACE character (%d32) is printable as well. So either it should be included in the \"qtext\" definition or the comment should state explicitly that it is excluded from \"qtext\" along with backslash and double quote.\r\n\r\n[1]: pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap07.html\r\n\r\n----- Verifier notes -----\r\nThere are many places in the document that refer to \"printable US-ASCII characters\", and it's clear from the context of them that SPACE was not included there.  This issue does need to be looked at when we revise this document to advance it to Internet Standard.",
    "submit_date": "2016-05-13",
    "submitter_name": "Oleg Andriyanov",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5035",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.3",
    "orig_text": "   time            =   time-of-day zone\r\n\r\n   zone            =   (FWS ( \"+\" / \"-\" ) 4DIGIT) / obs-zone\r\n",
    "correct_text": "time            =       time-of-day FWS zone\r\n\r\nzone            =       (( \"+\" / \"-\" ) 4DIGIT) / obs-zone\r\n",
    "notes": "The rfc5322 version of the syntax clearly forces the obs-zone to follow the time-of-day with no space.  The syntax from rfc2822 seems to be what is actually in use in the real world.  Why was this change made?  Should it just be changed back?\n --VERIFIER NOTES-- \nAs per reply from Pete Resnick:\r\n\r\nI believe this erratum report should be rejected. While it is true that\r\nobs-zone does not begin with FWS, time-of-day ends with second, which\r\ncan be an obs-second, and obs-second ends with an optional CFWS.\r\nTherefore, obs-zone is not forced to follow time-of-day with no space;\r\nit just makes the space optional. And this allows for the original 822\r\nsyntax, which did not require space between the time-of-day and the\r\nzone. (Somewhat goofy to allow that, but it is parseable.)\r\n",
    "submit_date": "2017-06-09",
    "submitter_name": "Gene Hightower",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5712",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.2.2",
    "orig_text": "   FWS             =   ([*WSP CRLF] 1*WSP) /  obs-FWS\r\n                                          ; Folding white space",
    "correct_text": "   FWS             =   ([*WSP] CRLF 1*WSP) /  obs-FWS\r\n                                          ; Folding white space",
    "notes": "Both section 2.2.3 and part of section 3.2.2 (\"Wherever folding appears in a message (that is, a header field body containing a CRLF followed by any WSP)\") describe folding as adding CRLF followed by WSP, so CRLF is required for folding.  However, the CRLF in the FWS rule is shown inside the square brackets, which would make it optional.  It should not be inside the square brackets.\r\n\r\nSquare brackets:  section 1.2.2 states \"This specification uses the Augmented Backus-Naur Form (ABNF) [RFC5234] notation for the formal definitions of the syntax of messages.\"  In RFC 5234, section 3.8 states \"Square brackets enclose an optional element sequence\".\n --VERIFIER NOTES-- \n \r\nThe FWS construct shows where folding is permitted (where CRLF *can* appear).  The mechanism for actual folding is described in the text, and won't happen at each instance of FWS.  Having the CRLF be optional is intentional and necessary.",
    "submit_date": "2019-04-29",
    "submitter_name": "Victor Shrubowich",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5867",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.5.7",
    "orig_text": "   obs-received    =   \"Received\" *WSP \":\" *received-token CRLF\r\n",
    "correct_text": "   obs-received    =   \"Received\" *WSP \":\"\r\n                       [1*received-token / CFWS] [ \";\" date-time CRLF ]\r\n                    ",
    "notes": "Erratum 3979 already describes that CFWS should be allowed in an otherwise empty list of received-tokens. This adds an optional date-time after that.",
    "submit_date": "2019-10-01",
    "submitter_name": "Pete Resnick",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:46:45"
  },
  {
    "errata_id": "5905",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.3",
    "orig_text": "   The time-of-day specifies the number of hours, minutes, and\r\n   optionally seconds since midnight of the date indicated.\r\n\r\n   The date and time-of-day SHOULD express local time.\r\n",
    "correct_text": "   The time-of-day specifies the number of hours, minutes, and\r\n   optionally seconds since midnight of the date indicated or, when\r\n   a time-zone transition has intervened in the interval, since the\r\n   nominal midnight of the zone now in effect.\r\n\r\n   The date and time-of-day SHOULD express local time.\r\n",
    "notes": "The problem with the original text is its reading on the day of a time-zone transition.\r\n\r\nFor example, if the hour from 02:00 to 03:00 was repeated (a fall-back, as at the end of DST), then what local time refers to as 04:00 is 5 hours after midnight \"of the date indicated\" and what local time refers to as 23:59 is almost 25 hours after midnight.  Likewise, if an hour early in the day has been skipped (a spring-forward, as at the start of DST), the time since midnight is one hour short of the local time, as normally understood; for example, 23:00 is only 22 hours after midnight.\r\n\r\nThere are zones in which transitions happen at midnight, for which 01:00 is midnight on a relevant day: at the other end of the year, there may then be a day that repeats 00:00, so may be argued to have two midnights (with a rather literal \"midnight hour\" in between).\r\n\r\nI cannot think of a good replacement text, sad to say, but I have tried my (painfully verbose) best.  I assume everyone has always just used the conventional meaning of local time (as per the SHOULD in the paragraph I haven't changed), without worrying about the inaccurate \"since midnight\" phrasing.",
    "submit_date": "2019-11-13",
    "submitter_name": "Edward Welbourne",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:46:18"
  },
  {
    "errata_id": "5918",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "2.2",
    "orig_text": "Header fields are lines beginning with a field name, followed by a\r\n   colon (\":\"), followed by a field body, and terminated by CRLF.  A\r\n   field name MUST be composed of printable US-ASCII characters (i.e.,\r\n   characters that have values between 33 and 126, inclusive), except\r\n   colon.",
    "correct_text": null,
    "notes": "I'm reporting an omission rather than a correction. The description of field names in S2.2 does not describe any length limit, but it implicitly prohibits folding by not permitting WSP chars in the name. 3.6.8 defines an ABNF for field-name, but does not specify a length limit either. \r\n\r\nAs far as I can see this means that field names should be limited to 77 characters – the field name and a trailing : – after which the field body can start after FWS on the next line.\r\n\r\nI suspect this will be open to some debate, so I'm not sure what to suggest as a correction beyond that. Nor do I know whether common clients & servers impose their own arbitrary limits on field names.",
    "submit_date": "2019-11-26",
    "submitter_name": "Marcus Bointon",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-05-15 01:57:58"
  },
  {
    "errata_id": "6639",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.3",
    "orig_text": "   zone            =   (FWS ( \"+\" / \"-\" ) 4DIGIT) / obs-zone",
    "correct_text": "   zone            =   (FWS ( \"+\" / \"-\" ) 4DIGIT) / [FWS] obs-zone",
    "notes": "The current syntax does not allow space before an obs-zone. Thus, it rejects header items like:\r\n\r\nDate: Mon, 12 Jul 2021 18:32:01 GMT\r\n\r\nwhich are still being produced today by, for example, mail(1) on FreeBSD.",
    "submit_date": "2021-07-12",
    "submitter_name": "Brennan Vincent",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-05-15 01:59:01"
  },
  {
    "errata_id": "6920",
    "doc-id": "RFC5322",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "2.1",
    "orig_text": "and interpreted as US-ASCII [ANSI.X3-4.1986] characters.  For brevity, this document sometimes refers to this range of characters as simply \"US-ASCII characters\".",
    "correct_text": "and interpreted as ASCII [ANSI.X3-4.1986] characters.  For brevity, this document sometimes refers to this range of characters as simply \"ASCII characters\".",
    "notes": "The choice of \"US-ASCII\" as a charset name reflected circumstances at the time, but it was not then and has never been the name of a coded character set, much less the one specified in the various versions of what is now ANSI INCITS 4-1986[R2017].  The common name of the latter, both specified in the Standard and in common practice, is \"ASCII\" without any further qualification.   \"For brevity\", \"ASCII\" is not only more accurate, but shorter.   While the correction is being made, it would be wise to change the citation anchor to \"[ASCII]\" or, if necessary for some reason, \"[ASCII1986]\".  The odd punctuation used in \"[ANSI.X3-4.1986]\" to refer to ANSI X3.4-1986 is just unnecessarily confusing.\r\n\r\n(this erratum is being reported more or less at the request of the editor of RFC 5322 and its successor)",
    "submit_date": "2022-04-05",
    "submitter_name": "John Klensin",
    "verifier_id": "176",
    "verifier_name": "Orie Steele",
    "update_date": "2024-04-01 14:16:44"
  },
  {
    "errata_id": "6921",
    "doc-id": "RFC5322",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "2.1",
    "orig_text": "composed of characters with values in the range of 1 through 127 and interpreted as US-ASCII [ANSI.X3-4.1986] characters.",
    "correct_text": "composed of ASCII characters [RFC20] with values in the range from 0/1 to 7/15.\r\n\r\n   --OR--\r\n\r\ncomposed of octets with decimal values in the range from 1 through 127 and interpreted as US-ASCII [ANSI.X3-4.1986] characters.",
    "notes": "See previous erratum about \"US-ASCII\" versus \"ASCII\" or \"RFC20\" and apply as needed to the suggested text.  \r\n\r\nWhile there are several ways to fix the problem being reported here, the \"range of 1 through 127\" has no meaning without some qualification as to what the numbers mean.  One could infer from the original form that the range is interpreted according to something in the standard, but that standard, unlike, e.g., Unicode, never uses a linear sequence of numbers to refer to code points, only the Column/Row notation shown above (plus, of course, the actual seven-bit binary coding).",
    "submit_date": "2022-04-05",
    "submitter_name": "John Klensin",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-05-16 06:27:47"
  },
  {
    "errata_id": "7382",
    "doc-id": "RFC5322",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.2.3",
    "orig_text": "ccontent        =   ctext / quoted-pair / comment\r\n\r\ncomment         =   \"(\" *([FWS] ccontent) [FWS] \")\"",
    "correct_text": "ccontent        =   ctext / quoted-pair\r\n\r\ncomment         =   \"(\" *([FWS] ccontent) [FWS] \")\"",
    "notes": "Trying to getting all possible originator formats a reader can get stuck into a circular dependency between \"comment\" and \"ccontent\" definitions.\r\nSince \"ccontent\" is referenced in the \"comment\" definition only circular dependency should be cut there I suppose.\n --VERIFIER NOTES-- \nThe ABNF for comment is correct in 5322. It is intended to be recursive, allowing for nested comments.",
    "submit_date": "2023-03-11",
    "submitter_name": "Paolo Schiro",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-05-15 01:54:32"
  },
  {
    "errata_id": "8453",
    "doc-id": "RFC5322",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.2.2, 3.2.4",
    "orig_text": "This is a bit related to erratas 3135 and 4692.\r\n\r\nThe standard says in 3.2.2\r\n\r\n   Runs of FWS, comment, or CFWS that occur between lexical tokens in a\r\n   structured header field are semantically interpreted as a single\r\n   space character.\r\n\r\nThis seems to have evaluated from RFC 822 which said\r\n\r\n     3.4.2.  WHITE SPACE\r\n\r\n        Note:  In structured field bodies, multiple linear space ASCII\r\n               characters  (namely  HTABs  and  SPACEs) are treated as\r\n               single spaces[.]\r\n\r\nRFC 822 is pretty clear that a (RFC 5322) quoted-string defined as\r\n\r\n   ((1*([FWS] qcontent) [FWS])\r\n\r\nand stating that is shall be treated \"as an atom\", in a context of\r\n\r\n   Bat  \" \\t from \\t \"  hell < b  \" \\t l \\t \"  a  @exam.ple>\r\n\r\neffectively reduces to\r\n\r\n   Bat \" from \" hell <\"b l a\">@exam.ple>\r\n\r\n(Or is that already\r\n   Bat \" from \" hell <b \" l \" a@examp.ple>\r\nor even (that not me thinks)\r\n   Bat \"from\" hell <b\"  l  \"a@exampl.ple>\r\ni struggle.)\r\n\r\nHowever, with RFC 5322 words, and with the meaning of \"atom\", it seems to me, the effective reduction would be\r\n\r\n   Bat \"  from  \" hell <b \" \\t l \\t \" a@exam.ple>\r\nor\r\n   Bat \"  from  \" hell <b \"   l   \" a@exam.ple>\r\n\r\nif HTAB reduces to SP (i think that yes, anyway).\r\n\r\nIt is not clear, and in practice everybody does its thing the one or the other way, that much is plain!\r\n(This also applies to anything \"consecutive\" btw, does this stack up in a single-pass parser, or does it require a multi-pass parser?)",
    "correct_text": "I have no idea.\r\nI would reintroduce the RFC 822 wording somehow, so that the result is\r\n\r\n   Bat \" from \" hell <\"b l a\"@exam.ple>",
    "notes": "My own parser formerly reduced to\r\n\r\n   \"Bat from hell\" <\"bla\"@exam.ple>\r\n\r\nand i changed it to\r\n\r\n   \"Bat__from__hell\" <\"b l a\"@exam.ple>\r\n \r\n(__ means twice space, thanks to this web editor, if i saw this correctly :)\r\nbecause we requote the entire thing no matter what, resulting in two adjacent space characters.\r\nI am a bit sad, but looking around it is not bad.  (To make it a rhyme.)",
    "submit_date": "2025-06-06",
    "submitter_name": "Steffen Nurpmeso",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
