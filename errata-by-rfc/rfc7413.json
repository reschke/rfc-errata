[
  {
    "errata_id": "4238",
    "doc-id": "RFC7413",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.1.1",
    "orig_text": "   Kind            1 byte: value = 34\r\n   Length          1 byte: range 6 to 18 (bytes); limited by\r\n                           remaining space in the options field.\r\n                           The number MUST be even.\r\n   Cookie          0, or 4 to 16 bytes (Length - 2)",
    "correct_text": "   Kind            1 byte: value = 34\r\n   Length          1 byte: range 2 to 18 (bytes); limited by\r\n                           remaining space in the options field.\r\n                           The number MUST be even.\r\n   Cookie          0, or 4 to 16 bytes in length (Length - 2)",
    "notes": "A Nil cookie is a fast open option with no cookie value.  A length range of 6 to 18 bytes excludes a Nil cookie.",
    "submit_date": "2015-01-22",
    "submitter_name": "Matthew Luckie",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4239",
    "doc-id": "RFC7413",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2.1",
    "orig_text": "   1. The client sends a SYN packet with a Fast Open option with a\r\n      Length field of 0 (empty cookie field).",
    "correct_text": "   1. The client sends a SYN packet with a Fast Open option with a\r\n      Length field of 2 (empty cookie field).",
    "notes": "A Nil fast-open option has an option length of 2.  A length field of zero would mean an invalid TCP option.",
    "submit_date": "2015-01-22",
    "submitter_name": "Matthew Luckie",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5373",
    "doc-id": "RFC7413",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.1.3.1.",
    "orig_text": "   For any negative responses, the client SHOULD disable Fast Open on\r\n   the specific path (the source and destination IP addresses and ports)\r\n   at least temporarily.\r\n",
    "correct_text": "   For any negative responses, the client SHOULD disable Fast Open on\r\n   the specific path (the source and destination IP addresses \r\n   and the destination port) at least temporarily.\r\n",
    "notes": "The original language seems to imply that the cached negative response should only affect connections if they are initiated from the same source port and source IP.\r\n\r\nSince the client source port can change for subsequent TCP connections, and it's unlikely that just changing the source port would result in a successful TCP FO connection when a previous connection from a different source port failed, associating the cached negative response with the source port is probably not very useful, and could actually be detrimental to performance and reliability, depending on the implementation.\r\n\r\nIf the implementation would decide to check the source port when matching negative cached responses to a new connection, it would negatively impact performance when the source port changes, because the implementation wouldn't find a matching negative response in the cache.\r\n\r\nFurthermore, if each connection retry is made from a different source port, checking the source port when matching the cached negative responses would make the client unable to connect to the server, until all possible source ports are included in cached negative responses.\r\n\r\nThis means it's much better not recommending to associate the source port to the cached negative responses, to prevent any confusion and possible implementation issues.\r\n\r\nEither that, or add additional clarification, describing exactly how a negative cached response should be matched to a subsequent connection attempt.",
    "submit_date": "2018-05-31",
    "submitter_name": "Vladimir Nicolici",
    "verifier_id": "153",
    "verifier_name": "Mirja KÃ¼hlewind",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6239",
    "doc-id": "RFC7413",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.2",
    "orig_text": "produces responses earlier before the handshake completes",
    "correct_text": "produces responses after the handshake completes",
    "notes": "Located on last paragraph last line of section on page 16. First line states 'not to respond with data until the handshake finishes' which contradicts the last line.\n --VERIFIER NOTES-- \n   This erratum does not correctly interpret the paragraph.\r\n\r\nThe sentence is:\r\n\"But the potential latency saving from TFO may diminish if the server application\r\n   produces responses earlier before the handshake completes.\"\r\n\r\nThe text refers to when the server response is available, not when it is sent. If the server data isn't yet available, then there is no message to withhold and therefore no performance penalty in waiting for the handshake to complete.",
    "submit_date": "2020-07-27",
    "submitter_name": "Simon khng ren hao",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2020-07-27 15:17:03"
  },
  {
    "errata_id": "8013",
    "doc-id": "RFC7413",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.2",
    "orig_text": "   PendingFastOpenRequests: tracks the number of TFO connections in SYN-\r\n      RCVD state.  If this variable goes over a preset system limit, the\r\n      server MUST disable TFO for all new connection requests until\r\n      PendingFastOpenRequests drops below the system limit.  This\r\n      variable is used for defending some vulnerabilities discussed in\r\n      the \"Security Considerations\" section (Section 5).",
    "correct_text": "   PendingFastOpenRequests: tracks the number of TFO connections in SYN-\r\n      RCVD state.  If this variable goes over a preset system limit, the\r\n      server MUST disable TFO for all new connection requests until\r\n      PendingFastOpenRequests drops below the system limit.  This\r\n      variable is used for defending against some vulnerabilities \r\n      discussed in the \"Security Considerations\" section (Section 5).",
    "notes": "The original text seems to suggest defending (the existence of) some vulnerabilities",
    "submit_date": "2024-07-02",
    "submitter_name": "Bart Overkamp",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-08-16 12:14:54"
  },
  {
    "errata_id": "8014",
    "doc-id": "RFC7413",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.2.1",
    "orig_text": "                                                            <...> We\r\n   RECOMMEND both the client and the server to retransmit SYN and SYN-\r\n   ACK packets without the cookie options on timeouts.  This ensures the\r\n   connections of cookie requests will go through and lowers the latency\r\n   penalty (of dropped SYN/SYN-ACK packets).",
    "correct_text": "                                                            <...> We\r\n   RECOMMEND both the client and the server to retransmit SYN and SYN-\r\n   ACK packets without the cookie options on timeouts.  This ensures the\r\n   connection requests will go through.",
    "notes": "With a retransmitted SYN or SYN-ACK packet without cookie options it does not follow that 'cookie requests' will go through, however 'normal' TCP connection flow does continue. This comes with a latency penalty.\r\n\r\nThis seems like editorial and does not impact the fucntion of the protocol, hence, held for document update to cosider better wordings.",
    "submit_date": "2024-07-02",
    "submitter_name": "Bart Overkamp",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2024-10-30 05:06:55"
  },
  {
    "errata_id": "8015",
    "doc-id": "RFC7413",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.2.2",
    "orig_text": "      b. Otherwise, include the Fast Open option with the cookie of the\r\n         server.  Include any data up to the cached server MSS or\r\n         default 536 bytes.",
    "correct_text": "      b. Otherwise, include the Fast Open option with the cookie of the\r\n         server.  Include any data up to the cached server MSS or\r\n         default: 536 bytes for IPv4 or 1220 bytes for IPv6.",
    "notes": "default MSS is IP protocol-version-specific.\r\n\r\nBased on the discussion https://mailarchive.ietf.org/arch/msg/tcpm/mJC7Lz5GE8RmkJ_cJWaiRIn-sC8/, this is HFDU.",
    "submit_date": "2024-07-02",
    "submitter_name": "Bart Overkamp",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2025-03-18 01:35:06"
  },
  {
    "errata_id": "8016",
    "doc-id": "RFC7413",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3.3",
    "orig_text": "    <...> In fact, power has become such a prominent issue in\r\n   modern Long Term Evolution (LTE) devices that mobile browsers close\r\n   HTTP connections within seconds or even immediately [SOUDERS11].\r\n",
    "correct_text": "    <...> In fact, power has become such a prominent issue in\r\n   3G mobile devices that mobile browsers close HTTP connections\r\n   within seconds or even immediately [SOUDERS11].\r\n",
    "notes": "Reading the reference: It mentions 3G exclusively.\r\n3G data networks are circuit-switched so energy consumption on idle connections is an issue.\r\n4G/5G (LTE) networks are packet-switched, and radio energy consumption (active carrier?) might not be an issue. 4G and 5G are not mentioned in the reference.",
    "submit_date": "2024-07-02",
    "submitter_name": "Bart Overkamp",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2025-03-18 01:30:58"
  },
  {
    "errata_id": "8017",
    "doc-id": "RFC7413",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.",
    "orig_text": "   Performing TCP Fast Open in connection 2:\r\n\r\n   TCP A (Client)                                      TCP B (Server)\r\n   ______________                                      ______________\r\n   CLOSED                                                      LISTEN\r\n\r\n   #1 SYN-SENT       ----- <SYN=x,CookieOpt=C,DATA_A> ---->  SYN-RCVD\r\n\r\n   #2 ESTABLISHED    <---- <SYN=y,ACK=x+len(DATA_A)+1> ----  SYN-RCVD\r\n\r\n   #3 ESTABLISHED    <---- <ACK=x+len(DATA_A)+1,DATA_B>----  SYN-RCVD\r\n\r\n   #4 ESTABLISHED    ----- <ACK=y+1>--------------------> ESTABLISHED\r\n\r\n   #5 ESTABLISHED    --- <ACK=y+len(DATA_B)+1>----------> ESTABLISHED",
    "correct_text": "   Performing TCP Fast Open in connection 2:\r\n\r\n   TCP A (Client)                                      TCP B (Server)\r\n   ______________                                      ______________\r\n   CLOSED                                                      LISTEN\r\n\r\n   #1 SYN-SENT       ----- <SYN=x,CookieOpt=C,DATA_A> ---->  SYN-RCVD\r\n\r\n   #2 ESTABLISHED    <---- <SYN=y,ACK=x+len(DATA_A)+1> ----  SYN-RCVD\r\n\r\n   #3 ESTABLISHED    <---- <ACK=x+len(DATA_A)+1,DATA_B>----  SYN-RCVD\r\n\r\n   #4 ESTABLISHED    ----- <ACK=y+1>--------------------> ESTABLISHED\r\n\r\n   #5 ESTABLISHED    --- <ACK=y+len(DATA_B)+1>----------> ESTABLISHED\r\n\r\n                                       OR\r\n\r\n   #2 ESTABLISHED    <- <SYN=y,ACK=x+len(DATA_A)+1,DATA_B>-  SYN-RCVD\r\n\r\n   #3 ESTABLISHED    --- <ACK=y+len(DATA_B)+1>----------> ESTABLISHED",
    "notes": "To include illustration of the flow resulting from step 5 in\r\nsection 4.2.2. Â§ Server: Receiving SYN and responding with SYN-ACK\r\n\r\n                   ...\"The server MAY include data in the SYN-ACK packet\r\n      if the response data is readily available.  Some applications may\r\n      favor delaying the SYN-ACK, allowing the application to process\r\n      the request in order to produce a response, but this is left up to\r\n      the implementation.\"\r\n\r\nIt would be good to illustrate this alternative handshake in further updated document but this ack of illustration does not fault the protocol function, hence, this \"technical\" errata type is changed to \"editorial\" and status is set to held for document update.  ",
    "submit_date": "2024-07-02",
    "submitter_name": "Bart Overkamp",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2024-10-30 09:17:38"
  }
]
