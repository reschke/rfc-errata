[
  {
    "errata_id": "6941",
    "doc-id": "RFC9180",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.1",
    "orig_text": "In many cases, applications encrypt only a single message\r\nto a recipient's public key. This section provides templates\r\nfor HPKE APIs that implement stateless \"single-shot\"\r\nencryption and decryption using APIs specified in\r\nSections 5.1.1 and 5.2:\r\n",
    "correct_text": "In many cases, applications encrypt only a single message\r\nto a recipient's public key. This section provides templates\r\nfor HPKE APIs that implement stateless \"single-shot\"\r\nencryption and decryption using APIs specified in\r\nSections 5.1 and 5.2:\r\n",
    "notes": "5.1.1 -> 5.1: I think the description of the single-shot APIs should refer to the entire HPKE modes hence Section 5.1, instead of Section 5.1.1 which is about the base mode only.",
    "submit_date": "2022-04-21",
    "submitter_name": "CJ",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2022-05-12 04:02:03"
  },
  {
    "errata_id": "7121",
    "doc-id": "RFC9180",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": "A.1.1\r\nskEm\r\n52c4a758a802cd8b936eceea314432798d5baf2d7e9235dc084ab1b9cfa2f736\r\nskRm\r\n4612c550263fc8ad58375df3f557aac531d26850903e55a9f23f21d8534e8ac8\r\n\r\nA.1.2\r\nskEm\r\n463426a9ffb42bb17dbe6044b9abd1d4e4d95f9041cef0e99d7824eef2b6f588\r\nskRm\r\nc5eb01eb457fe6c6f57577c5413b931550a162c71a03ac8d196babbd4e5ce0fd\r\n\r\nA.1.3\r\nskEm\r\nff4442ef24fbc3c1ff86375b0be1e77e88a0de1e79b30896d73411c5ff4c3518\r\nskRm\r\nfdea67cf831f1ca98d8e27b1f6abeb5b7745e9d35348b80fa407ff6958f9137e\r\nskSm\r\ndc4a146313cce60a278a5323d321f051c5707e9c45ba21a3479fecdf76fc69dd\r\n\r\nA.1.4\r\nskEm\r\n14de82a5897b613616a00c39b87429df35bc2b426bcfd73febcb45e903490768\r\nskRm\r\ncb29a95649dc5656c2d054c1aa0d3df0493155e9d5da6d7e344ed8b6a64a9423\r\nskSm\r\nfc1c87d2f3832adb178b431fce2ac77c7ca2fd680f3406c77b5ecdf818b119f4\r\n\r\nA.2.1\r\nskEm\r\nf4ec9b33b792c372c1d2c2063507b684ef925b8c75a42dbcbf57d63ccd381600\r\nskRm\r\n8057991eef8f1f1af18f4a9491d16a1ce333f695d4db8e38da75975c4478e0fb\r\n\r\nA.2.2\r\nskEm\r\n0c35fdf49df7aa01cd330049332c40411ebba36e0c718ebc3edf5845795f6321\r\nskRm\r\n77d114e0212be51cb1d76fa99dd41cfd4d0166b08caa09074430a6c59ef17879\r\n\r\nA.2.3\r\nskEm\r\nc94619e1af28971c8fa7957192b7e62a71ca2dcdde0a7cc4a8a9e741d600ab13\r\nskRm\r\n3ca22a6d1cda1bb9480949ec5329d3bf0b080ca4c45879c95eddb55c70b80b82\r\nskSm\r\n2def0cb58ffcf83d1062dd085c8aceca7f4c0c3fd05912d847b61f3e54121f05\r\n\r\nA.2.4\r\nskEm\r\n5e6dd73e82b856339572b7245d3cbb073a7561c0bee52873490e305cbb710410\r\nskRm\r\n7b36a42822e75bf3362dfabbe474b3016236408becb83b859a6909e22803cb0c\r\nskSm\r\n90761c5b0a7ef0985ed66687ad708b921d9803d51637c8d1cb72d03ed0f64418\r\n\r\nA.7.1\r\nskEm\r\n095182b502f1f91f63ba584c7c3ec473d617b8b4c2cec3fad5af7fa6748165ed\r\nskRm\r\n33d196c830a12f9ac65d6e565a590d80f04ee9b19c83c87f2c170d972a812848\r\n\r\nA.7.2\r\nskEm\r\n1d72396121a6a826549776ef1a9d2f3a2907fc6a38902fa4e401afdb0392e627\r\nskRm\r\n98f304d4ecb312689690b113973c61ffe0aa7c13f2fbe365e48f3ed09e5a6a0c\r\n\r\nA.7.3\r\nskEm\r\n83d3f217071bbf600ba6f081f6e4005d27b97c8001f55cb5ff6ea3bbea1d9295\r\nskRm\r\ned88cda0e91ca5da64b6ad7fc34a10f096fa92f0b9ceff9d2c55124304ed8b4a\r\nskSm\r\nc85f136e06d72d28314f0e34b10aadc8d297e9d71d45a5662c2b7c3b9f9f9405\r\n\r\nA.7.4\r\nskEm\r\na2b43f5c67d0d560ee04de0122c765ea5165e328410844db97f74595761bbb81\r\nskRm\r\nc4962a7f97d773a47bdf40db4b01dc6a56797c9e0deaab45f4ea3aa9b1d72904\r\nskSm\r\n6175b2830c5743dff5b7568a7e20edb1fe477fb0487ca21d6433365be90234d0",
    "correct_text": "A.1.1\r\nskEm\r\n50c4a758a802cd8b936eceea314432798d5baf2d7e9235dc084ab1b9cfa2f776\r\nskRm\r\n4012c550263fc8ad58375df3f557aac531d26850903e55a9f23f21d8534e8a48\r\n\r\nA.1.2\r\nskEm\r\n403426a9ffb42bb17dbe6044b9abd1d4e4d95f9041cef0e99d7824eef2b6f548\r\nskRm\r\nc0eb01eb457fe6c6f57577c5413b931550a162c71a03ac8d196babbd4e5ce07d\r\n\r\nA.1.3\r\nskEm\r\nf84442ef24fbc3c1ff86375b0be1e77e88a0de1e79b30896d73411c5ff4c3558\r\nskRm\r\nf8ea67cf831f1ca98d8e27b1f6abeb5b7745e9d35348b80fa407ff6958f9137e\r\nskSm\r\nd84a146313cce60a278a5323d321f051c5707e9c45ba21a3479fecdf76fc695d\r\n\r\nA.1.4\r\nskEm\r\n10de82a5897b613616a00c39b87429df35bc2b426bcfd73febcb45e903490768\r\nskRm\r\nc829a95649dc5656c2d054c1aa0d3df0493155e9d5da6d7e344ed8b6a64a9463\r\nskSm\r\nf81c87d2f3832adb178b431fce2ac77c7ca2fd680f3406c77b5ecdf818b11974\r\n\r\nA.2.1\r\nskEm\r\nf0ec9b33b792c372c1d2c2063507b684ef925b8c75a42dbcbf57d63ccd381640\r\nskRm\r\n8057991eef8f1f1af18f4a9491d16a1ce333f695d4db8e38da75975c4478e07b\r\n\r\nA.2.2\r\nskEm\r\n0835fdf49df7aa01cd330049332c40411ebba36e0c718ebc3edf5845795f6361\r\nskRm\r\n70d114e0212be51cb1d76fa99dd41cfd4d0166b08caa09074430a6c59ef17879\r\n\r\nA.2.3\r\nskEm\r\nc84619e1af28971c8fa7957192b7e62a71ca2dcdde0a7cc4a8a9e741d600ab53\r\nskRm\r\n38a22a6d1cda1bb9480949ec5329d3bf0b080ca4c45879c95eddb55c70b80b42\r\nskSm\r\n28ef0cb58ffcf83d1062dd085c8aceca7f4c0c3fd05912d847b61f3e54121f45\r\n\r\nA.2.4\r\nskEm\r\n586dd73e82b856339572b7245d3cbb073a7561c0bee52873490e305cbb710450\r\nskRm\r\n7836a42822e75bf3362dfabbe474b3016236408becb83b859a6909e22803cb4c\r\nskSm\r\n90761c5b0a7ef0985ed66687ad708b921d9803d51637c8d1cb72d03ed0f64458\r\n\r\nA.7.1\r\nskEm\r\n085182b502f1f91f63ba584c7c3ec473d617b8b4c2cec3fad5af7fa67481656d\r\nskRm\r\n30d196c830a12f9ac65d6e565a590d80f04ee9b19c83c87f2c170d972a812848\r\n\r\nA.7.2\r\nskEm\r\n1872396121a6a826549776ef1a9d2f3a2907fc6a38902fa4e401afdb0392e667\r\nskRm\r\n98f304d4ecb312689690b113973c61ffe0aa7c13f2fbe365e48f3ed09e5a6a4c\r\n\r\nA.7.3\r\nskEm\r\n80d3f217071bbf600ba6f081f6e4005d27b97c8001f55cb5ff6ea3bbea1d9255\r\nskRm\r\ne888cda0e91ca5da64b6ad7fc34a10f096fa92f0b9ceff9d2c55124304ed8b4a\r\nskSm\r\nc85f136e06d72d28314f0e34b10aadc8d297e9d71d45a5662c2b7c3b9f9f9445\r\n\r\nA.7.4\r\nskEm\r\na0b43f5c67d0d560ee04de0122c765ea5165e328410844db97f74595761bbb41\r\nskRm\r\nc0962a7f97d773a47bdf40db4b01dc6a56797c9e0deaab45f4ea3aa9b1d72944\r\nskSm\r\n6075b2830c5743dff5b7568a7e20edb1fe477fb0487ca21d6433365be9023450\r\n",
    "notes": "The introduction section in Appendix A states that\r\n'Each key pair (skX, pkX) is written in its serialized form, where skXm = SerializePrivateKey(skX) '\r\n\r\nFor X25519 entries this means that values for skXm should be clamped in the following way to modify the first and last bytes:\r\n\r\n  skXm[0] &= 248;\r\n  skXm[skXmlen - 1] &= 127;\r\n  skXm[skXmlen - 1] |= 64;\r\n\r\n(See Section 5 of https://www.ietf.org/rfc/rfc7748.txt)",
    "submit_date": "2022-09-07",
    "submitter_name": "Shane Lontis",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7251",
    "doc-id": "RFC9180",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "7.2.1",
    "orig_text": "The RECOMMENDED limit for these values is 64 bytes. ",
    "correct_text": "The RECOMMENDED limit for these values is 66 bytes. (To enable\r\nprocessing of all the test vectors in Appendix A.)\r\n",
    "notes": "Appendix A.6.1 and others have test vectors with an IKM that is 66 octets long. Seems easier to bump the recommended value by 2, rather than invalidate the test vectors, but the latter could also be done if/when 9180 is revised. Meanwhile, no harm for implementers to know this.\r\n\r\n\r\nHold for document update. Errata 7251 recommends adjusting IKM size from 64 to 66 bytes to match HPKE test vectors, ensuring sample accuracy. This is a consistency fix rather than functional change, suitable for document revision. - CFRG Chair",
    "submit_date": "2022-11-15",
    "submitter_name": "Stephen Farrell",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 10:59:45"
  },
  {
    "errata_id": "7790",
    "doc-id": "RFC9180",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "9.1.2",
    "orig_text": "   A detailed computational analysis of HPKE's Auth mode single-shot\r\n   encryption API has been done in [ABHKLR20].  The paper defines\r\n   security notions for authenticated KEMs and for authenticated public\r\n   key encryption, using the outsider and insider security terminology\r\n   known from signcryption [SigncryptionDZ10].  The analysis proves that\r\n   DHKEM's AuthEncap()/AuthDecap() interface fulfills these notions for\r\n   all Diffie-Hellman groups specified in this document. \r\n",
    "correct_text": "   A detailed computational analysis of HPKE's Auth mode single-shot\r\n   encryption API has been done in [ABHKLR20].  The paper defines\r\n   security notions for authenticated KEMs and for authenticated public\r\n   key encryption, using the outsider and insider security terminology\r\n   known from signcryption [SigncryptionDZ10].  The analysis proves that\r\n   DHKEM's AuthEncap()/AuthDecap() interface fulfills the notions of \r\n   Outsider-CCA, Insider-CCA, and Outsider-Auth for all Diffie-Hellman \r\n   groups specified in this document. It does not fulfill the notion of\r\n   Insider-Auth defined in the paper.",
    "notes": "The referenced paper defines four notions of security, Outsider-CCA, Insider-CCA, Outsider-Auth, and Insider-Auth. It proves that HPKE meets the first three, but, contrary to the current text of the RFC, it proves that it does *not* meet Insider-Auth security and that this is infeasible for HPKE. This is an important negative security result that should have been highlighted in the RFC.",
    "submit_date": "2024-01-30",
    "submitter_name": "Neil Madden",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2024-04-27 02:46:43"
  },
  {
    "errata_id": "7932",
    "doc-id": "RFC9180",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5.2",
    "orig_text": "(In the pseudocode below,",
    "correct_text": "(In the pseudocode above,",
    "notes": "The Context<ROLE>.IncrementSeq() pseudocode has already been provided before the last paragraph of section 5.2.",
    "submit_date": "2024-05-10",
    "submitter_name": "Raul Siles",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-05-14 21:52:40"
  },
  {
    "errata_id": "7933",
    "doc-id": "RFC9180",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5.1",
    "orig_text": "return Context<ROLE>(key, base_nonce, 0, exporter_secret)\r\n\r\nThe ROLE template parameter is either S or R, depending on the role \r\nof sender or recipient, respectively. See Section 5.2 for a discussion \r\nof the key schedule output, including the role-specific Context \r\nstructure and its API.\r\n",
    "correct_text": "return Context<ROLE>(key, base_nonce, 0, exporter_secret)\r\n\r\nThe ROLE template parameter is either S or R, depending on the role \r\nof sender or recipient, respectively. The third field in the \r\nContext<ROLE> refers to the sequence number, that is initialised with \r\na 0 value. See Section 5.2 for a discussion of the key schedule output,\r\nincluding the role-specific Context structure and its API, and the \r\nusage of the sequence number.\r\n",
    "notes": "In Section 5.1 the return value of KeySchedule<ROLE> reflects:\r\n\r\nreturn Context<ROLE>(key, base_nonce, 0, exporter_secret)\r\n\r\nI'm assuming the \"0\" value (in the third field of the Context<ROLE>) refers to the sequence number, with an initialisation value of 0, that is mentioned in Section 5.2, but the RFCs does not include details about the meaning of this third field and value.\r\n\r\nI suggest to clarify in section 5.1 the meaning of that 0 value and field, and add a reference to section 5.2 with all the details about the sequence number.\r\n\r\n\r\nHold for document update.\r\n\r\nErrata 7933 clarifies sequence initialization in KeySchedule<ROLE>, improving implementer understanding of sequence usage. While low impact, this clarification prevents misunderstandings and supports accurate usage. - CFRG co-chair",
    "submit_date": "2024-05-12",
    "submitter_name": "Raul Siles",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 11:01:13"
  },
  {
    "errata_id": "7934",
    "doc-id": "RFC9180",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Sections 5.1 and 7.2.1 say:",
    "orig_text": "- Section 5.1:\r\n\r\nThe psk and psk_id fields MUST appear together or not at all.\r\n\r\nThe psk, psk_id, and info fields have maximum lengths that depend\r\non the KDF itself,...\r\n\r\n- Section 7.2.1:\r\n\r\nThe following table lists the maximum allowed lengths of these\r\nfields for the KDFs defined in this document,...\r\n",
    "correct_text": "- Section 5.1:\r\n\r\n[Add a new note]\r\n\r\nThe info parameter used by HPKE is not related to the optional\r\nstring info used by the LabeledExpand or Expand functions detailed\r\nin section 4.\r\n\r\nThe psk and psk_id parameters MUST appear together or not at all.\r\n\r\nThe psk, psk_id, and info parameters have maximum lengths that depend\r\non the KDF itself,...\r\n\r\n- Section 7.2.1:\r\n\r\nThe following table lists the maximum allowed lengths of these\r\nparameters for the KDFs defined in this document,...\r\n",
    "notes": "The reference to the \"info\" parameter in sections 5.1 and 7.2.1 might be confusing. Thus, I suggest to clearly differentiate between the optional string \"info\" for the LabeledExpand or Expand functions, whose value is clearly defined by the RFC for each LabeledExpand function used in DHKEM or KeySchedule, and the \"info\" parameter used by HPKE.\r\n\r\nVerified by co-author on CFRG list with additional note: Moreover, I would change all instances of \"field\" to \"parameter\", except for those referring to a mathematical field (e.g., \"field element\").\r\n\r\nIt seems section 7.2.1 refers to the \"info\" parameter used by HPKE, as it is referenced from section 5.1. This is the \"info\" parameter that is used specifically as the key for the \"info_hash\" LabeledExtract function in KeySchedule.\r\n\r\nIn section 5.1 the third bullet refer to the HPKE \"info\" parameter, but the 3rd paragraph after the bullets, as it uses the term \"fields\", might be confused with the \"info\" string (or field) used by the LabeledExpand and Expand functions.\r\n\r\nPerhaps it would be useful to always use two separate terms along RFC 9180:\r\n- the \"info\" parameter used by HPKE.\r\n- the \"info\" string used by the LabeledExpand and Expand functions.\r\n\r\nAs a result, I would remove the term \"field(s)\" from sections 5.1 and 7.2.1, and replace it by parameter(s).\r\n\r\nAdditionally, I suggest to add a note in section 5.1 to differentiate both, and clarify that section 5.1 and 7.2.1, with the input length restrictions, refer to the \"info\" parameter, and not to the \"info\" string.\r\n\r\n\r\nVerified on CFRG list by co-author with additional note: Moreover, I would change all instances of \"field\" to \"parameter\", except for those referring to a mathematical field (e.g., \"field element\").",
    "submit_date": "2024-05-12",
    "submitter_name": "Raul Siles",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 10:46:55"
  },
  {
    "errata_id": "7937",
    "doc-id": "RFC9180",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.1.3",
    "orig_text": "For X25519 and X448, the DeriveKeyPair() function applies \r\na KDF to the input:\r\n\r\n<function()>\r\n",
    "correct_text": "For X25519 and X448, the DeriveKeyPair() function applies \r\na KDF to the input:\r\n\r\n<function()>\r\n\r\nThe suite_id used implicitly in LabeledExtract() and LabeledExpand()\r\nfor DeriveKeyPair(ikm) is derived from the KEM identifier of the \r\nDHKEM in use (see Section 7.1), that is, based on the type of key \r\npair been generated for that DHKEM type.",
    "notes": "RFC 9180 dos not specify all the internal values for LabeledExtract(…) and LabeledExpand(…) for DeriveKeyPair(ikm), specifically the suite_id value. These values are required to standardise the DeriveKeyPair(ikm) function, as it is reference in other IETF drafts, such as https://www.ietf.org/archive/id/draft-westerbaan-cfrg-hpke-xyber768d00-02.html#name-derivekeypair-2, and because it is also used in the RFC 9180 KATs: see Appendix A.\r\n\r\n\r\nVerified on CFRG list by co-author with notes:   I looked at MLSpp and mls-rs, and both of those implementations compute `suite_id`, and they both do it in the way this erratum suggests. And since they interoperate with a bunch of other MLS stacks (including on HPKE), I assume this is how people are reading what's there now.  But it would be good to be explicit.",
    "submit_date": "2024-05-13",
    "submitter_name": "Raul Siles",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 10:47:43"
  }
]
