[
  {
    "errata_id": "1483",
    "doc-id": "RFC2616",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.6",
    "orig_text": "   The Internet Assigned Numbers Authority (IANA) acts as a registry for\r\n   transfer-coding value tokens. Initially, the registry contains the\r\n   following tokens: \"chunked\" (section 3.6.1), \"identity\" (section\r\n   3.6.2), \"gzip\" (section 3.5), \"compress\" (section 3.5), and \"deflate\"\r\n   (section 3.5).\r\n",
    "correct_text": "   The Internet Assigned Numbers Authority (IANA) acts as a registry for\r\n   transfer-coding value tokens. Initially, the registry contains the\r\n   following tokens: \"chunked\" (section 3.6.1), \"identity\" (section\r\n   3.5), \"gzip\" (section 3.5), \"compress\" (section 3.5), and \"deflate\"\r\n   (section 3.5).\r\n",
    "notes": "The tokens for Content-Codings are defined in section 3.5. These include the identity token.",
    "submit_date": "2008-08-06",
    "submitter_name": "Martin Kong",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "1619",
    "doc-id": "RFC2616",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.4",
    "orig_text": "   4.If the message uses the media type \"multipart/byteranges\", and the\r\n     ransfer-length is not otherwise specified, then this self-\r\n     elimiting media type defines the transfer-length. This media type\r\n     UST NOT be used unless the sender knows that the recipient can arse\r\n     it; the presence in a request of a Range header with ultiple byte-\r\n     range specifiers from a 1.1 client implies that the lient can parse\r\n     multipart/byteranges responses.",
    "correct_text": "   4.If the message uses the media type \"multipart/byteranges\", and the\r\n     transfer-length is not otherwise specified, then this self-\r\n     delimiting media type defines the transfer-length. This media type\r\n     MUST NOT be used unless the sender knows that the recipient can parse\r\n     it; the presence in a request of a Range header with multiple byte-\r\n     range specifiers from a 1.1 client implies that the client can parse\r\n     multipart/byteranges responses.",
    "notes": "> \"ransfer-length\" should be \"transfer-length\"\r\n> \"self-elimiting\" should be \"self-delimiting\";\r\n> \"UST\"should be \"MUST\";\r\n> \"arse\"should be \"parse\";\r\n> \"ultiple\"should be \"multiple\";\r\n> \"lient\"should be \"client\";",
    "submit_date": "2008-11-25",
    "submitter_name": "Heming Hou",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2301",
    "doc-id": "RFC2616",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "14.36",
    "orig_text": "   The Referer[sic] request-header field allows the client to specify,\r\n   for the server's benefit, the address (URI) of the resource from\r\n   which the Request-URI was obtained (the \"referrer\", although the\r\n   header field is misspelled.) The Referer request-header allows a\r\n   server to generate lists of back-links to resources for interest,\r\n   logging, optimized caching, etc. It also allows obsolete or mistyped\r\n   links to be traced for maintenance. The Referer field MUST NOT be\r\n   sent if the Request-URI was obtained from a source that does not have\r\n   its own URI, such as input from the user keyboard.",
    "correct_text": "   The Referer[sic] request-header field allows the client to specify,\r\n   for the server's benefit, the address (URI) of the resource from\r\n\r\n   whose message-body the Request-URI was obtained (the \"referrer\", although the\r\n   header field is misspelled.) The Referer request-header allows a\r\n   server to generate lists of back-links to resources for interest,\r\n   logging, optimized caching, etc. It also allows obsolete or mistyped\r\n   links to be traced for maintenance. The Referer field MUST NOT be\r\n   sent if the Request-URI was obtained from a source that does not have\r\n   its own URI, such as input from the user keyboard.",
    "notes": "The text should mention that the referrer is specified when the URI was obtained from the message-body of the Request-URI.\r\n\r\nFor instance, when the user agent receives a 302 response for a Request-URI, it does not specify the original Request-URI in the referrer header for the subsequent request - even though the (redirect) URI \"was obtained\" from the (header of the) 302 response for the original Request-URI.\r\n\r\nRoy T. Fielding replied:\r\nI think this should be rejected.  The referrer is the redirect.\r\nUser agents should be sending the redirecting URI in Referer,\r\nor sending nothing in Referer.\r\n\r\nIn any case, see the Link header field.  It is certainly possible\r\nto be referred by something in the header fields, so saying that it\r\nis in the message-body would be incorrect.\n --VERIFIER NOTES-- \nAs per the reply from Roy T. Fielding.",
    "submit_date": "2010-06-14",
    "submitter_name": "Conrad Roche",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2645",
    "doc-id": "RFC2616",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.5",
    "orig_text": "Use of program names for the identification of encoding formats \r\nis not desirable and is discouraged for future encodings. Their \r\nuse here is representative of historical practice, not good \r\ndesign. For compatibility with previous implementations of HTTP, \r\napplications SHOULD consider \"x-gzip\" and \"x-compress\" to be \r\nequivalent to \"gzip\" and \"compress\" respectively.\r\n",
    "correct_text": "Use of program names for the identification of encoding formats \r\nis not desirable and is discouraged for future encodings. Their \r\nuse here is representative of historical practice, not good \r\ndesign. For compatibility with future implementations of HTTP, \r\napplications SHOULD consider \"x-gzip\" and \"x-compress\" to be \r\nequivalent to \"gzip\" and \"compress\" respectively.\r\n",
    "notes": "\"For compatibility with previous implementations of HTTP\", \r\nhere, 'previous' should be replaced by 'future'.\n --VERIFIER NOTES-- \nComment by Peter Saint-Andre:\r\n\r\n   This erratum is incorrect -- the text is clearly about\r\n   backward compatibility, not forward compatibility. The\r\n   original poster can comment in the HTTPBIS WG about this\r\n   matter since draft-ietf-httpbis-p1-messaging has very \r\n   similar text.\r\n",
    "submit_date": "2010-11-27",
    "submitter_name": "Winfred Qin",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2806",
    "doc-id": "RFC2616",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "14.13",
    "orig_text": "Applications SHOULD use this field to indicate the transfer-length of\r\n   the message-body, unless this is prohibited by the rules in <a href=\"#section-   \">section</a>\r\n   <a href=\"#section-   \">4.4</a>.",
    "correct_text": "Applications SHOULD use this field to indicate the transfer-length of\r\n   the message-body, unless this is prohibited by the rules in \r\n<a href=\"#section-4.4\">section 4.4</a>.",
    "notes": "This errata refers to the linkified version of the RFC at:\r\n\r\nhttp://tools.ietf.org/html/rfc2616\r\n\r\nNote that the original and corrected text above both contain HTML tags. In case the text doesn't survive the form submission, just to describe the problem, the link in the text shown, an internal anchor link that should point to #section-4.4, is broken because the number 4.4 is missing at the end of the anchor inside the href quotes.\r\n\r\n--- VERIFIER NOTES ---\r\nThis report has been rejected because it is regarding a link in the HTML version of the RFC on tools.ietf.org. The report has been directed to webmaster@tools.ietf.org. \r\n\r\nErrata are for the RFCs as available from rfc-editor.org. ",
    "submit_date": "2011-05-12",
    "submitter_name": "Carlos McEvilly",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2998",
    "doc-id": "RFC2616",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.2.1",
    "orig_text": "   For definitive information on\r\n   URL syntax and semantics, see \"Uniform Resource Identifiers (URI):\r\n   Generic Syntax and Semantics,\" RFC 2396 [42] (which replaces RFCs\r\n   1738 [4] and RFC 1808 [11]).",
    "correct_text": "   For definitive information on\r\n   URL syntax and semantics, see \"Uniform Resource Identifiers (URI):\r\n   Generic Syntax and Semantics,\" RFC 3986 [<ref>] (which updates RFCs\r\n   1738 [4] and replaces RFC 1808 [11] and RFC 2396 [42]).\r\n",
    "notes": "<ref> should be added\n --VERIFIER NOTES-- \nThe reader can follow the chain of document updates from RFC 2396 to RFC 3986, which is why we do not modify published RFCs to track document updates for referenced specifications. In any case, the updated HTTP RFCs (being produced by the HTTPBIS WG) will contain the appropriate references. ",
    "submit_date": "2011-10-15",
    "submitter_name": "Julien Moutinho",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3056",
    "doc-id": "RFC2616",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.1.2",
    "orig_text": "Request-URI    = \"*\" | absoluteURI | abs_path | authority",
    "correct_text": "Request-URI    = \"*\" | absoluteURI | abs_path [ \"?\" query ] | authority\r\n",
    "notes": "so that \"/path?query\" is a valid Request-URI as it should.\r\n\r\nbecause it is not the case with RFC 3986\r\n(obsoleting RFC 2396 which has the same problem actually):\r\n\r\nabsoluteURI   = absolute-URI\r\nabs_path      = path-absolute\r\n\r\nabsolute-URI  = scheme \":\" hier-part [ \"?\" query ]\r\npath-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\r\nsegment-nz    = 1*pchar\r\nsegment       = *pchar\r\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\r\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\npct-encoded   = \"%\" HEXDIG HEXDIG\r\nsub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n --VERIFIER NOTES-- \nThis issue has been fixed in the revisions to RFC 2616, see http://trac.tools.ietf.org/wg/httpbis/trac/changeset/76\r\n",
    "submit_date": "2011-12-20",
    "submitter_name": "Julien Moutinho",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3206",
    "doc-id": "RFC2616",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "1.3",
    "orig_text": "   variant\r\n      A resource may have one, or more than one, representation(s)\r\n      associated with it at any given instant. Each of these\r\n      representations is termed a `varriant'.  Use of the term `variant'\r\n      does not necessarily imply that the resource is subject to content\r\n      negotiation.\r\n\r\n",
    "correct_text": "   variant\r\n      A resource may have one, or more than one, representation(s)\r\n      associated with it at any given instant. Each of these\r\n      representations is termed a `variant'.  Use of the term `variant'\r\n      does not necessarily imply that the resource is subject to content\r\n      negotiation.\r\n\r\n",
    "notes": "\"varriant\" Is this misspelling?",
    "submit_date": "2012-04-27",
    "submitter_name": "ValCot",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3407",
    "doc-id": "RFC2616",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "2.2",
    "orig_text": "   Comments can be included in some HTTP header fields by surrounding\r\n   the comment text with parentheses. Comments are only allowed in\r\n   fields containing \"comment\" as part of their field value definition.\r\n   In all other fields, parentheses are considered part of the field\r\n   value.\r\n\r\n       comment        = \"(\" *( ctext | quoted-pair | comment ) \")\"\r\n       ctext          = <any TEXT excluding \"(\" and \")\">\r\n\r\n   A string of text is parsed as a single word if it is quoted using\r\n   double-quote marks.\r\n\r\n       quoted-string  = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n       qdtext         = <any TEXT except <\">>\r\n\r\n   The backslash character (\"\\\") MAY be used as a single-character\r\n   quoting mechanism only within quoted-string and comment constructs.\r\n\r\n       quoted-pair    = \"\\\" CHAR",
    "correct_text": "   Comments can be included in some HTTP header fields by surrounding\r\n   the comment text with parentheses. Comments are only allowed in\r\n   fields containing \"comment\" as part of their field value definition.\r\n   In all other fields, parentheses are considered part of the field\r\n   value.\r\n\r\n       comment        = \"(\" *( ctext | quoted-pair | comment ) \")\"\r\n       ctext          = <any TEXT excluding \"\\\", \"(\" and \")\">\r\n\r\n   A string of text is parsed as a single word if it is quoted using\r\n   double-quote marks.\r\n\r\n       quoted-string  = ( <\"> *(qdtext | quoted-pair ) <\"> )\r\n       qdtext         = <any TEXT excluding \"\\\" and <\">>\r\n\r\n   The backslash character (\"\\\") MAY be used as a single-character\r\n   quoting mechanism only within quoted-string and comment constructs.\r\n\r\n       quoted-pair    = \"\\\" CHAR",
    "notes": "Allowing \"\\\" in qdtext and ctext creates ambiguous semantics.\r\n\r\nConsider:\r\n    \" \\\" (\\ was a qdtext, so string has terminated)\r\n    \" \\\"\"(\\ is part of the quoted pair \\\") \r\n    \" \\ \" (Is this an escaped space or a bare backslash?)\r\n    \" \\\\\"\" (first \\ is qdtext and second \\ is part of quoted-pair \\\")\r\n\r\nAnalogous examples would work for ctext and comment, as well.\r\n\r\nIt looks to me as though the intended meaning was for the implementer to consider \"\\\" part of a quoted-pair whenever possible.  It's always possible, so the obvious fix would be to exclude it from ctext and qdtext, and use \\\\ whenever the user desires a textual backslash.\r\n\r\n--- VERIFIER NOTES ---\r\nThis issue is already being dealt with in the HTTP 1.1 work in the HTTPBIS working group.  The 2616 updates, which will be published soon, will include fixes for this.",
    "submit_date": "2012-11-14",
    "submitter_name": "Thomas Lane",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "408",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.6",
    "orig_text": "   The Internet Assigned Numbers Authority (IANA) acts as a registry for\n   transfer-coding value tokens. Initially, the registry contains the\n   following tokens: \"chunked\" (section 3.6.1), \"identity\" (section\n   3.6.2), \"gzip\" (section 3.5), \"compress\" (section 3.5), and\n   \"deflate\" (section 3.5).",
    "correct_text": "",
    "notes": "There is no section 3.6.2; there is no such thing as Transfer-Coding:\nidentity in the RFC 2616 specification (note that there would not be\nquotes  around \"identity\" in the actual header!).",
    "submit_date": "2001-10-08",
    "submitter_name": "Greg Robson",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "411",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "14.3",
    "orig_text": "The Accept-Encoding request-header field is similar to Accept, but\r\nrestricts the content-codings (section 3.5) that are acceptable in\r\nthe response.\r\n\r\n       Accept-Encoding  = \"Accept-Encoding\" \":\"\r\n\r\n                          1#( codings [ \";\" \"q\" \"=\" qvalue ] )\r\n       codings          = ( content-coding | \"*\" )\r\n\r\n Examples of its use are:\r\n\r\n       Accept-Encoding: compress, gzip\r\n       Accept-Encoding:\r\n       Accept-Encoding: *\r\n       Accept-Encoding: compress;q=0.5, gzip;q=1.0\r\n       Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0",
    "correct_text": "The Accept-Encoding request-header field is similar to Accept, but\r\nrestricts the content-codings (section 3.5) that are acceptable in\r\nthe response.\r\n\r\n       Accept-Encoding  = \"Accept-Encoding\" \":\"\r\n\r\n                          1#( codings [ \";\" \"q\" \"=\" qvalue ] )\r\n       codings          = ( content-coding | \"*\" )\r\n\r\n Examples of its use are:\r\n\r\n       Accept-Encoding: compress, gzip\r\n       Accept-Encoding: *\r\n       Accept-Encoding: compress;q=0.5, gzip;q=1.0\r\n       Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0",
    "notes": "As you can see, Accept-Encoding has to consist of 1 or more ( codings [ \";\"\r\n\"q\" \"=\" qvalue ] ).  So you can't just leave the value of \"Accept-Encoding:\"\r\nempty.  The second example is, therefore, incorrect.\r\n\r\n------------------------------------------------\r\nAlexey: This issue was fixed in HTTPBIS WG, see <http://trac.tools.ietf.org/wg/httpbis/trac/ticket/25>",
    "submit_date": "2006-10-31",
    "submitter_name": "WooJin Chung",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "412",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": null,
    "orig_text": null,
    "correct_text": null,
    "notes": "From Scott Lawrence:\r\nAll known errata for this HTTP RFC will be found at: \r\nhttp://purl.org/NET/http-errata and \r\nhttp://www.w3.org/Protocols/HTTP/1.1/rfc2616bis/issues/\r\n\r\n\r\n",
    "submit_date": "2001-01-05",
    "submitter_name": "Justin Erenkrantz",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4522",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "13.5.1",
    "orig_text": " The following HTTP/1.1 headers are hop-by-hop headers:\r\n\r\n      - Connection\r\n      - Keep-Alive\r\n      - Proxy-Authenticate\r\n      - Proxy-Authorization\r\n      - TE\r\n      - Trailers\r\n      - Transfer-Encoding\r\n      - Upgrade\r\n",
    "correct_text": " The following HTTP/1.1 headers are hop-by-hop headers:\r\n\r\n      - Connection\r\n      - Keep-Alive\r\n      - Proxy-Authenticate\r\n      - Proxy-Authorization\r\n      - TE\r\n      - Trailer\r\n      - Transfer-Encoding\r\n      - Upgrade\r\n",
    "notes": "Trailers (with a s) does not seem to a header field, just a keyword for TE.\r\nI think that Trailer (without a s) is expected here.\r\n\r\nAFAIK, RFC 7230 does not have such an explicit list and is not concerned.",
    "submit_date": "2015-11-03",
    "submitter_name": "Christophe JAILLET",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "652",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.4",
    "orig_text": "4.If the message uses the media type \"multipart/byteranges\", and the\r\n  ransfer-length is not otherwise specified, then this self-\r\n  elimiting media type defines the transfer-length. This media type\r\n  UST NOT be used unless the sender knows that the recipient can arse\r\n  it; the presence in a request of a Range header with ultiple byte-\r\n  range specifiers from a 1.1 client implies that the lient can parse\r\n  multipart/byteranges responses.",
    "correct_text": "4.If the message uses the media type \"multipart/byteranges\", and the\r\n  Transfer-length is not otherwise specified, then this self-\r\n  delimiting media type defines the transfer-length. This media type\r\n  MUST NOT be used unless the sender knows that the recipient can parse\r\n  it; the presence in a request of a Range header with multiple byte-\r\n  range specifiers from a 1.1 client implies that the client can parse\r\n  multipart/byteranges responses.",
    "notes": "Missing the first character of 6 words.",
    "submit_date": "2000-12-23",
    "submitter_name": "Justin Erenkrantz",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "653",
    "doc-id": "RFC2616",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "1.3",
    "orig_text": "Each of these representations is termed a `varriant'.",
    "correct_text": "Each of these representations is termed a `variant'.\r\n\r\n",
    "notes": "",
    "submit_date": "2000-12-23",
    "submitter_name": "Justin Erenkrantz",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "8514",
    "doc-id": "RFC2616",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "1.3 Terminology",
    "orig_text": "variant\r\n      A resource may have one, or more than one, representation(s)\r\n      associated with it at any given instant. Each of these\r\n      representations is termed a `varriant'.  Use of the term `variant'\r\n      does not necessarily imply that the resource is subject to content\r\n      negotiation.",
    "correct_text": "variant\r\n      A resource may have one, or more than one, representation(s)\r\n      associated with it at any given instant. Each of these\r\n      representations is termed a `variant'.  Use of the term `variant'\r\n      does not necessarily imply that the resource is subject to content\r\n      negotiation.",
    "notes": "`varriant' --> `variant'",
    "submit_date": "2025-07-16",
    "submitter_name": "Logan Stottle",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "892",
    "doc-id": "RFC2616",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.4",
    "orig_text": "4.  If the message uses the media type \"multipart/byteranges\", and the\r\n     ransfer-length is not otherwise specified, then this self-\r\n     elimiting media type defines the transfer-length.",
    "correct_text": "4.  If the message uses the media type \"multipart/byteranges\", and the\r\n     transfer-length is not otherwise specified, then this self-\r\n     elimiting media type defines the transfer-length.\r\n",
    "notes": "",
    "submit_date": "2006-10-31",
    "submitter_name": "WooJin Chung",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  }
]
