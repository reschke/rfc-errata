[
  {
    "errata_id": "4075",
    "doc-id": "RFC6797",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "14",
    "orig_text": "   Without the \"includeSubDomains\" directive, HSTS is unable to protect\r\n   such Secure-flagged domain cookies.",
    "correct_text": "   Without the \"includeSubDomains\" directive, HSTS is unable to protect\r\n   such Secure-flagged domain cookies.\r\n\r\n   Even with the \"includeSubDomains\" directive, the unavailability of \r\n   an \"includeParent\" directive means that an Active MITM attacker can \r\n   perform a cookie-injection attack against an otherwise \r\n   HSTS-protected victim domain.\r\n\r\n   Consider the following scenario:\r\n\r\n    The user visits https://sub.example.com and gets a HSTS policy with\r\n    includeSubdomains set. All subsequent navigations to \r\n    sub.example.com and its subdomains will be secure.\r\n\r\n    An attacker causes the victim's browser to navigate to \r\n    http://example.com. Because the HSTS policy applies only to \r\n    sub.example.com and its superdomain matches, this insecure \r\n    navigation is not blocked by the user agent.\r\n\r\n    The attacker intercepts this insecure request and returns a \r\n    response that sets a cookie on the entire domain tree using a \r\n    Set-Cookie header.\r\n\r\n    All subsequent requests to sub.example.com carry the injected\r\n    cookie, despite the use of HSTS.",
    "notes": "To mitigate this attack, HSTS-protected websites should perform a background fetch of a resource at the first-level domain. This resource should carry a HSTS header that will apply to the entire domain and all subdomains.\n --VERIFIER NOTES-- \nThis is a valid issue, but not suitable for the errata system.  The websec working group is discussing handling this with a short document to update RFC 6797.",
    "submit_date": "2014-08-08",
    "submitter_name": "Eric Lawrence",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5204",
    "doc-id": "RFC6797",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.1.2",
    "orig_text": "includeSubDomains",
    "correct_text": "include-sub-domains\r\n\r\nor\r\n\r\nincludesubdomains",
    "notes": "- In Section 6.1 the Strict-Transport-Security is defined as follows:\r\n\r\nStrict-Transport-Security = \"Strict-Transport-Security\" \":\" [ directive ]  *( \";\" [ directive ] )\r\n\r\n - valueless Directive \"includeSubDomains\" is defined as a optional directive\r\n - a directive is definied as followed:\r\n\r\ndirective = directive-name [ \"=\" directive-value ]\r\n\r\n - so \"includeSubDomains\" is only a directive-name which is defined as \"token\"\r\n - according to \"[RFC2616], Section 2.2\" a token is any octet from 0 - 127 except CTL's (octets 0 - 31 + 127) and separators which NOT exclude '-' (octet 45)\r\n\r\n\r\nSo all Fine? Yes, BUT at [RFC6797], Section 6.1 the \"overall reuqirements for directives\", Rule 3 defines:\r\n\r\n3.  Directive names are case-insensitive.\r\n\r\nAnd there is no other specification in Section 6.1.2 or has a IANA policy definition [RFC5226] like it is defined for additionals.\r\n\r\n\r\n\r\n - That means the \"directive-name\" includeSubDomains is \"case-insensitive\"!\r\n\r\nThe \"case-sensitive\" camelized directive-name is misleading, because of many other definitions with \"-\", like seen in all examples or in Header Field itself. \r\n\r\n\r\n - to aware the clear understanding the \"directive definition\" in section 6.1.2 and ALL occurences needs to be renamend.\r\n\r\nthe minimum of renaming is \"includesubdomains\" OR \"INCLUDESUBDOMAINS\", but this is not readable anymore.\r\n- So it should be renamed like other valuless directives for Example the \"schemes-source's\" directives at \"Content-Security-Policy\", which means:\r\n\r\n\"include-sub-domains\"\r\n\r\n\r\nBest Regards\r\n\r\nNick\n --VERIFIER NOTES-- \nThat is true, directive names are case insensitive, which means that, except for possibly misleading the reader, includeSubDomains and includesubdomains are equivalent. Making this change might be considered an editorial fix, however I do not believe this is necessary. Changing the name to \"include-sub-domains\" can't be done via an erratum, and would need a publishing a consensus document and an update to this rfc.",
    "submit_date": "2017-12-13",
    "submitter_name": "Nick Dil√üner",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-10-29 03:16:31"
  },
  {
    "errata_id": "5372",
    "doc-id": "RFC6797",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "8.1",
    "orig_text": "o  Update the UA's cached information for the Known HSTS Host if\r\n      either or both of the max-age and includeSubDomains header field\r\n      value tokens are conveying information different than that already\r\n      maintained by the UA.",
    "correct_text": "o  Update the UA's cached information for the Known HSTS Host.",
    "notes": "Section 8.1 states:\r\n\r\n   Update the UA's cached information for the Known HSTS Host if either\r\n   or both of the max-age and includeSubDomains header field value\r\n   tokens are conveying information different than that already\r\n   maintained by the UA.\r\n\r\nThe way I understand this is that if a HSTS host keeps sending the same values to a conforming client, this should not update the information cached and hence the cached information will expire after max-age seconds have passed since the _first_reception_ of this header.\r\n\r\nHowever, section 11.2 states:\r\n\r\n   The \"constant value into the future\" approach can be accomplished by\r\n   constantly sending the same max-age value to UAs.\r\n\r\n   For example, a max-age value of 7776000 seconds is 90 days:\r\n\r\n   Strict-Transport-Security: max-age=7776000\r\n\r\n   Note that each receipt of this header by a UA will require the UA to\r\n   update its notion of when it must delete its knowledge of this Known\r\n   HSTS Host.\r\n\r\nThis seems to contradict what I quoted from section 8.1. If the server constantly sends a max-age of 7776000 and includeSubDomains is not changed (which is implicit in the example), then by 8.1 the cache\r\ninformation won't be updated.\r\n\r\nI believe that the desired implementation behavior is as described in 11.2, that is, UA must update the cached information, regardless of whether either of the max-age or includeSubDomains header field values are different from what is already maintained by the UA.\r\n\n --VERIFIER NOTES-- \n I believe this comes from a misinterpretation of the following text:\r\n\"conveying information different than that already maintained\"\r\n\r\nThe text covers the case this report describes, and is consistent with what described in 11.2 and how the reporter reads it, i.e. even if the \"max-age\" value is the same, as the age is evolving, the _information_ on its expiracy is in fact different. As such, this report is rejected.",
    "submit_date": "2018-05-29",
    "submitter_name": "Claudio Saavedra",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-10-29 07:20:35"
  },
  {
    "errata_id": "8153",
    "doc-id": "RFC6797",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "8.1.1",
    "orig_text": "8.1.1.  Noting an HSTS Host - Storage Model\r\n\r\n   If the substring matching the host production from the Request-URI\r\n   (of the message to which the host responded) syntactically matches\r\n   the IP-literal or IPv4address productions from Section 3.2.2 of\r\n   [RFC3986], then the UA MUST NOT note this host as a Known HSTS Host.\r\n\r\n   Otherwise, if the substring does not congruently match a Known HSTS\r\n   Host's domain name, per the matching procedure specified in\r\n   Section 8.2 (\"Known HSTS Host Domain Name Matching\"), then the UA\r\n   MUST note this host as a Known HSTS Host, caching the HSTS Host's\r\n   domain name and noting along with it the expiry time of this\r\n   information, as effectively stipulated per the given max-age value,\r\n   as well as whether the includeSubDomains directive is asserted or\r\n   not.  See also Section 11.2 (\"HSTS Policy Expiration Time\r\n   Considerations\").\r\n\r\n   The UA MUST NOT modify the expiry time or the includeSubDomains\r\n   directive of any superdomain matched Known HSTS Host.\r\n\r\n   A Known HSTS Host is \"expired\" if its cache entry has an expiry date\r\n   in the past.  The UA MUST evict all expired Known HSTS Hosts from its\r\n   cache if, at any time, an expired Known HSTS Host exists in the\r\n   cache.",
    "correct_text": "8.1.1.  Noting an HSTS Host - Storage Model\r\n\r\n   If the substring matching the host production from the Request-URI\r\n   (of the message to which the host responded) syntactically matches\r\n   the IP-literal or IPv4address productions from Section 3.2.2 of\r\n   [RFC3986], then the UA MUST NOT note this host as a Known HSTS Host.\r\n\r\n   If the substring matching the host production from the Request-URI\r\n   (of the message to which the host responded) syntactically matches\r\n   the string \"localhost\" or ends with \".localhost\", then the UA MAY\r\n   choose not to note this host as a Known HSTS host.\r\n\r\n   Otherwise, if the substring does not congruently match a Known HSTS\r\n   Host's domain name, per the matching procedure specified in\r\n   Section 8.2 (\"Known HSTS Host Domain Name Matching\"), then the UA\r\n   MUST note this host as a Known HSTS Host, caching the HSTS Host's\r\n   domain name and noting along with it the expiry time of this\r\n   information, as effectively stipulated per the given max-age value,\r\n   as well as whether the includeSubDomains directive is asserted or\r\n   not.  See also Section 11.2 (\"HSTS Policy Expiration Time\r\n   Considerations\").\r\n\r\n   The UA MUST NOT modify the expiry time or the includeSubDomains\r\n   directive of any superdomain matched Known HSTS Host.\r\n\r\n   A Known HSTS Host is \"expired\" if its cache entry has an expiry date\r\n   in the past.  The UA MUST evict all expired Known HSTS Hosts from its\r\n   cache if, at any time, an expired Known HSTS Host exists in the\r\n   cache.",
    "notes": "Localhost is already a secure context and unambiguously refers to the local machine, for which transport-level security is not required. Because multiple software packages from independent vendors commonly run on localhost (and web developers commonly use localhost for testing), but HSTS is applied to ALL ports on a given host, the setting of HSTS rules for localhost can cause unexpected and difficult to avoid functional errors.\r\n\r\nFirefox does not apply HSTS to Localhost requests and a corresponding change is pending for Chromium (see https://crbug.com/41251622)\n --VERIFIER NOTES-- \nYour proposed change is not in scope for errata reports, which are meant to collect errors in the documents, things that were actual errors at publication and that would have been fixed at that time had the working group or document authors noticed them -- they were just missed. \r\n\r\nWhat you've reported changes the intended behaviour (adding normative text), and is not an erratum. This sort of change needs to be achieved through a consensus document, possibly an update to this document. I would suggest that you re-formulate this suggestion and post it to the websec mailing list, which is still open: <websec@ietf.org>.",
    "submit_date": "2024-10-18",
    "submitter_name": "Eric Matthew Lawrence",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2024-10-29 03:09:03"
  },
  {
    "errata_id": "8186",
    "doc-id": "RFC6797",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "6.1",
    "orig_text": "     directive-value           = token | quoted-string",
    "correct_text": "     directive-value           = token / quoted-string",
    "notes": "The \"directive-value\" production should use a \"/\" for alternatives, not a \"|\".  See RFC 5234, which should be referenced by this spec but isn't.  This is an editorial nitpick.",
    "submit_date": "2024-11-22",
    "submitter_name": "Joe Hildebrand",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
