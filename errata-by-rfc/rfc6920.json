[
  {
    "errata_id": "4248",
    "doc-id": "RFC6920",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "8.2",
    "orig_text": "   | .well-known URL (split over 2 lines):                             |\r\n   | http://example.com/.well-known/ni/sha256/                         |\r\n   | UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q                       |",
    "correct_text": "   | .well-known URL (split over 2 lines):                             |\r\n   | http://example.com/.well-known/ni/sha-256/                        |\r\n   | UyaQV-Ev4rdLoHyJJWCi11OHfrYv9E1aGQAlMO2X_-Q                       |",
    "notes": "The 'alg' part of the well-known URL should be the same as that of the ni URI (\"sha-256\"), but is missing the hyphen in the example.",
    "submit_date": "2015-01-28",
    "submitter_name": "Matthew Kerwin",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "7129",
    "doc-id": "RFC6920",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "8.1",
    "orig_text": "   The following ni URI is generated from the text \"Hello World!\" (12\r\n   characters without the quotes), using the sha-256 algorithm shown\r\n   with and without an authority field:\r\n\r\n   ni:///sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk\r\n\r\n   ni://example.com/sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk\r\n",
    "correct_text": "   The following ni URI is generated from the text \"Hello World!\" (12\r\n   characters without the quotes), using the sha-256 algorithm shown\r\n   with and without an authority field:\r\n\r\n   ni://example.com/sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk\r\n\r\n   ni:///sha-256;f4OxZX_x_FO5LcGBSKHWXfwtSx-j1ncoSt3SABJtkGk\r\n",
    "notes": "Make example consistent with the \"with and without\" language.\r\n\r\n --VERIFIER NOTES--\r\nThis has been marked as held for document update per author input: co-authors […] concluded that indeed it would be more clear if the order of the examples was changed as suggested by the report.",
    "submit_date": "2022-09-13",
    "submitter_name": "Venkatesh",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2022-09-19 14:16:04"
  },
  {
    "errata_id": "8174",
    "doc-id": "RFC6920",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "9.4",
    "orig_text": "the hash algorithm name string",
    "correct_text": "the case-(in)sensitive hash algorithm name string",
    "notes": "The RFC does not specify whether the Hash Name String is considered to be case-sensitive or not. According to RFC 8126, section 2.2., it should be clearly stated whether case matters, like in RFC 7518, section 7.1.1. Does this mean one should interpret them as case-insensitive?\r\n\r\nVerifier notes:\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc6920#section-2\r\nhttps://www.rfc-editor.org/rfc/rfc2234#section-6.1\r\n\r\nalg            = 1*unreserved\r\nunreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\r\nALPHA          =  %x41-5A / %x61-7A   ; A-Z / a-z\r\n\r\nIts clear that algorithm name's can contain uppercase characters.\r\n\r\nIn the discussion regarding this errata, there was no objection to the following comment\r\n\r\n> this should have been case sensitive and restricted to lower-case only in the ABNF (now it’s “unreserved”).\r\n\r\nSuch a change cannot be made through the errata process, and requires an update.\r\n\r\nNone the less the current registry contains no uppercase character based algorithm names, and hopefully won't in the future.\r\n",
    "submit_date": "2024-11-12",
    "submitter_name": "Henry Jalonen",
    "verifier_id": "176",
    "verifier_name": "Orie Steele",
    "update_date": "2024-11-19 06:26:44"
  }
]
