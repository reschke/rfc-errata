[
  {
    "errata_id": "4347",
    "doc-id": "RFC4867",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.3.1",
    "orig_text": "   CMR (4 bits): Indicates a codec mode request sent to the speech\r\n      encoder at the site of the receiver of this payload.  The value of\r\n      the CMR field is set to the frame type index of the corresponding\r\n      speech mode being requested.  The frame type index may be 0-7 for\r\n      AMR, as defined in Table 1a in [2], or 0-8 for AMR-WB, as defined\r\n      in Table 1a in [4].  CMR value 15 indicates that no mode request\r\n      is present, and other values are for future use.\r\n\r\n   The codec mode request received in the CMR field is valid until the\r\n   next codec mode request is received, i.e., a newly received CMR value\r\n   corresponding to a speech mode, or NO_DATA overrides the previously\r\n   received CMR value corresponding to a speech mode or NO_DATA.\r\n   Therefore, if a terminal continuously wishes to receive frames in the\r\n   same mode X, it needs to set CMR=X for all its outbound payloads, and\r\n   if a terminal has no preference in which mode to receive, it SHOULD\r\n   set CMR=15 in all its outbound payloads.\r\n\r\n   If receiving a payload with a CMR value that is not a speech mode or\r\n   NO_DATA, the CMR MUST be ignored by the receiver.\r\n",
    "correct_text": "   CMR (4 bits): Indicates a codec mode request sent to the speech\r\n      encoder at the site of the receiver of this payload.  The value of\r\n      the CMR field is set to the frame type index of the corresponding\r\n      speech mode being requested.  The frame type index may be 0-7 for\r\n      AMR, as defined in Table 1a in [2], or 0-8 for AMR-WB, as defined\r\n      in Table 1a in [4].  CMR value 15 indicates that the receiver has\r\n      no preference in which mode within the negotiated mode set to\r\n      receive, and other values are for future use.\r\n\r\n   The codec mode request received in the CMR field is valid until the\r\n   next codec mode request is received, i.e., a newly received CMR value\r\n   corresponding to a speech mode, or CMR=15 overrides the previously\r\n   received CMR value corresponding to a speech mode or CMR=15.\r\n   Therefore, if a terminal continuously wishes to receive frames not \r\n   higher than mode X, it needs to set CMR=X for all its outbound\r\n   payloads, and if a terminal has no preference in which mode within \r\n   the negotiated mode set to receive, it SHOULD set CMR=15 in all its\r\n   outbound payloads.\r\n\r\n   If receiving a payload with a CMR value that is not a speech mode or\r\n   CMR=15, the CMR MUST be ignored by the receiver.\r\n",
    "notes": "The definition of CMR 15 as \"no mode request is present\", could be understood to suggest that other previously received CMR values remain applicable. However, this contradicts text in the subsequent paragraphs suggesting CMR=15 should be used when the \"terminal has no preference in which mode to receive\", and stating that any previously received CMR value is overridden by CMR=15.\r\n\r\nIt is thus unclear for a receiving entity that has previously received a CMR value requesting a lower AMR mode and then receives a CMR value 15 if it should continue to send using the lower AMR mode or if it can select a higher mode within the negotiated mode set based on own preferences.\r\n\r\nCMR 15 is referred to as \"NO_DATA\" in subsequent text, but \"NO_DATA\" is not well defined. This value appears in the quoted references, but these references are only quoted for CMR values 0 to 7/8.\r\n\r\nIt is also not perfectly clear if CMR=15 allows for any mode, or only modes within the negotiated mode set. However, the definition of the mode-set parameter in Clause 8.1 suggests that only modes within the negotiated mode-set can be sent when a mode-set has been negotiated.\r\n\r\nThe text \"if a terminal continuously wishes to receive frames in the same mode X, it needs to set CMR=X for all its outbound payloads\" seems to suggest that the receiver will always follow the request, although it may also choose to send lower modes, as explained in text further below.\r\n\r\nThis erratum has been discussed and endorsed by the 3GPP SA4 group before submission to IETF.",
    "submit_date": "2015-04-27",
    "submitter_name": "Thomas Belling",
    "verifier_id": "147",
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4348",
    "doc-id": "RFC4867",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.3.1",
    "orig_text": "   The encoder SHOULD follow a received codec mode request, but MAY\r\n   change to a lower-numbered mode if it so chooses, for example, to\r\n   control congestion.\r\n",
    "correct_text": "   The encoder MUST follow a received codec mode request as soon as\r\n   possible. It SHOULD use the requested mode, but MAY change to a\r\n   lower-numbered mode if it so chooses, for example, to\r\n   control congestion. However, the encoder MUST NOT use a\r\n   higher-numbered mode than the received codec mode request.\r\n",
    "notes": "This seems to be the intention of the existing text, but is not explicitly stated. It is essential for the end-to-end mode control and interoperability with 3GPP CS networks that a peer does not send higher modes than requested.\r\n\r\nThis erratum has been discussed and endorsed by the 3GPP SA4 group before submission to IETF.",
    "submit_date": "2015-04-27",
    "submitter_name": "Thomas Belling",
    "verifier_id": "147",
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4349",
    "doc-id": "RFC4867",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "8.1",
    "orig_text": "      mode-set: Restricts the active codec mode set to a subset of all\r\n               modes, for example, to be able to support transport\r\n               channels such as GSM networks in gateway use cases.\r\n               Possible values are a comma separated list of modes from\r\n               the set: 0,...,7 (see Table 1a [2]).  The SID frame type\r\n               8 and NO_DATA (frame type 15) are never included in the\r\n               mode set, but can always be used.  If mode-set is\r\n               specified, it MUST be abided, and frames encoded with\r\n               modes outside of the subset MUST NOT be sent in any RTP\r\n               payload or used in codec mode requests.  If not present,\r\n               all codec modes are allowed for the payload type.\r\n",
    "correct_text": "      mode-set: Restricts the active codec mode set to a subset of all\r\n               modes, for example, to be able to support transport\r\n               channels such as GSM networks in gateway use cases.\r\n               Possible values are a comma separated list of modes from\r\n               the set: 0,...,7 (see Table 1a [2]).  The SID frame type\r\n               8 and NO_DATA (frame type 15) are never included in the\r\n               mode set, but can always be used.  If mode-set is\r\n               specified, it MUST be abided, i.e. frames encoded with\r\n               modes outside of the subset MUST NOT be sent in any RTP\r\n               payload and codec mode requests MUST only use modes\r\n               within the mode-set or CMR=15. If the mode-set parameter\r\n               is not present, then all codec modes are allowed for the\r\n               payload type.\r\n",
    "notes": "The existing text rules out that CMR=15 is used when a mode-set has been negotiated. However, this contradicts a statement in .clause 4.3.1 that if a terminal has no preference in which mode to receive, it SHOULD set CMR=15 in all its outbound payloads.\r\n\r\nThis erratum has been discussed and endorsed by the 3GPP SA4 group before submission to IETF.",
    "submit_date": "2015-04-27",
    "submitter_name": "Thomas Belling",
    "verifier_id": "147",
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "8531",
    "doc-id": "RFC4867",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "8.2",
    "orig_text": "      ptime: see RFC 2327 [11].",
    "correct_text": "      ptime: see RFC 4566 [11].",
    "notes": "The same reference is correctly titled in section 8.1.",
    "submit_date": "2025-08-12",
    "submitter_name": "Jan Tojnar",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
