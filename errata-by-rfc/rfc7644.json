[
  {
    "errata_id": "4670",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.2.2",
    "orig_text": "Filters MUST be evaluated using the following order of operations, in\r\n   order of precedence:\r\n\r\n   1.  Grouping operators\r\n\r\n   2.  Logical operators - where \"not\" takes precedence over \"and\",\r\n       which takes precedence over \"or\"\r\n\r\n   3.  Attribute operators",
    "correct_text": "Filters MUST be evaluated using the following order of operations, in\r\n   order of precedence:\r\n\r\n   1.  Grouping operators\r\n\r\n   2.  Attribute operators\r\n\r\n   3.  Logical operators - where \"not\" takes precedence over \"and\",\r\n       which takes precedence over \"or\"",
    "notes": "It seems that the precedence of logical and attribute precedence is reversed? The filter filter=title sw \"M\" and userType eq \"Employee\" is meant to be interpreted as filter=(title sw \"M\") and (userType eq \"Employee\"). \r\nThis is also the \"expected\" behaviour consistent with most other languages - with the notable exception of unary \"or\" which in SCIM is disambiguated as it can only apply to a parenthesized filter expression.",
    "submit_date": "2016-04-15",
    "submitter_name": "Vassilis Michalitsis",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4690",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.2.2",
    "orig_text": "valFilter = attrExp / logExp / *1\"not\" \"(\" valFilter \")\"",
    "correct_text": "valFilter = attrExp / valLogExp / *1\"not\" \"(\" valFilter \")\"\r\n\r\nvalLogExp = attrExp SP (\"and\" / \"or\") SP attrExp",
    "notes": "Figure 1 contains the ABNF for SCIM filters. The term \"logExp\" specifies \"FILTER\" as an option which unintentionally allows recursion. A valFilter should only allow simple sub-attribute expressions and simple logic.  Nesting of valuePath (e.g. attr[a eq b and attr[c eq d]]) should not be possible.",
    "submit_date": "2016-05-10",
    "submitter_name": "Phil Hunt",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4978",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "/ServiceProviderConfig\r\n",
    "correct_text": "/ServiceProviderConfigs\r\n",
    "notes": "Per the details provided on the SCIM website http://www.simplecloud.info/#overview, the endpoint should be /ServiceProviderConfigs. A trailing \"s\" is missing. The SCIM implementations of major service providers like Facebook, Salesforce, Slack implement /ServiceProviderConfigs",
    "submit_date": "2017-03-24",
    "submitter_name": "asgs",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5050",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.7.3",
    "orig_text": "       {\r\n         \"method\": \"PATCH\",\r\n         \"path\": \"/Users/5d8d29d3-342c-4b5f-8683-a3cb6763ffcc\",\r\n         \"version\": \"W/\\\"edac3253e2c0ef2\\\"\",\r\n         \"data\": {[\r\n           {\r\n               \"op\": \"remove\",\r\n               \"path\": \"nickName\"\r\n           },\r\n           {\r\n               \"op\": \"add\",\r\n               \"path\": \"userName\",\r\n               \"value\": \"Dave\"\r\n           }\r\n         ]}\r\n       },\r\n",
    "correct_text": "       {\r\n         \"method\": \"PATCH\",\r\n         \"path\": \"/Users/5d8d29d3-342c-4b5f-8683-a3cb6763ffcc\",\r\n         \"version\": \"W/\\\"edac3253e2c0ef2\\\"\",\r\n         \"data\": {\r\n           \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:PatchOp\"],\r\n           \"Operations\": [\r\n               {\r\n                  “schemas”:[\"\r\n                  \"op\": \"remove\",\r\n                  \"path\": \"nickName\"\r\n               },\r\n               {\r\n                  \"op\": \"add\",\r\n                  \"path\": \"userName\",\r\n                  \"value\": \"Dave\"\r\n               }\r\n           ]\r\n         }\r\n       },",
    "notes": "The example figure is incorrect. It should show the actual patch operation request body in the JSON attribute \"data\" as it would be expressed in its own HTTP request payload.  Instead it shows the values of the \"operations\" attribute. See sec 3.7 definition of \"data\".",
    "submit_date": "2017-06-23",
    "submitter_name": "Phil Hunt",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5295",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.5.2.1",
    "orig_text": "If the user was already a member of this group, no changes should be\r\nmade to the resource, and a success response should be returned.\r\nThe server responds with either the entire updated Group or no\r\nresponse body:\r\n\r\n   HTTP/1.1 204 No Content\r\n   Authorization: Bearer h480djs93hd8\r\n   ETag: W/\"b431af54f0671a2\"\r\n   Location:\r\n   \"https://example.com/Groups/acbf3ae7-8463-...-9b4da3f908ce\"\r\n",
    "correct_text": "If the user was already a member of this group, no changes should be\r\nmade to the resource, and a success response should be returned.\r\nThe server responds with either the entire updated Group or no\r\nresponse body:\r\n\r\n   HTTP/1.1 204 No Content\r\n   ETag: W/\"b431af54f0671a2\"\r\n",
    "notes": "The Authorization header is a request header and should not be included in a response.\r\nThe Location header is used to redirect a client to a new location or indicate the location of a new resource. Neither is the case here, so the header should be omitted.\r\n\r\nAlso, it's unclear from the text whether it's valid to respond with 204 No Content if the user was successfully added to the group.",
    "submit_date": "2018-03-22",
    "submitter_name": "Marcel van den Dungen",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6010",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "\"totalResults\":2,\r\n\"itemsPerPage\":10,",
    "correct_text": "\"totalResults\":2,\r\n\"itemsPerPage\":2,",
    "notes": "Per Section 3.4.2.4, \"itemsPerPage\" specifies the number of query results returned in a page. In Section 4 Figure 9, the page contains only 2 items, so the \"itemsPerPage\" should be 2 not 10.",
    "submit_date": "2020-03-09",
    "submitter_name": "Shelley Baker",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6893",
    "doc-id": "RFC7644",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "7.5.2",
    "orig_text": "HTTP/1.1 403 Forbidden\r\n\r\n  {\r\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n    \"detail\":\r\n          \"Query filter involving 'name' is restricted or confidential\",\r\n    \"scimType\": \"sensitive\",\r\n    \"status\": \"404\"\r\n  }\r\n",
    "correct_text": "HTTP/1.1 403 Forbidden\r\n\r\n  {\r\n    \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n    \"detail\":\r\n          \"Query filter involving 'name' is restricted or confidential\",\r\n    \"scimType\": \"sensitive\",\r\n    \"status\": \"403\"\r\n  }\r\n",
    "notes": "The error \"status\" value in the figure is wrong. It should be \"403\", consistent with the normative text and the HTTP Status at the start of the figure.",
    "submit_date": "2022-03-24",
    "submitter_name": "Phil Hunt",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2022-03-25 13:49:46"
  },
  {
    "errata_id": "7122",
    "doc-id": "RFC7644",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.5.2",
    "orig_text": "   The \"path\" attribute is described by the following ABNF syntax rule:\r\n\r\n                   PATH = attrPath / valuePath [subAttr]\r\n\r\n                      Figure 7: SCIM PATCH PATH Rule\r\n\r\n   The ABNF rules \"attrPath\", \"valuePath\", and \"subAttr\" are defined in\r\n   Section 3.4.2.2.  The \"valuePath\" rule allows specific values of a\r\n   complex multi-valued attribute to be selected.",
    "correct_text": "   The \"path\" attribute is described by the following ABNF syntax rule:\r\n\r\n                   PATH = attrPath / valuePath [subAttr] / attrExp\r\n\r\n                      Figure 7: SCIM PATCH PATH Rule\r\n\r\n   The ABNF rules \"attrPath\", \"valuePath\", \"subAttr\", and \"attrExp\" are \r\n   defined in Section 3.4.2.2. The \"valuePath\" rule allows specific \r\n   values of a complex multi-valued attribute to be selected.",
    "notes": "In section 3.5.2.2. (Remove Operation), states:\r\n\r\n\"If the target location is a multi-valued attribute and a complex\r\nfilter is specified comparing a \"value\", the values matched by the\r\nfilter are removed.  If no other values remain after removal of\r\nthe selected values, the multi-valued attribute SHALL be\r\nconsidered unassigned.\"\r\n\r\nThis means it should be possible to create a filter that selects a value from a multi-valued attribute that is not complex. Writing such a filter seems impossible without having \"attrExp\" as a possible legal PATH.\r\n\r\nIn section 3.4.2.2.  (Filtering) there is an example that shows how such a filter could look for a multi-valued attribute, i.e.:\r\n\r\nfilter=\r\n schemas eq \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\"\r\n\r\nThis would also work for a path filter, e.g.:\r\n\r\n{\r\n  \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:PatchOp\"],\r\n  \"Operations\":[{\r\n    \"op\":\"remove\",\r\n    \"path\":\"schemas eq \\\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\\\"\"\r\n  }]\r\n}\r\n\r\n[AD Note: The document reflects consensus of the working group at the time of publication, but on review it is believed that any future update work in this space should consider this erratum.]",
    "submit_date": "2022-09-08",
    "submitter_name": "Egil Hansen",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2022-09-12 09:13:03"
  },
  {
    "errata_id": "7319",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.2.2",
    "orig_text": "     FILTER    = attrExp / logExp / valuePath / *1\"not\" \"(\" FILTER \")\"\r\n\r\n     valuePath = attrPath \"[\" valFilter \"]\"\r\n                 ; FILTER uses sub-attributes of a parent attrPath\r\n\r\n     valFilter = attrExp / logExp / *1\"not\" \"(\" valFilter \")\"",
    "correct_text": "     FILTER    = attrExp / logExp / valuePath / *1(\"not\" SP) \"(\" FILTER \")\"\r\n\r\n     valuePath = attrPath \"[\" valFilter \"]\"\r\n                 ; FILTER uses sub-attributes of a parent attrPath\r\n\r\n     valFilter = attrExp / logExp / *1(\"not\" SP) \"(\" valFilter \")\"",
    "notes": "Note the following example filter listed further down in section 3.4.2.2:\r\n\r\n     filter=userType ne \"Employee\" and not (emails co \"example.com\" or\r\n  emails.value co \"example.org\")\r\n\r\nThere is a space between the \"not\" and the opening parenthesis, which is not allowed in the listed ABNF grammar. The corrected text includes a mandatory space between these two tokens.\r\n\r\nIt may be desired to use `*1(\"not\" *1SP) \"(\"` instead, for backwards compatibility reasons. This would allow for an optional space after a \"not\" keyword. Or, it may be desired to instead edit the example to remove the space, preserving the original intent of the listed grammar.",
    "submit_date": "2023-01-25",
    "submitter_name": "James Linnell",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7322",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.2.2",
    "orig_text": "    valFilter = attrExp / logExp / *1\"not\" \"(\" valFilter \")\"",
    "correct_text": "    valFilter = attrExp / valLogExp / *1\"not\" \"(\" valFilter \")\"\r\n\r\n    valLogExp = valFilter SP (\"and\" / \"or\") SP valFilter",
    "notes": "This is a correction to Errata 4690 for this RFC. Errata 4690 introduced the following `valLogExp`:\r\n\r\n    valLogExp = attrExp SP (\"and\" / \"or\") SP attrExp\r\n\r\nHowever, this fails to allow the following filter expression:\r\n\r\n    emails[type eq \"work\" or (type eq \"home\" and value ew \"@example.com\")]\r\n\r\nbecause 4690's `valLogExp`'s recursion into `attrExp` would not allow for the parenthetical expression. The fixed `valLogExp` correctly recurs back into `valFilter` to allow for an `attrExp`, or a joined `logExp`, or a parenthtical.\r\n\r\nWhile this example is not in the list of other exceptions in Section 3.4.2.2, the original use of `logExp` and the recurred `FILTER` would suggest that this example is within the original intent of the document.",
    "submit_date": "2023-01-26",
    "submitter_name": "James Linnell",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7898",
    "doc-id": "RFC7644",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.12",
    "orig_text": "   Example of an error in response to a PUT request:\r\n\r\n   HTTP/1.1 400 Bad Request\r\n\r\n   {\r\n     \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n     \"scimType\":\"mutability\"\r\n     \"detail\":\"Attribute 'id' is readOnly\",\r\n     \"status\": \"400\"\r\n   }",
    "correct_text": "   Example of an error in response to a PUT request:\r\n\r\n   HTTP/1.1 400 Bad Request\r\n\r\n   {\r\n     \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n     \"scimType\":\"mutability\",\r\n     \"detail\":\"Attribute 'id' is readOnly\",\r\n     \"status\": \"400\"\r\n   }",
    "notes": "The response body is invalid JSON due to the missing comma after \"mutability\".",
    "submit_date": "2024-04-17",
    "submitter_name": "Osman Merghani Osman Elsayed",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-04-17 10:52:16"
  },
  {
    "errata_id": "7916",
    "doc-id": "RFC7644",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.7.3",
    "orig_text": " containing a human-readable explanation of the error.\r\n\r\n   \"status\": \"201\"\r\n\r\n   The following is an example of a status in a failed operation.\r\n\r\n  \"status\": \"400\",\r\n  \"response\":{\r\n       \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n       \"scimType\":\"invalidSyntax\"\r\n       \"detail\":\r\n  \"Request is unparsable, syntactically incorrect, or violates schema.\",\r\n       \"status\":\"400\"\r\n   }",
    "correct_text": " containing a human-readable explanation of the error.\r\n\r\n The following is an example of a status in a failed operation.\r\n\r\n  {\r\n     \"status\": \"400\",\r\n     \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:Error\"],\r\n     \"scimType\":\"invalidSyntax\",\r\n     \"detail\":\"Request is unparsable, syntactically incorrect, or violates schema.\",\r\n   }",
    "notes": "it misses a { at the beginning of the 400 sample \r\nit missies a ,  after invalidSyntax\r\n\r\nthe overall response looks wrong\r\n\r\nNotice that even putting a there can be questionnable as well , and an alternative would be to just drop the content mentionned\r\n\r\nSecAD Summary of the changes (per the authors):\r\n* Remove line: “status”: “201”\r\n* Add leading brace ‘{‘\r\n* Add missing comma after “invalidSyntax”\r\n",
    "submit_date": "2024-04-29",
    "submitter_name": "Francois LASNE",
    "verifier_id": "2",
    "verifier_name": "Deb Cooley",
    "update_date": "2024-05-13 11:24:08"
  },
  {
    "errata_id": "8057",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.2.2",
    "orig_text": "The following are examples of valid filters.  Some attributes (e.g.,\r\n   rooms and rooms.number) are hypothetical extensions and are not part\r\n   of the SCIM core schema:",
    "correct_text": "The following are examples of valid filters.",
    "notes": "The mentioned hypothetical extensions \"rooms\" and \"rooms.number\" cannot be found in the examples in Figure 2. It makes it a bit confusing when reading it because it takes some time to see that actually all attributes in the examples can be found in RFC7643. Only the filter for schema with the Enterprise user extension is outside the core schema, but that is also not a hypothetical extension. Therefore, I think it is more clear to remove that sentence since all filters in the examples are valid.",
    "submit_date": "2024-07-30",
    "submitter_name": "Andreas Häber",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2024-07-30 11:50:54"
  },
  {
    "errata_id": "8084",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.3",
    "orig_text": "   {\r\n     \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:ListResponse\"],\r\n     \"totalResults\":100,\r\n     \"itemsPerPage\":10,\r\n     \"startIndex\":1,\r\n     \"Resources\":[\r\n       {\r\n         \"id\":\"2819c223-7f76-413861904646\",\r\n         \"userName\":\"jsmith\",\r\n         \"displayName\":\"Smith, James\"\r\n       },\r\n       {\r\n         \"id\":\"c8596b90-7539-4f20968d1908\",\r\n         \"displayName\":\"Smith Family\"\r\n       },\r\n        ...\r\n     ]\r\n   }",
    "correct_text": "   {\r\n     \"schemas\": [\"urn:ietf:params:scim:api:messages:2.0:ListResponse\"],\r\n     \"totalResults\":100,\r\n     \"itemsPerPage\":10,\r\n     \"startIndex\":1,\r\n     \"Resources\":[\r\n       {\r\n         \"id\":\"2819c223-7f76-413861904646\",\r\n         \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:User\"],\r\n         \"userName\":\"jsmith\",\r\n         \"displayName\":\"Smith, James\"\r\n       },\r\n       {\r\n         \"id\":\"c8596b90-7539-4f20968d1908\",\r\n         \"schemas\": [\"urn:ietf:params:scim:schemas:core:2.0:Group\"],\r\n         \"displayName\":\"Smith Family\"\r\n       },\r\n        ...\r\n     ]\r\n   }",
    "notes": "RFC7643 §3 indicates that the schema attribute is needed for all the representations:\r\n\r\n      The \"schemas\" attribute is a REQUIRED attribute and is an array of\r\n      Strings containing URIs that are used to indicate the namespaces\r\n      of the SCIM schemas that define the attributes present in the\r\n      current JSON structure. [...]\r\n      All representations of SCIM schemas MUST include a\r\n      non-empty array with value(s) of the URIs supported by that\r\n      representation.",
    "submit_date": "2024-08-19",
    "submitter_name": "Éloi Rivard",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2024-08-20 09:28:52"
  },
  {
    "errata_id": "8096",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.5.2.1",
    "orig_text": " {\r\n     \"schemas\":\r\n       [\"urn:ietf:params:scim:api:messages:2.0:PatchOp\"],\r\n     \"Operations\":[{\r\n       \"op\":\"add\",\r\n       \"value\":{\r\n         \"emails\":[\r\n           {\r\n             \"value\":\"babs@jensen.org\",\r\n             \"type\":\"home\"\r\n           }\r\n         ],\r\n         \"nickname\":\"Babs\"\r\n     }]\r\n   }\r\n",
    "correct_text": "{\r\n     \"schemas\":\r\n       [\"urn:ietf:params:scim:api:messages:2.0:PatchOp\"],\r\n     \"Operations\":[{\r\n       \"op\":\"add\",\r\n       \"value\":{\r\n         \"emails\":[\r\n           {\r\n             \"value\":\"babs@jensen.org\",\r\n             \"type\":\"home\"\r\n           }\r\n         ],\r\n         \"nickname\":\"Babs\"\r\n        }\r\n     }]\r\n   }\r\n",
    "notes": "missing one closing curly bracket",
    "submit_date": "2024-09-07",
    "submitter_name": "Siqing Zheng",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2024-09-11 10:30:01"
  },
  {
    "errata_id": "8097",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.5.2.1",
    "orig_text": "  o  If the target location does not exist, the attribute and value are\r\n      added.\r\n\r\n   o  If the target location specifies a complex attribute, a set of\r\n      sub-attributes SHALL be specified in the \"value\" parameter.\r\n\r\n   o  If the target location specifies a multi-valued attribute, a new\r\n      value is added to the attribute.",
    "correct_text": "N/A\r\nPlease see Notes.",
    "notes": "Looks Microsoft Azure had a different understanding about the patch 'add' operation, in which they add an additional element to the multi-value attribute by the filter in the path. \r\nFor example, \r\n{\r\n...\r\n       \"op\":\"add\",\r\n       \"path\":\"emails[type eq \\\"work\\\"].value\"\r\n       \"value\":\"example@email.com\"\r\n...\r\n  } \r\nMicrosoft Azure expects to add a new email with value \"example@email.com\" and type \"work\". \r\nHowever, I think it's a pretty hacky way to do it and may not be the RFC intent. I also found there was a discussion about it, which they claim the RFC is not very clear about the patch 'add' part. \r\nLink to discussion on Microsoft platform: https://learn.microsoft.com/en-us/answers/questions/708183/scim-patch-of-complex-multi-valued-attribute-inclu#:~:text=are%20relevant%20here%3A-,If%20the%20target%20location%20does%20not%20exist,-%2C%20the%20attribute%20and\r\n\r\nCould we please clarify if such 'add' patch by filter is expected or not? or may be add an extra example? \r\n\r\nThanks!",
    "submit_date": "2024-09-08",
    "submitter_name": "Siqing Zheng",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "8365",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "   /ResourceTypes\r\n      An HTTP GET to this endpoint is used to discover the types of\r\n      resources available on a SCIM service provider (e.g., Users and\r\n      Groups).  Each resource type defines the endpoints, the core\r\n      schema URI that defines the resource, and any supported schema\r\n      extensions.",
    "correct_text": "   /ResourceTypes\r\n      An HTTP GET to this endpoint is used to discover the types of\r\n      resources available on a SCIM service provider (e.g., Users and\r\n      Groups).  Each resource type defines the endpoint, the core\r\n      schema URI that defines the resource, and any supported schema\r\n      extensions.",
    "notes": "The word \"endpoint\" should be in singular. Each ResourceType can only define one endpoint because the attribute \"endpoint\" is single-valued in RFC7643 section 6.",
    "submit_date": "2025-04-01",
    "submitter_name": "Matthias Winter",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "8367",
    "doc-id": "RFC7644",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.4.1",
    "orig_text": "3.4.1.  Retrieving a Known Resource\r\n\r\n   To retrieve a known resource, clients send GET requests to the\r\n   resource endpoint, e.g., \"/Users/{id}\", \"/Groups/{id}\", or\r\n   \"/Schemas/{id}\", where \"{id}\" is a resource identifier (for example,\r\n   the value of the \"id\" attribute).",
    "correct_text": "3.4.1.  Retrieving a Known Resource\r\n\r\n   To retrieve a known resource, clients send GET requests to the\r\n   resource endpoint, e.g., \"/Users/{id}\", \"/Groups/{id}\", or\r\n   \"/Schemas/{id}\", where \"{id}\" is the value of the \"id\" attribute\r\n   of the resource.",
    "notes": "The change clearifies that \"{id}\" is the value of the \"id\" attribute.\r\n\r\nIn the original text, the value of the \"id\" attribute is only mentioned as an example. It remains unclear if the value of the \"id\" attribute always is a \"resource identifier\" or if there may be exceptions. It also remains unclear, which other attribute values are considered \"resource identifiers\", e.g. the values of \"externalId\", \"userName\" for User resources, \"name\" for Resource Type resources, and so on.\r\n\r\nRFC6743 specifies for example:\r\n* \"id\" as \"A unique identifier for a SCIM resource\" (section 3.1)\r\n* \"externalId\" as \"identifier for the resource\" (section 3.1)\r\n* \"userName\" as \"unique identifier for the user\" (section 4.1.1)\r\nBut as a client I would rather not expect a GET call on \"/Users/{userName}\" or \"/Users/{externalId}\" to work. It is also unclear which object would be returned if the \"{externalId}\" or \"{userName}\" matches the \"{id}\" of a different user.",
    "submit_date": "2025-04-01",
    "submitter_name": "Matthias Winter",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
