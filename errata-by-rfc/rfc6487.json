[
  {
    "errata_id": "3168",
    "doc-id": "RFC6487",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.8",
    "orig_text": "   or non-critical.  A certificate-using system MUST reject the\r\n   certificate if it encounters a critical extension it does not\r\n   recognize; however, a non-critical extension MAY be ignored if it is\r\n   not recognized [RFC5280].",
    "correct_text": "   or non-critical.  A certificate-using system MUST reject the\r\n   certificate if it encounters an extension not explicitly mentioned\r\n   in this document.  This is in contrast to RFC 5280 which allows\r\n   non-critical extensions to be ignored.",
    "notes": "Other sections of the same document contradict the original section 4.8:\r\n\r\nSection 1:\r\n\r\n   Any extensions not explicitly mentioned MUST be absent.  The same\r\n   applies to the CRLs used in the RPKI, that are also profiled in this\r\n   document.\r\n\r\nSection 8:\r\n\r\n   Certificate Extensions:\r\n         This profile does not permit the use of any other critical or\r\n         non-critical extensions.\n --VERIFIER NOTES-- \n   This is a technical change to the RFC and needs to be addressed though the IETF consensus process and rather than via the errata process.",
    "submit_date": "2012-03-26",
    "submitter_name": "David Mandelberg",
    "verifier_id": "122",
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3174",
    "doc-id": "RFC6487",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "   An RPKI CA MUST include the two extensions, Authority Key Identifier\r\n   and CRL Number, in every CRL that it issues.  RPs MUST be prepared to\r\n   process CRLs with these extensions.  No other CRL extensions are\r\n   allowed.",
    "correct_text": "   An RPKI CA MUST include the two extensions, Authority Key Identifier\r\n   and CRL Number, in every CRL that it issues.  The Authority Key\r\n   Identifier extension MUST follow the same restrictions as in\r\n   Section 4.8.3 above.  RPs MUST be prepared to process CRLs with\r\n   these extensions.  No other CRL extensions are allowed.",
    "notes": "RFC 6487 doesn't specify any restrictions on the format of the AKI extension in CRLs.\n --VERIFIER NOTES-- \n   The discussion on the SIDR list concluded that this errata should be rejected, although there appears an issue that may need addressing through a new errata or a revision to the RFC text.",
    "submit_date": "2012-04-03",
    "submitter_name": "David Mandelberg",
    "verifier_id": "122",
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3205",
    "doc-id": "RFC6487",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "   An RPKI CA MUST include the two extensions, Authority Key Identifier\r\n   and CRL Number, in every CRL that it issues.  RPs MUST be prepared to\r\n   process CRLs with these extensions.  No other CRL extensions are\r\n   allowed.",
    "correct_text": "   An RPKI CA MUST include the two extensions, Authority Key Identifier\r\n   and CRL Number, in every CRL that it issues.  RPs MUST be prepared to\r\n   process CRLs with these extensions.  No other CRL extensions are\r\n   allowed. The extensions mentioned above MUST NOT appear more than \r\n   once each.",
    "notes": "The clarification:\r\n\r\n\"The extensions mentioned above MUST NOT appear more than once each.\"\r\n\r\nis added.",
    "submit_date": "2012-04-27",
    "submitter_name": "David Mandelberg",
    "verifier_id": "122",
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3238",
    "doc-id": "RFC6487",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3",
    "orig_text": " ExtendedKeyUsage\r\n         The CA MAY honor ExtendedKeyUsage extensions of keyCertSign and\r\n         cRLSign if present, as long as this is consistent with the\r\n         BasicConstraints SubjectType sub-field, when specified.",
    "correct_text": " ExtendedKeyUsage\r\n         The CA MAY honor ExtendedKeyUsage extensions in requests for EE\r\n         certificates that are issued to routers or other devices, consistent with values\r\n         specified in Standards Track RFCs that adopt this profile and that identify\r\n         application-specific requirements that motivate the use of such EKUs.",
    "notes": "The current text appears to be the result of a \"cut and paste\" error. It is essentially identical to the text \r\nfor the Key Usage extension, and names two fields that appear in that extension, not in an EKU extension. The text I propose above parallels what appears in Section 4.8.5, which describes how an\r\n EKU MAY be used in RPKI certificates.",
    "submit_date": "2012-05-31",
    "submitter_name": "Stephen Kent",
    "verifier_id": "122",
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4080",
    "doc-id": "RFC6487",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.1.1",
    "orig_text": "This field MAY be omitted.  If present, the value of this field\r\nSHOULD be empty (i.e., NULL), in which case the CA MUST\r\ngenerate a subject name that is unique in the context of\r\ncertificates issued by this CA.  This field is allowed to be\r\nnon-empty only for a re-key/reissuance request, and only if the\r\nCA has adopted a policy (in its Certificate Practice Statement\r\n(CPS)) that permits reuse of names in these circumstances.",
    "correct_text": "This field\r\nSHOULD be empty (i.e., NULL), in which case the CA MUST\r\ngenerate a subject name that is unique in the context of\r\ncertificates issued by this CA.  This field is allowed to be\r\nnon-empty only for a re-key/reissuance request, and only if the\r\nCA has adopted a policy (in its Certificate Practice Statement\r\n(CPS)) that permits reuse of names in these circumstances.\r\n\r\n",
    "notes": "Submitted after consultation with the responsible AD and WG chairs.\r\n\r\nThe subject field included in the PKCS#10 request can't be omitted because the ASN.1 in RFC 2986 doesn’t allow subject to be omitted - there’s no “OPTIONAL” in the ASN.1:\r\n\r\nCertificationRequestInfo ::= SEQUENCE {\r\n       version       INTEGER { v1(0) } (v1,...),\r\n       subject       Name,\r\n       subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\r\n       attributes    [0] Attributes{{ CRIAttributes }}\r\n  }\r\n\r\nIn other words, four fields are included in every certificate request.  If there’s no subject field it’s a NULL (see RFC5280 for omitting subjects) and if there’s no attributes it’s an empty sequence.  version and subjectPKInfo (subject public key information) are always present.",
    "submit_date": "2014-08-12",
    "submitter_name": "Sean Turner",
    "verifier_id": "140",
    "verifier_name": "Alia Atlas",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5187",
    "doc-id": "RFC6487",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "7.1",
    "orig_text": "      encompass\r\n         Given two IP address and AS number sets, X and Y, X\r\n         \"encompasses\" Y if, for every contiguous range of IP addresses\r\n         or AS numbers elements in set Y, the range element is either\r\n         \"more specific\" than or \"equal\" to a contiguous range element\r\n         within the set X.\r\n",
    "correct_text": "      encompass\r\n         Given two IP address or two AS number sets, X and Y, X\r\n         \"encompasses\" Y if, for every contiguous range of IP addresses\r\n         or AS numbers elements in set Y, the range element is either\r\n         \"more specific\" than or \"equal\" to a contiguous range element\r\n         within the set X.\r\n",
    "notes": null,
    "submit_date": "2017-11-28",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "148",
    "verifier_name": "Alvaro Retana",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5188",
    "doc-id": "RFC6487",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "7.1",
    "orig_text": "   Validation of a certificate's resource extension in the context of a\r\n   certification path (see Section 7.2 entails that for every adjacent\r\n",
    "correct_text": "   Validation of a certificate's resource extension in the context of a\r\n   certification path (see Section 7.2) entails that for every adjacent\r\n",
    "notes": "The closing parenthesis is missing.",
    "submit_date": "2017-11-28",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "148",
    "verifier_name": "Alvaro Retana",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5190",
    "doc-id": "RFC6487",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "8",
    "orig_text": "         3) A randomly generated ASCII HEX encoded string of length 20\r\n            or greater:\r\n            example: cn=\"0f8fcc28e3be4869bc5f8fa114db05e1\">\r\n            (A string of 20 ASCII HEX digits would have 80-bits of\r\n            entropy)\r\n",
    "correct_text": "         3) A randomly generated ASCII HEX encoded string of length 20\r\n            or greater:\r\n            example: cn=\"0f8fcc28e3be4869bc5f8fa114db05e1\"\r\n            (A string of 20 ASCII HEX digits would have 80-bits of\r\n            entropy)\r\n",
    "notes": "Typo",
    "submit_date": "2017-11-28",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "148",
    "verifier_name": "Alvaro Retana",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5191",
    "doc-id": "RFC6487",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "8",
    "orig_text": "            (The issuing CA may wish to be able to extract the database\r\n            key or subscriber ID from the commonName.  Since only the\r\n            issuing CA would need to be able to parse the commonName,\r\n            the database key and the source of entropy (e.g., a UUID)\r\n            could be separated in any way that the CA wants, as long as\r\n            it conforms to the rules for PrintableString.  The separator\r\n\r\n\r\n\r\n\r\nHuston, et al.               Standards Track                   [Page 21]\r\n\f\r\nRFC 6487              Resource Certificate Profile         February 2012\r\n\r\n\r\n            could be a space character, parenthesis, hyphen, slash,\r\n            question mark, etc.\r\n",
    "correct_text": "            (The issuing CA may wish to be able to extract the database\r\n            key or subscriber ID from the commonName.  Since only the\r\n            issuing CA would need to be able to parse the commonName,\r\n            the database key and the source of entropy (e.g., a UUID)\r\n            could be separated in any way that the CA wants, as long as\r\n            it conforms to the rules for PrintableString.  The separator\r\n\r\n\r\n\r\n\r\nHuston, et al.               Standards Track                   [Page 21]\r\n\f\r\nRFC 6487              Resource Certificate Profile         February 2012\r\n\r\n\r\n            could be a space character, parenthesis, hyphen, slash,\r\n            question mark, etc).\r\n",
    "notes": "The closing parenthesis is missing.",
    "submit_date": "2017-11-28",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "148",
    "verifier_name": "Alvaro Retana",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6854",
    "doc-id": "RFC6487",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.8.1",
    "orig_text": "   The Basic Constraints extension field is a critical extension in the\r\n   resource certificate profile, and MUST be present when the subject is\r\n   a CA, and MUST NOT be present otherwise.\r\n\r\n   The issuer determines whether the \"cA\" boolean is set.",
    "correct_text": "   The Basic Constraints extension field is critical and MUST be present \r\n   when the \"cA\" field is TRUE, otherwise it MUST NOT be present.",
    "notes": "See discussion at https://mailarchive.ietf.org/arch/msg/sidrops/dPCiDz_pDR68G4cTC8W7X5LTE5o/\n\nThe original text is tautological -- Since according to RFC 5280 §4.2.1.9 the \"cA\" boolean MUST be set when the subject is a CA, and MUST NOT be set when the subject is not a CA, then it's axiomatic that \n\ncA boolean set <=> Basic Constraints field present <=> subject is a CA\n\nAlthough the original text is not strictly speaking wrong, it's potentially misleading since it could be read as implying that it's possible to have the cA boolean FALSE in a CA certificate, which is not so.",
    "submit_date": "2022-02-16",
    "submitter_name": "Corey Bonnell",
    "verifier_id": "171",
    "verifier_name": "John Scudder",
    "update_date": "2022-05-24 10:40:38"
  },
  {
    "errata_id": "8506",
    "doc-id": "RFC6487",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "6.1",
    "orig_text": "6.1.  PCKS#10 Profile",
    "correct_text": "6.1.  PKCS#10 Profile",
    "notes": "Typo in initialism for Public Key Cryptography Standards #10 (RFC 2986)",
    "submit_date": "2025-07-06",
    "submitter_name": "Theo Buehler",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
