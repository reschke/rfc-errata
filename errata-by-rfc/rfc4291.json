[
  {
    "errata_id": "1627",
    "doc-id": "RFC4291",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "2.7",
    "orig_text": "   Routers must not forward any multicast packets beyond of the scope\r\n   indicated by the scop field in the destination multicast address.\r\n",
    "correct_text": "   Routers must not forward any multicast packets beyond the scope\r\n   indicated by the scop field in the destination multicast address.\r\n",
    "notes": "extraneous \"of\"",
    "submit_date": "2007-03-02",
    "submitter_name": "Yelland Mr Michael",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2466",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "2.2.2",
    "orig_text": "In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates one or more groups of 16 bits of zeros.\r\n      The \"::\" can only appear once in an address.",
    "correct_text": "In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates two or more groups of 16 bits of zeros.\r\n      The \"::\" can only appear once in an address.",
    "notes": " --VERIFIER NOTES-- \r\nBob Hinden evaluated this errata:\r\n\r\nI believe that this errata should be rejected.  This was discussed on the v6ops mailing list around February 25, 2011.  I responded: \r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07741.html\r\n\r\nThe thread starts at:\r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07722.html\r\n\r\nAlso, two errata were filed based on this one (Errata ID: 2735, Errata ID: 2702) that I think should also be rejected as they assume that this errata was correct.\r\n   ",
    "submit_date": "2010-08-16",
    "submitter_name": "Michael Rushton",
    "verifier_id": "2",
    "verifier_name": "Ralph Droms",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2702",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "2.3",
    "orig_text": "For example, the following are legal representations of the 60-bit\r\nprefix 20010DB80000CD3 (hexadecimal):\r\n\r\n   2001:0DB8:0000:CD30:0000:0000:0000:0000/60\r\n   2001:0DB8::CD30:0:0:0:0/60\r\n   2001:0DB8:0000:CD30::/60",
    "correct_text": "For example, the following are legal representations of the 60-bit\r\nprefix 20010DB80000CD3 (hexadecimal):\r\n\r\n   2001:0DB8:0000:CD30:0000:0000:0000:0000/60\r\n   2001:0DB8:0000:CD30::/60",
    "notes": "According to the erratum reported on 2010-08-16 by Michael Rushton, the second text representation address of the example will be no more valid and should be taken away and keep the first and third ones.\r\nThis is because the use of \"::\" indicates two or more groups of 16 bits of zeros. Thank you\n --VERIFIER NOTES-- \n   Related to Bob Hinden's review of errata 2466:\r\n\r\nI believe that this errata should be rejected.  This was discussed on the v6ops mailing list around February 25, 2011.  I responded: \r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07741.html\r\n\r\nThe thread starts at:\r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07722.html\r\n\r\nAlso, two errata were filed based on this one (Errata ID: 2735, Errata ID: 2702) that I think should also be rejected as they assume that this errata was correct.",
    "submit_date": "2011-02-01",
    "submitter_name": "Bassam Al-Khaffaf",
    "verifier_id": "117",
    "verifier_name": "Ralph Droms",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2735",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "2.2",
    "orig_text": "2. Due to some methods of allocating certain styles of IPv6\r\n      addresses, it will be common for addresses to contain long strings\r\n      of zero bits.  In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates one or more groups of 16 bits of zeros.\r\n      The \"::\" can only appear once in an address.  The \"::\" can also be\r\n      used to compress leading or trailing zeros in an address.\r\n\r\n\r\n For example, the following addresses\r\n\r\n         2001:DB8:0:0:8:800:200C:417A   a unicast address\r\n         FF01:0:0:0:0:0:0:101           a multicast address\r\n         0:0:0:0:0:0:0:1                the loopback address\r\n         0:0:0:0:0:0:0:0                the unspecified address\r\n\r\n      may be represented as\r\n\r\n         2001:DB8::8:800:200C:417A      a unicast address\r\n         FF01::101                      a multicast address\r\n         ::1                            the loopback address\r\n         ::                             the unspecified address\r\n",
    "correct_text": "2. Due to some methods of allocating certain styles of IPv6\r\n      addresses, it will be common for addresses to contain long strings\r\n      of zero bits.  In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates two or more groups of 16 bits of zeros.\r\n      The \"::\" can only appear once in an address.  The \"::\" can also be\r\n      used to compress leading or trailing zeros in an address.  All\r\n      compressed groups of 16 bits of zeros MUST be aligned with their\r\n      respective leading and trailing \":\".\r\n\r\n For example, the following addresses\r\n\r\n         2001:DB8:9300:0:12:0:0:417A    a unicast address\r\n         FF01:0:0:0:0:0:0:101           a multicast address\r\n         0:0:0:0:0:0:0:1                the loopback address\r\n         0:0:0:0:0:0:0:0                the unspecified address\r\n\r\n      may be represented as\r\n\r\n         2001:DB8:9300:0:12::417A       a unicast address\r\n         FF01::101                      a multicast address\r\n         ::1                            the loopback address\r\n         ::                             the unspecified address\r\n\r\n      and MUST NOT be represented as\r\n\r\n         2001:DB8:93::12:0:0:417A       an incorrect unicast address\r\n",
    "notes": "Errata ID: 2466 would change the text I am changing, as well.\r\n\r\nMy changed text includes the change from errata 2466 to avoid the likelyhood of human mistakes.\r\n\r\nIn case http://tools.ietf.org/html/draft-denog-v6ops-addresspartnaming becomes a RFC before this errata can be worked in, \"group of 16 bits of zeros\" should be replaced with \"$new_term of zeros\" or similar. As it looks today, $new_term will most likely end up being \"hextet\".\r\n\r\n\r\n\r\nThe current wording allows for 2001:DB8:9300:12:0:0:417A to be written as 2001:DB8:93::12:0:0:417A which is clearly wrong and against the intentions behind the relevant RFCs. While RFC 5952 puts additional constraints on compression, it still allows for the incorrect example given above.\r\n\r\nThus, alignment of 16 bit groups of zeros along \":\" is enforced specifically.\n --VERIFIER NOTES-- \nRelated to Bob Hinden's report on errata 2466:\r\n\r\nI believe that this errata should be rejected.  This was discussed on the v6ops mailing list around February 25, 2011.  I responded: \r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07741.html\r\n\r\nThe thread starts at:\r\n\r\n http://www.ietf.org/mail-archive/web/v6ops/current/msg07722.html\r\n\r\nAlso, two errata were filed based on this one (Errata ID: 2735, Errata ID: 2702) that I think should also be rejected as they assume that this errata was correct.   ",
    "submit_date": "2011-02-24",
    "submitter_name": "Richard Hartmann",
    "verifier_id": "117",
    "verifier_name": "Ralph Droms",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3480",
    "doc-id": "RFC4291",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "2.7",
    "orig_text": "Interface-Local scope spans only a single interface on a node\r\nand is useful only for loopback transmission of multicast.",
    "correct_text": "Interface-Local scope spans only a single interface on a node \r\nand is useful only for loopback transmission of multicast.\r\nPackets with interface-local scope received from another node \r\nmust be discarded.",
    "notes": "It should be explicitly stated that interface-local scoped multicast packets \r\nreceived from the link must be discarded.\r\nThe BSD implementation currently does this, but not Linux.\r\nhttp://www.ietf.org/mail-archive/web/ipv6/current/msg17154.html",
    "submit_date": "2013-02-07",
    "submitter_name": "Erik Hugne",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4406",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "2.5.6",
    "orig_text": "   Link-Local addresses are for use on a single link.  Link-Local\r\n   addresses have the following format:\r\n\r\n   |   10     |\r\n   |  bits    |         54 bits         |          64 bits           |\r\n   +----------+-------------------------+----------------------------+\r\n   |1111111010|           0             |       interface ID         |\r\n   +----------+-------------------------+----------------------------+\r\n",
    "correct_text": "   Link-Local addresses are for use on a single link.  Link-Local\r\n   addresses have the following format:\r\n\r\n   |   10     |\r\n   |  bits    |         54 bits         |          64 bits           |\r\n   +----------+-------------------------+----------------------------+\r\n   |1111111010|     arbitrary value     |       interface ID         |\r\n   +----------+-------------------------+----------------------------+\r\n",
    "notes": "Section 2.4 of this RFC states that link-local addresses are identified by having the prefix FE80::/10. According to this prefix, the entire range of link-local addresses covers all addresses within the range of FE80:: through FEBF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF.\r\n\r\nThe format of link-local addresses as stated in Section 2.5.6 seems to partially contradict Section 2.4 in that it fixes the internal 54 bits between the 10-bit prefix and the IID to the value of 0. If that was the case then the prefix of link-local addresses would have been in fact FE80::/64 instead of FE80::/10, and the range of link-local addresses would have been limited to FE80:: through FE80::FFFF:FFFF:FFFF:FFFF. Thus, the definition of link-local addresses as follows from Section 2.4 does not align with the definition of link-local addresses as presented in Section 2.5.6.\r\n\r\nI suggest resolving this internal contradiction by explicitly stating in Section 2.5.6 that the internal 54 bits of a link-local address that follow the FE80::/10 prefix can be of an arbitrary value.\r\n\r\nThank you!\n --VERIFIER NOTES-- \n   Section 2.4 reserves the FE80::/10 prefix for use on the local link.  Section 2.5.6 specifies that the current definition of a link-local address falls in the FE80::/64 prefix.  The suggested change would be a technical change to a consensus-based decision.  The re-definition of the link-local address would need to be driven by a draft updating RFC 4291.",
    "submit_date": "2015-06-29",
    "submitter_name": "Peter Paluch",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5716",
    "doc-id": "RFC4291",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.5",
    "orig_text": "   A slightly sophisticated host (but still rather simple) may\r\n   additionally be aware of subnet prefix(es) for the link(s) it is\r\n   attached to, where different addresses may have different values for\r\n   n:",
    "correct_text": "   For Link-Local unicast addresses, which comprise a flat address\r\n   space that is reused on every link, the consideration above is all\r\n   that is relevant. For Global Unicast addresses, however, a slightly\r\n   sophisticated host (but still rather simple) may additionally be\r\n   aware of subnet prefix(es) for the link(s) it is attached to, where\r\n   different addresses may have different values for n:\r\n",
    "notes": "Text in several sections of 4291 seem to be logically inconsistent with respect to Link-Local unicast addresses. The inconsistency spans Sections 2.1, 2.5 and 2.5.6.\r\n\r\nSection 2.5 says that unicast addresses, including Link-Local unicast addresses, on links a host is attached to have the following internal structure, providing a definition for \"subnet prefix\":\r\n\r\n   |          n bits               |           128-n bits            |\r\n   +-------------------------------+---------------------------------+\r\n   |       subnet prefix           |           interface ID          |\r\n   +-------------------------------+---------------------------------+\r\n\r\nSection 2.5.6 specifies that Link-Local unicast addresses have the following format:\r\n\r\n   |   10     |\r\n   |  bits    |         54 bits         |          64 bits           |\r\n   +----------+-------------------------+----------------------------+\r\n   |1111111010|           0             |       interface ID         |\r\n   +----------+-------------------------+----------------------------+\r\n\r\nApplying the Section 2.5 definition, Link-Local unicast addresses hence have a subnet prefix of fe80::/64 on every link.\r\n\r\nSection 2.1 says this about the addressing model:\r\n\r\n   Currently, IPv6 continues the IPv4 model in that a subnet prefix is\r\n   associated with one link.\r\n\r\nClearly the use of a same Link-Local unicast subnet prefix on every link is inconsistent with an addressing model that requires a subnet prefix to be unique to one link. The plain reading of this text is that it disagrees with itself, so either something needs to change to bring it into agreement or some explanation of how this is in fact consistent needs to be made. Since I don't know what the intent of this was I don't really know what needs fixing.\r\n\r\nThe proposed text hence reflects my personal biases; while I understand subnet prefix uniqueness to be foundational to the forwarding behaviour of Global Unicasts I have no idea what a \"subnet prefix\" even means in the context of Link-Local unicasts. The proposed text hence modifies Section 2.5 to exclude Link-Local addresses from the part of that section defining a \"subnet prefix\" and instead be defines them to provide a flat address space that is reused on every link. That is, Link-Local addresses are defined without a subnet prefix.\r\n\r\nThis leaves the Section 2.1 statement about subnet prefixes, and the forwarding behaviour implied by that, applicable to Global Unicast addresses but inapplicable to Link-Local addresses. Given this Section 2.5.6 can be read to be solely a constraint on Link-Local address construction, i.e. requiring SLAAC and other methods of Link-Local configuration to only produce addresses from that subset, without any implication for forwarding behaviour that \"subnet prefix\" might suggest.\r\n\r\nThat this general topic seems to produce periodic flurries of concern might be an indication that greater clarity in specification here might be useful.",
    "submit_date": "2019-05-01",
    "submitter_name": "Dennis Ferguson",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6596",
    "doc-id": "RFC4291",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.2",
    "orig_text": "   2. Due to some methods of allocating certain styles of IPv6\r\n      addresses, it will be common for addresses to contain long strings\r\n      of zero bits.  In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates one or more groups of 16 bits of zeros.\r\n      The \"::\" can only appear once in an address.  The \"::\" can also be\r\n      used to compress leading or trailing zeros in an address.",
    "correct_text": "EITHER\r\n\r\n   2. Due to some methods of allocating certain styles of IPv6\r\n      addresses, it will be common for addresses to contain long strings\r\n      of zero bits.  In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates one or more \"0\" pieces, or two or more when\r\n      leading or trailing. The \"::\" can only appear once in an address.\r\n\r\nOR\r\n\r\n   2. Due to some methods of allocating certain styles of IPv6\r\n      addresses, it will be common for addresses to contain long strings\r\n      of zero bits.  In order to make writing addresses containing zero\r\n      bits easier, a special syntax is available to compress the zeros.\r\n      The use of \"::\" indicates one or more pieces of 16 bits of zeros,\r\n      or two or more when leading or trailing. The \"::\" can only appear\r\n      once in an address.\r\n",
    "notes": "1. The existing wording would permit \"::\" to be used in leading or trailing position to compress a single 16-bit piece, leading to the conclusion that \"::0:0:0:0:0:0:1\" is a valid way to write the loopback address, with eight colons.\r\n\r\nMany consumers of textual IPv6 addresses would reject this out of hand as \"too many colons\", and it seems questionable that such an interpretation was ever intended. Enforcing this on producers would improve interoperability.\r\n\r\n2. The preceding paragraphs defines \"piece\", but the undefined term \"group\" is used in this paragraph, so by changing that term I hope to clarify that this is a textual substitution, necessarily aligned to a multiple of 16 bits.\r\n\r\nI am uncomfortable with the phrasing \"pieces of 16 bits of zeros\", but I offer it as a single-word change to effect my point (2); I leave it to the discretion of the editor which of my alternatives to adopt.",
    "submit_date": "2021-06-03",
    "submitter_name": "Martin D Kealey",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6848",
    "doc-id": "RFC4291",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": "Note: [EUI-64] actually defines 0xFF and 0xFF as the bits to be\r\n         inserted to create an IEEE EUI-64 identifier from an IEEE MAC-\r\n         48 identifier.",
    "correct_text": "Note: [EUI-64] actually defines 0xFF and 0xFE as the bits to be\r\n         inserted to create an IEEE EUI-64 identifier from an IEEE MAC-\r\n         48 identifier.",
    "notes": "Just seems to be a typo\r\n\r\n-- Verifier note --\r\nThis is indeed a minor typo as the rest of the RFC is clear that 0xFF and 0xFE are used.",
    "submit_date": "2022-02-12",
    "submitter_name": "Fabrice Verrac",
    "verifier_id": "161",
    "verifier_name": "Eric Vyncke",
    "update_date": "2022-04-05 22:22:32"
  },
  {
    "errata_id": "8373",
    "doc-id": "RFC4291",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.5.6",
    "orig_text": "   Routers must not forward any packets with Link-Local source or\r\n   destination addresses to other links.",
    "correct_text": "Routers MUST not forward any packets with Link-Local source or destination addresses to other links.  Hop-limit MUST be set to 1.",
    "notes": "I believe it would be reasonable for someone to override the behavior via setsockopt() call but that the default behavior of an internet connected host should set hlimit=1",
    "submit_date": "2025-04-04",
    "submitter_name": "Jared Mauch",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "863",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "2.7",
    "orig_text": "   Nodes must not originate a packet to a multicast address whose scop\r\n   field contains the reserved value 0; if such a packet is received, it\r\n   must be silently dropped.  Nodes should not originate a packet to a\r\n   multicast address whose scop field contains the reserved value F; ...",
    "correct_text": "   Nodes must not originate a packet to a multicast address whose scope\r\n   field contains the reserved value 0; if such a packet is received, it\r\n   must be silently dropped.  Nodes should not originate a packet to a\r\n   multicast address whose scope field contains the reserved value F; ...",
    "notes": "Typo: scop --> scope (2 times)\r\n\r\n-- RATIONALE FOR REJECTION --\r\n\r\nThis isn't a typo. The field is named \"scop\".  See Section 2.7:\r\n\r\n   scop is a 4-bit multicast scope value used to limit the scope of \r\n   the multicast group.\r\n\r\nThanks to Bob Hinden for pointing this out.\r\n \r\nThis report was incorrectly marked \"Verified\" from 2007-11-01 to 2008-12-03.",
    "submit_date": "2007-03-02",
    "submitter_name": "Yelland Mr Michael",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "864",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "2.7",
    "orig_text": "   Routers must not forward any multicast packets beyond of the scope\r\n   indicated by the scop field in the destination multicast address.\r\n",
    "correct_text": "   Routers must not forward any multicast packets beyond the scope\r\n   indicated by the scope field in the destination multicast address.\r\n",
    "notes": "Typo: scop --> scope; extraneous \"of\"\r\n\r\n-- RATIONALE FOR REJECTION --\r\n\r\nThis isn't a typo. The field is named \"scop\".  See Section 2.7:\r\n\r\n   scop is a 4-bit multicast scope value used to limit the scope of \r\n   the multicast group.\r\n\r\nThanks to Bob Hinden for pointing this out.\r\n \r\nThis report was incorrectly marked \"Verified\" from 2007-11-01 to 2008-12-03.\r\n\r\n[There is an extraneous \"of\", which has been listed in a separate report: Errata ID 1627.]",
    "submit_date": "2007-03-02",
    "submitter_name": "Yelland Mr Michael",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "865",
    "doc-id": "RFC4291",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "2.7",
    "orig_text": "   Nodes must not originate a packet to a multicast address whose scop\r\n   field contains the reserved value 0; if such a packet is received, it\r\n   must be silently dropped.  Nodes should not originate a packet to a\r\n   multicast address whose scop field contains the reserved value F; ...",
    "correct_text": "   Nodes must not originate a packet to a multicast address whose scope\r\n   field contains the reserved value 0; if such a packet is received, it\r\n   must be silently dropped.  Nodes should not originate a packet to a\r\n   multicast address whose scope field contains the reserved value F; ...",
    "notes": "Typo: scop --> scope (2 times)\r\n\r\n-- RATIONALE FOR REJECTION --\r\n\r\nThis isn't a typo. The field is named \"scop\".  See Section 2.7:\r\n\r\n   scop is a 4-bit multicast scope value used to limit the scope of \r\n   the multicast group.\r\n\r\nThanks to Bob Hinden for pointing this out.\r\n \r\nThis report was incorrectly marked \"Verified\" from 2007-11-01 to 2008-12-03.",
    "submit_date": "2007-03-02",
    "submitter_name": "Yelland Mr Michael",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2019-09-10 09:09:03"
  }
]
