[
  {
    "errata_id": "4907",
    "doc-id": "RFC7489",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "B.1.1.",
    "orig_text": "   Example 3: SPF not in alignment:\r\n\r\n        MAIL FROM: <sender@example.net>\r\n\r\n        From: sender@child.example.com\r\n        Date: Fri, Feb 15 2002 16:54:30 -0800\r\n        To: receiver@example.org\r\n        Subject: here's a sample\r\n\r\n   In this case, the RFC5321.MailFrom parameter includes a DNS domain\r\n   that is neither the same as nor a parent of the RFC5322.From domain.\r\n   Thus, the identifiers are not in alignment.",
    "correct_text": "   Example 3: SPF not in alignment:\r\n\r\n        MAIL FROM: <sender@example.net>\r\n\r\n        From: sender@child.example.com\r\n        Date: Fri, Feb 15 2002 16:54:30 -0800\r\n        To: receiver@example.org\r\n        Subject: here's a sample\r\n\r\n   In this case, the RFC5322.From parameter includes a DNS domain\r\n   that is neither the same as nor a parent of the RFC5321.MailFrom\r\n   domain. Thus, the identifiers are not in alignment.",
    "notes": "Obviously, in the example MailFrom domain IS a parent of From domain.\n --VERIFIER NOTES-- \nexample.NET is not a parent of child.example.COM\r\n\r\nFurther, the explanatory text makes that clear.",
    "submit_date": "2017-01-16",
    "submitter_name": "Don",
    "verifier_id": "126",
    "verifier_name": "Nevil Brownlee",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5151",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "1",
    "orig_text": "However, there has been no single widely\r\naccepted or publicly available mechanism to communication of\r\ndomain-specific message-handling policies for receivers, or to\r\nrequest reporting of authentication and disposition of received mail.",
    "correct_text": "However, there has been no single widely\r\naccepted or publicly available mechanism to communicate\r\ndomain-specific message-handling policies to receivers, or to\r\nrequest reporting of authentication and disposition of received mail.",
    "notes": "\"Mechanism to communication of [...] policies for receivers\" should instead read,\r\n\"Mechanism to COMMUNICATE [...] policies TO receivers.",
    "submit_date": "2017-10-10",
    "submitter_name": "Clara Nees",
    "verifier_id": "157",
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5220",
    "doc-id": "RFC7489",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "A.6.",
    "orig_text": "A.6.  Organizational Domain Discovery Issues\r\n\r\n   Although protocols like ADSP are useful for \"protecting\" a specific\r\n   domain name, they are not helpful at protecting subdomains.  If one\r\n   wished to protect \"example.com\" by requiring via ADSP that all mail\r\n   bearing an RFC5322.From domain of \"example.com\" be signed, this would\r\n   \"protect\" that domain; however, one could then craft an email whose\r\n   RFC5322.From domain is \"security.example.com\", and ADSP would not\r\n   provide any protection.  One could use a DNS wildcard, but this can\r\n   undesirably interfere with other DNS activity; one could add ADSP\r\n   records as fraudulent domains are discovered, but this solution does\r\n   not scale and is a purely reactive measure against abuse.\r\n\r\n   The DNS does not provide a method by which the \"domain of record\", or\r\n   the domain that was actually registered with a domain registrar, can\r\n   be determined given an arbitrary domain name.  Suggestions have been\r\n   made that attempt to glean such information from SOA or NS resource\r\n   records, but these too are not fully reliable, as the partitioning of\r\n   the DNS is not always done at administrative boundaries.\r\n\r\n   When seeking domain-specific policy based on an arbitrary domain\r\n   name, one could \"climb the tree\", dropping labels off the left end of\r\n   the name until the root is reached or a policy is discovered, but\r\n   then one could craft a name that has a large number of nonsense\r\n   labels; this would cause a Mail Receiver to attempt a large number of\r\n   queries in search of a policy record.  Sending many such messages\r\n   constitutes an amplified denial-of-service attack.\r\n\r\n   The Organizational Domain mechanism is a necessary component to the\r\n   goals of DMARC.  The method described in Section 3.2 is far from\r\n   perfect but serves this purpose reasonably well without adding undue\r\n   burden or semantics to the DNS.  If a method is created to do so that\r\n   is more reliable and secure than the use of a public suffix list,\r\n   DMARC should be amended to use that method as soon as it is generally\r\n   available.",
    "correct_text": "A.6.  Organizational Domain Discovery Issues\r\n\r\n   Although protocols like ADSP are useful for \"protecting\" a specific\r\n   domain name, they are not helpful at protecting subdomains.  If one\r\n   wished to protect \"example.com\" by requiring via ADSP that all mail\r\n   bearing an RFC5322.From domain of \"example.com\" be signed, this would\r\n   \"protect\" that domain; however, one could then craft an email whose\r\n   RFC5322.From domain is \"security.example.com\", and ADSP would not\r\n   provide any protection.  One could use a DNS wildcard, but this can\r\n   undesirably interfere with other DNS activity; one could add ADSP\r\n   records as fraudulent domains are discovered, but this solution does\r\n   not scale and is a purely reactive measure against abuse.\r\n\r\n   The DNS does not provide a method by which the \"domain of record\", or\r\n   the domain that was actually registered with a domain registrar, can\r\n   be determined given an arbitrary domain name.  Suggestions have been\r\n   made that attempt to glean such information from SOA or NS resource\r\n   records, but these too are not fully reliable, as the partitioning of\r\n   the DNS is not always done at administrative boundaries.\r\n\r\n   When seeking domain-specific policy based on an arbitrary domain\r\n   name, one could \"climb the tree\", dropping labels off the left end of\r\n   the name until the root is reached or a policy is discovered, but\r\n   then one could craft a name that has a large number of nonsense\r\n   labels; this would cause a Mail Receiver to attempt a large number of\r\n   queries in search of a policy record.  Sending many such messages\r\n   constitutes an amplified denial-of-service attack.\r\n\r\n   Certain TLDs could be classified as a Organizational Domains. The \r\n   benefits to those organizations do not yet justify the necessary \r\n   modifications to this document. An few organizations may \r\n   prefer the simplified reporting and DNS configuration of a \r\n   TLD Organizational Domain. This would require modifications to \r\n   this document and DMARC receivers for a capability that may not even\r\n   be desired by those organizations that strictly control a TLD.\r\n\r\n   The Organizational Domain mechanism is a necessary component to the\r\n   goals of DMARC.  The method described in Section 3.2 is far from\r\n   perfect but serves this purpose reasonably well without adding undue\r\n   burden or semantics to the DNS.  If a method is created to do so that\r\n   is more reliable and secure than the use of a public suffix list,\r\n   DMARC should be amended to use that method as soon as it is generally\r\n   available.",
    "notes": "RFC7489 does not address Organizational Top Level Domains. There are advantages and disadvantages to using a strictly controlled TLD as an Organizational Domain.\r\n\r\nAdvantages:\r\nSimplified reporting for nonexistent domains\r\nSimplified external reporting to another email address with the same TLD\r\nReduced need for multiple wildcard TXT records\r\n\r\nDisadvantages:\r\nDecreased flexibility for subdomains\r\nA \"_dmarc.tld\" record is not be a dotless domain, but may not be recommended\r\nSignificant changes to current DMARC processing systems\r\nNew requirement to manage which TLDs are eligible to be Organizational Domains\r\nOrganizations with a strictly controlled TLD may not desire this change\n --VERIFIER NOTES-- \nThe proposed addition is not an erratum and should be addressed in future work.",
    "submit_date": "2017-12-31",
    "submitter_name": "Steven Hilton",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-01 05:09:23"
  },
  {
    "errata_id": "5221",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "Appendix C.",
    "orig_text": "       <xs:pattern value=\"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}\r\n                   (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])|\r\n                   ([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}\"/>",
    "correct_text": "       <xs:pattern value=\"^((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}\r\n                   (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){7}[A-Fa-f0-9]{1,4})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,1}(:[0-9A-Fa-f]{1,4}){1,6})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1,1})$|\r\n                   ^((([0-9A-Fa-f]{1,4}:){1,7}|:):)$|\r\n                   ^(:(:[0-9A-Fa-f]{1,4}){1,7})$|\r\n                   ^(((([0-9A-Fa-f]{1,4}:){6})\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}))$|\r\n                   ^((([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}))$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){5}:[0-9A-Fa-f]{1,4}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,1}(:[0-9A-Fa-f]{1,4}){1,4}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,3}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,2}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,1}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^((([0-9A-Fa-f]{1,4}:){1,5}|:):\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$|\r\n                   ^(:(:[0-9A-Fa-f]{1,4}){1,5}:\r\n                     (25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)\r\n                     (\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3})$\"/>",
    "notes": "The document does not address compressed IPv6 addresses, and the IPv6 regular expression pattern does provided in the proposed XML validation does not match compressed IPv6 addresses.\r\n\r\nI recommend using a more comprehensive regular expression, adding another note to the appendix that the IPv6 pattern is only included for brevity, or modifying the document to require fully expanded IPv6 addresses.\r\n\r\nCredit for the IPv6 regular expression above goes to Vernon Mauery (http://vernon.mauery.com/content/projects/linux/ipv6_regex).",
    "submit_date": "2017-12-31",
    "submitter_name": "Steven Hilton",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:01:43"
  },
  {
    "errata_id": "5229",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "Appendix C",
    "orig_text": "   <!-- The DMARC policy that applied to the messages in\r\n        this report. -->\r\n   <xs:complexType name=\"PolicyPublishedType\">\r\n     <xs:all>\r\n       <!-- The domain at which the DMARC record was found. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n       <!-- The DKIM alignment mode. -->\r\n       <xs:element name=\"adkim\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The SPF alignment mode. -->\r\n       <xs:element name=\"aspf\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The policy to apply to messages from the domain. -->\r\n       <xs:element name=\"p\" type=\"DispositionType\"/>\r\n       <!-- The policy to apply to messages from subdomains. -->\r\n       <xs:element name=\"sp\" type=\"DispositionType\"/>\r\n       <!-- The percent of messages to which policy applies. -->\r\n       <xs:element name=\"pct\" type=\"xs:integer\"/>\r\n       <!-- Failure reporting options in effect. -->\r\n       <xs:element name=\"fo\" type=\"xs:string\"/>\r\n     </xs:all>\r\n   </xs:complexType>\r\n",
    "correct_text": "   <!-- The DMARC policy that applied to the messages in\r\n        this report. -->\r\n   <xs:complexType name=\"PolicyPublishedType\">\r\n     <xs:all>\r\n       <!-- The domain at which the DMARC record was found. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n       <!-- The DKIM alignment mode. -->\r\n       <xs:element name=\"adkim\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The SPF alignment mode. -->\r\n       <xs:element name=\"aspf\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The policy to apply to messages from the domain. -->\r\n       <xs:element name=\"p\" type=\"DispositionType\"/>\r\n       <!-- The policy to apply to messages from subdomains. -->\r\n       <xs:element name=\"sp\" type=\"DispositionType\"/\r\n                   minOccurs=\"0\"/>\r\n       <!-- The percent of messages to which policy applies. -->\r\n       <xs:element name=\"pct\" type=\"xs:integer\"/>\r\n       <!-- Failure reporting options in effect. -->\r\n       <xs:element name=\"fo\" type=\"xs:string\"/\r\n                   minOccurs=\"0\"/>\r\n     </xs:all>\r\n   </xs:complexType>\r\n",
    "notes": "Per section 6.3, \"adkim\", \"aspf\", \"sp\", \"pct\", and \"fo\" are optional. All but \"sp\" have a default value, which is inconsistently applied in Appendix C.\r\n\r\nIf the Subdomain Policy (sp) is required in aggregate reports, I recommend clarification on how to provide this information for domains that do not publish this information.\r\nFor example:\r\n- If a subdomain policy is published on a subdomain of an organizational domain, return an 'ignored' subdomain policy in the aggregate report\r\n- If a subdomain policy is NOT published on an organizational domain, recommend returning the effective subdomain policy in the aggregate report, which is the domain policy per section 6.3\r\n- Recommend addition of the \"fo\" tag only if the \"ruf\" tag is published.",
    "submit_date": "2018-01-07",
    "submitter_name": "Steven Hilton",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:01:07"
  },
  {
    "errata_id": "5365",
    "doc-id": "RFC7489",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.2.1.1",
    "orig_text": "     mail.receiver.example!example.com!1013662812!1013749130.gz\r\n",
    "correct_text": "     mail.receiver.example!example.com!1013662812!1013749130.xml.gz\r\n",
    "notes": "The specification states that the suffix should be \"xml\" for an uncompressed file, and \"xml.gz\" for a compressed file.  The example filename is missing the \"xml\" component of the suffix",
    "submit_date": "2018-05-22",
    "submitter_name": "Gary Palmer",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear (ISE)",
    "update_date": "2022-09-30 05:10:18"
  },
  {
    "errata_id": "5370",
    "doc-id": "RFC7489",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "7.2.1.1",
    "orig_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.gz",
    "correct_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.xml.gz",
    "notes": "The example filename uses an invalid extension (not one of \"xml\", \"xml.gz\").\n --VERIFIER NOTES-- \n  Thank you for your report.  This is a duplicate of another erratum: 5365.",
    "submit_date": "2018-05-28",
    "submitter_name": "Cris van Pelt",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear (ISE)",
    "update_date": "2022-08-21 01:07:54"
  },
  {
    "errata_id": "5371",
    "doc-id": "RFC7489",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.2.1.1",
    "orig_text": "The aggregate data MUST be an XML file that SHOULD be subjected to\r\nGZIP compression.",
    "correct_text": "The aggregate data MUST be an XML file that SHOULD be subjected to\r\nGZIP compression (described in [RFC1952]).",
    "notes": "The term \"GZIP compression\" is not defined in the text. To clarify, maintain compatibility with future (potentially incompatible) gzip versions, and to bring the document in line with other RFCs (e.g. 3712, 6713, 6968), a reference to RFC 1952 (\"GZIP file format specification version 4.3\") should be added.\r\n\r\nThis is assuming RFC 1952 was the author's intent.",
    "submit_date": "2018-05-28",
    "submitter_name": "Cris van Pelt",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear (ISE)",
    "update_date": "2022-09-30 05:12:36"
  },
  {
    "errata_id": "5440",
    "doc-id": "RFC7489",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "7.1, B.2.1, B.2.3, B.2.4",
    "orig_text": "==7.1==\r\nIn particular, the \"v=DMARC1\" tag is\r\n\r\ncomes back containing a tag of \"v=DMARC1\",\r\n\r\ncontaining at least \"v=DMARC1\"\r\n\r\n==B.2.1==\r\n\r\nThe version of DMARC being used is \"DMARC1\" (\"v=DMARC1\")\r\n\r\n==B.2.3==\r\n\r\nwith the value \"=DMARC1\".\r\n\r\n     % dig +short TXT example.com._report._dmarc.thirdparty.example.net\r\n     \"v=DMARC1\"\r\n\r\n     example.com._report._dmarc   IN   TXT    \"v=DMARC1\"\r\n\r\n==B.2.4==\r\n\r\n        o  The version of DMARC being used is \"DMARC1\" (\"v=DMARC1\")\r\n",
    "correct_text": "==7.1==\r\nIn particular, the \"v=DMARC1;\" tag is\r\n\r\ncomes back containing a tag of \"v=DMARC1;\",\r\n\r\ncontaining at least \"v=DMARC1;\"\r\n\r\n==B.2.1==\r\n\r\nThe version of DMARC being used is \"DMARC1\" (\"v=DMARC1;\")\r\n\r\n==B.2.3==\r\n\r\nwith the value \"v=DMARC1;\".\r\n\r\n     % dig +short TXT example.com._report._dmarc.thirdparty.example.net\r\n     \"v=DMARC1;\"\r\n\r\n     example.com._report._dmarc   IN   TXT    \"v=DMARC1;\"\r\n\r\n==B.2.4==\r\n\r\n   o  The version of DMARC being used is \"DMARC1\" (\"v=DMARC1;\")\r\n",
    "notes": "The ABNF of dmarc-record in section 6.4 says that there has to be a semicolon after v=DMARC1, but several of the examples for the _report._dmarc record are missing the semicolon.",
    "submit_date": "2018-07-25",
    "submitter_name": "John Levine",
    "verifier_id": "157",
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5495",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6.6.3 step 1",
    "orig_text": "   1.  Mail Receivers MUST query the DNS for a DMARC TXT record at the\r\n       DNS domain matching the one found in the RFC5322.From domain in\r\n       the message.  A possibly empty set of records is returned.",
    "correct_text": "   1.  Mail Receivers MUST query the DNS for a DMARC TXT record at the\r\n       DNS domain matching the _dmarc subdomain of the one found in\r\n       the RFC5322.From domain in the message.  A possibly empty set\r\n       of records is returned.",
    "notes": "Section 6.1.  DMARC Policy Record states that DMARC records are 'stored as DNS TXT records in    subdomains named \"_dmarc\"'.  The policy discovery procedure needs to match.  As I read it, it currently doesn't.",
    "submit_date": "2018-09-08",
    "submitter_name": "Scott Kitterman",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:05:23"
  },
  {
    "errata_id": "5552",
    "doc-id": "RFC7489",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "10.3.",
    "orig_text": "Everything about it..",
    "correct_text": null,
    "notes": "DMARC relies on inspecting header information. This section suggestion is not allowed by rfc5321 and contradicts it:\r\n\r\n...a relay SMTP has no need to inspect or\r\n   act upon the header section or body of the message data and MUST NOT\r\n   do so except to add its own \"Received:\" header field..\r\n\r\nSo the correct behaviour shoud be only the second option - 2xy and decide what to do after that being silent or not.\n --VERIFIER NOTES-- \nThe reporter has quoted from the wrong section of RFC 5321, and that that section does not discuss Message Submission Servers.",
    "submit_date": "2018-11-09",
    "submitter_name": "Borislav Petrov",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear (ISE)",
    "update_date": "2022-09-30 05:07:58"
  },
  {
    "errata_id": "5773",
    "doc-id": "RFC7489",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Appendix C",
    "orig_text": "   <!-- The DMARC policy that applied to the messages in\r\n        this report. -->\r\n   <xs:complexType name=\"PolicyPublishedType\">\r\n     <xs:all>\r\n       <!-- The domain at which the DMARC record was found. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n       <!-- The DKIM alignment mode. -->\r\n       <xs:element name=\"adkim\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The SPF alignment mode. -->\r\n       <xs:element name=\"aspf\" type=\"AlignmentType\"\r\n                   minOccurs=\"0\"/>\r\n       <!-- The policy to apply to messages from the domain. -->\r\n       <xs:element name=\"p\" type=\"DispositionType\"/>\r\n       <!-- The policy to apply to messages from subdomains. -->\r\n       <xs:element name=\"sp\" type=\"DispositionType\"/>\r\n       <!-- The percent of messages to which policy applies. -->\r\n       <xs:element name=\"pct\" type=\"xs:integer\"/>\r\n       <!-- Failure reporting options in effect. -->\r\n       <xs:element name=\"fo\" type=\"xs:string\"/>\r\n     </xs:all>\r\n   </xs:complexType>",
    "correct_text": "   <!-- The DMARC policy that applied to the messages in\r\n        this report. -->\r\n   <xs:complexType name=\"PolicyPublishedType\">\r\n     <xs:all>\r\n       <!-- The domain at which the DMARC record was found. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n       <!-- The DKIM alignment mode. -->\r\n       <xs:element name=\"adkim\" type=\"AlignmentType\"/>\r\n       <!-- The SPF alignment mode. -->\r\n       <xs:element name=\"aspf\" type=\"AlignmentType\"/>\r\n       <!-- The policy to apply to messages from the domain. -->\r\n       <xs:element name=\"p\" type=\"DispositionType\"/>\r\n       <!-- The policy to apply to messages from subdomains. -->\r\n       <xs:element name=\"sp\" type=\"DispositionType\"/>\r\n       <!-- The percent of messages to which policy applies. -->\r\n       <xs:element name=\"pct\" type=\"xs:integer\"/>\r\n       <!-- Failure reporting options. -->\r\n       <xs:element name=\"fo\" type=\"xs:string\" />\r\n     </xs:all>\r\n   </xs:complexType>",
    "notes": "The name \"PolicyPublishedType\" suggests that the elements within it represent the domain's published policy. But the comment from element \"fo\" describes itself as \"Failure reporting options IN EFFECT\".\r\n\r\nA lot of organizations do not send failure (forensic) reports and do not publish the \"fo\" element in their aggregate reports (Google, Yahoo!, Zoho) . This is reasonable since the description says \"in effect\". But the field also has a (default) MinOccurs of 1 because MinOccurs is not defined. So by omitting the element, the reports from these organizations are in violation of the guidelines.\r\n\r\nShould an aggregate report have a mandatory \"fo\" element, even if the organization doesn't do failure (forensic) reporting? If so, than the comment \"<!-- Failure reporting options in effect. -->\" should be \"<!-- Failure reporting options. -->\". And if not, than the minOccurs=\"0\" should be added to the \"fo\" element to allow it to be optional.\r\n\r\nEven if DMARC policy options are OPTIONAL and not specified, the messages are processed by the receiver with the default values. This is also the case for adkim and aspf, which also have a minOccurs of 0.\r\n\r\nSo i would suggest the following:\r\n\r\nThe PolicyPublishedType describe the policy that is applied tot the messages in the reports. Elements that are not defined by the domain's DMARC policy should be filled with the default values, as they would also be processed that way. So when adkim is not configured in the policy, the report should state value \"r\" as this is the default value. Same applies to aspf (\"r\"), sp (same as \"p\"), pct (100) and fo (0). Even if an organization doesn't send out failure reports it MUST mention the \"fo\" value from the domain's policy, or, when not specified, the default value of 0.\n --VERIFIER NOTES-- \nThe design choice may be debatable, but this not an erratum in the sense of an error.",
    "submit_date": "2019-07-03",
    "submitter_name": "Freddie Leeman",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:04:28"
  },
  {
    "errata_id": "5774",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "Appendix C",
    "orig_text": "       <!-- The DMARC disposition applying to matching\r\n            messages. -->\r\n       <xs:element name=\"policy_evaluated\"\r\n                   type=\"PolicyEvaluatedType\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- The RFC5321.MailFrom domain. -->\r\n       <xs:element name=\"envelope_from\" type=\"xs:string\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- The RFC5322.From domain. -->\r\n       <xs:element name=\"header_from\" type=\"xs:string\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- The \"d=\" parameter in the signature. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- The DKIM verification result. -->\r\n       <xs:element name=\"result\" type=\"DKIMResultType\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- The checked domain. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\" minOccurs=\"1\"/>\r\n\r\n       <!-- The scope of the checked domain. -->\r\n       <xs:element name=\"scope\" type=\"SPFDomainScope\" minOccurs=\"1\"/>\r\n\r\n       <!-- The SPF verification result. -->\r\n       <xs:element name=\"result\" type=\"SPFResultType\"\r\n                   minOccurs=\"1\"/>\r\n\r\n       <!-- There will always be at least one SPF result. -->\r\n       <xs:element name=\"spf\" type=\"SPFAuthResultType\" minOccurs=\"1\"\r\n                   maxOccurs=\"unbounded\"/>",
    "correct_text": "       <!-- The DMARC disposition applying to matching\r\n            messages. -->\r\n       <xs:element name=\"policy_evaluated\"\r\n                   type=\"PolicyEvaluatedType\"/>\r\n\r\n       <!-- The RFC5321.MailFrom domain. -->\r\n       <xs:element name=\"envelope_from\" type=\"xs:string\"/>\r\n\r\n       <!-- The RFC5322.From domain. -->\r\n       <xs:element name=\"header_from\" type=\"xs:string\"/>\r\n\r\n       <!-- The \"d=\" parameter in the signature. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n\r\n       <!-- The DKIM verification result. -->\r\n       <xs:element name=\"result\" type=\"DKIMResultType\"/>\r\n\r\n       <!-- The checked domain. -->\r\n       <xs:element name=\"domain\" type=\"xs:string\"/>\r\n\r\n       <!-- The scope of the checked domain. -->\r\n       <xs:element name=\"scope\" type=\"SPFDomainScope\"/>\r\n\r\n       <!-- The SPF verification result. -->\r\n       <xs:element name=\"result\" type=\"SPFResultType\"/>\r\n\r\n       <!-- There will always be at least one SPF result. -->\r\n       <xs:element name=\"spf\" type=\"SPFAuthResultType\"\r\n                   maxOccurs=\"unbounded\"/>\r\n",
    "notes": "Removed all minOccurs=\"1\" from the DMARC XML Schema since the NOTE at the beginning of the appendix already states that 'unless otherwise specified, the minOccurs and maxOccurs values for each element are set to 1'. These (9) unnecessary specifications of minOccurs can cause confusion and lead to incorrect implementations.\r\n\r\nWhile this report is technically correct, it is hard to see that the text as currently present is harmful or confusing. This is left for an update if/when the document is revised.",
    "submit_date": "2019-07-03",
    "submitter_name": "Freddie Leeman",
    "verifier_id": "157",
    "verifier_name": "Adrian Farrel",
    "update_date": "2021-06-01 12:59:49"
  },
  {
    "errata_id": "6439",
    "doc-id": "RFC7489",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "7.1",
    "orig_text": "For example, if a DMARC policy query for \"blue.example.com\" contained\r\n\"rua=mailto:reports@red.example.net\", the host extracted from the\r\nlatter (\"red.example.net\") does not match \"blue.example.com\", so this\r\nprocedure is enacted.",
    "correct_text": "For example, if a DMARC policy query for \"blue.example.com\" contained\r\n\"rua=mailto:reports@red.example.net\", the Organizational Domain of the\r\nhost extracted from the latter (\"example.net\") does not match the\r\nOrganizational Domain \"example.com\", so this procedure is enacted.",
    "notes": "Section 7.1 (third paragraph) is clear that it is the Organizational Domains which are to be compared in order to make a determination on the need to perform validation steps. The example incorrectly makes this determination by comparing the hostnames instead of the Organizational Domains.",
    "submit_date": "2021-02-23",
    "submitter_name": "Michael Norton",
    "verifier_id": "157",
    "verifier_name": "Adrian Farrel",
    "update_date": "2021-02-24 14:25:35"
  },
  {
    "errata_id": "6485",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "7.2.1.1.",
    "orig_text": "     dmarc-subject = %x52.65.70.6f.72.74 1*FWS       ; \"Report\"\r\n                     %x44.6f.6d.61.69.6e.3a 1*FWS    ; \"Domain:\"\r\n                     domain-name 1*FWS               ; from RFC 6376\r\n                     %x53.75.62.6d.69.74.74.65.72.3a ; \"Submitter:\"\r\n                     1*FWS domain-name 1*FWS\r\n                     %x52.65.70.6f.72.74.2d.49.44.3a ; \"Report-ID:\"\r\n                     msg-id                          ; from RFC 5322",
    "correct_text": "     dmarc-subject = %x52.65.70.6f.72.74 1*FWS       ; \"Report\"\r\n                     %x44.6f.6d.61.69.6e.3a 1*FWS    ; \"Domain:\"\r\n                     domain-name 1*FWS               ; from RFC 6376\r\n                     %x53.75.62.6d.69.74.74.65.72.3a ; \"Submitter:\"\r\n                     1*FWS domain-name 1*FWS\r\n                     %x52.65.70.6f.72.74.2d.49.44.3a ; \"Report-ID:\"\r\n                     1*FWS %x3c dot-atom-text %x3e   ; from RFC 5322",
    "notes": "According to RFC 5322, msg-id = [CFWS] \"<\" id-left \"@\" id-right \">\" [CFWS]. The example given in Section 7.2.1.1. (<2002.02.15.1>) does not adhere to this and neither do reports in the wild. Instead of referring to the msg-id ABNF, I suggest that we refer to the dot-atom-text ABNF and include \"<\" and \">\" as ASCII characters. This also has the advantage of getting rid of CFWS. According to RFC 5322, \"comments may be included in structured field bodies\" but \"Subject\" is not a structured header field.",
    "submit_date": "2021-03-15",
    "submitter_name": "Kaspar Etter",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear (ISE)",
    "update_date": "2022-09-30 22:03:57"
  },
  {
    "errata_id": "6729",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2",
    "orig_text": "   3.  Search the public suffix list for the name that matches the\r\n       largest number of labels found in the subject DNS domain.  Let\r\n       that number be \"x\".",
    "correct_text": "   3.  Search the ICANN DOMAINS section of the public suffix list for\r\n       the name that matches the largest number of labels found in the\r\n       subject DNS domain.  Let that number be \"x\".",
    "notes": "The PSL includes both public and private domains.  RFC 7489 should have limited name matching to the public, ICANN DOMAINS section of the PSL.  As an example, using the current PSL, the organizational domain for example.s3.dualstack.ap-northeast-1.amazonaws.com is example.s3.dualstack.ap-northeast-1.amazonaws.com, not amazonaws.com since it is listed in the private section of the PSL.  This is clearly the wrong result.",
    "submit_date": "2021-11-01",
    "submitter_name": "Scott Kitterman",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:03:17"
  },
  {
    "errata_id": "7099",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "7.2.1.1",
    "orig_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.gz",
    "correct_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.xml.gz",
    "notes": "The example filename uses an invalid extension (not one of \"xml\", \"xml.gz\").",
    "submit_date": "2018-05-28",
    "submitter_name": "Cris van Pelt",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:05:58"
  },
  {
    "errata_id": "7100",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "7.2.1.1",
    "orig_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.gz",
    "correct_text": "   The extension MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\r\n   XML file compressed using GZIP.\r\n\r\n   \"unique-id\" allows an optional unique ID generated by the Mail\r\n   Receiver to distinguish among multiple reports generated\r\n   simultaneously by different sources within the same Domain Owner.\r\n\r\n   For example, this is a possible filename for the gzip file of a\r\n   report to the Domain Owner \"example.com\" from the Mail Receiver\r\n   \"mail.receiver.example\":\r\n\r\n     mail.receiver.example!example.com!1013662812!1013749130.xml.gz",
    "notes": "The example filename uses an invalid extension (not one of \"xml\", \"xml.gz\").",
    "submit_date": "2018-05-28",
    "submitter_name": "Cris van Pelt",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 23:06:40"
  },
  {
    "errata_id": "7835",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6.6.3",
    "orig_text": "   2.  Records that do not start with a \"v=\" tag that identifies the\r\n       current version of DMARC are discarded.\r\n\r\n   3.  If the set is now empty, the Mail Receiver MUST query the DNS for\r\n       a DMARC TXT record at the DNS domain matching the Organizational\r\n       Domain in place of the RFC5322.From domain in the message (if\r\n       different).  This record can contain policy to be asserted for\r\n       subdomains of the Organizational Domain.  A possibly empty set of\r\n       records is returned.\r\n\r\n   4.  Records that do not start with a \"v=\" tag that identifies the\r\n       current version of DMARC are discarded.",
    "correct_text": "   2.  Records that do not start with a \"v=\" tag that identifies the\r\n       current version of DMARC are discarded.\r\n\r\n   3.  If the set is now empty, the Mail Receiver MUST query the DNS for\r\n       a DMARC TXT record at the DNS domain matching the Organizational\r\n       Domain in place of the RFC5322.From domain in the message (if\r\n       different).  This record can contain policy to be asserted for\r\n       subdomains of the Organizational Domain.  A possibly empty set of\r\n       records is returned.",
    "notes": "The intent of the original text is that indeed step 2 should be repeated as follows:\r\n(1) Go get a set of things.\r\n(2) Filter them.\r\n(3) If the set is now empty, go get a set of things from a different location.\r\n(4) Filter them.\r\n\r\nAt the time of this writing, draft-ietf-dmarc-dmarcbis is being developed, and so that text may clarify this point.  As such we will hold this erratum for update.",
    "submit_date": "2024-03-04",
    "submitter_name": "Giuseppe Trotta",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-03-11 09:34:11"
  },
  {
    "errata_id": "7865",
    "doc-id": "RFC7489",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "Appendix C says:",
    "orig_text": "<!-- Credit to Roger L. Costello for IPv4 regex\r\n    http://mailman.ic.ac.uk/pipermail/xml-dev/1999-December/\r\n          018018.html -->\r\n<!-- Credit to java2s.com for IPv6 regex\r\n    http://www.java2s.com/Code/XML/XML-Schema/\r\n          IPv6addressesareeasiertodescribeusingasimpleregex.htm -->\r\n<xs:simpleType name=\"IPAddress\">\r\n  <xs:restriction base=\"xs:string\">\r\n    <xs:pattern value=\"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}\r\n                (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])|\r\n                ([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}\"/>\r\n  </xs:restriction>\r\n</xs:simpleType>",
    "correct_text": "<!-- Credit to Roger L. Costello for IPv4 regex\r\n    http://mailman.ic.ac.uk/pipermail/xml-dev/1999-December/\r\n          018050.html -->\r\n<!-- Credit to java2s.com for IPv6 regex\r\n    http://www.java2s.com/Code/XML/XML-Schema/\r\n          IPv6addressesareeasiertodescribeusingasimpleregex.htm -->\r\n<xs:simpleType name=\"IPAddress\">\r\n  <xs:restriction base=\"xs:string\">\r\n    <xs:pattern value=\"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\.){3}\r\n                (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])|\r\n                ([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}\"/>\r\n  </xs:restriction>\r\n</xs:simpleType>",
    "notes": "The IPv4 regex contains a period \".\" that should be corrected to an escaped period \"\\.\" As stated in the follow up message of the one referenced in the IPv4 regex credit: \"I just realized that there is a bug [...] The period (.) is a special character meaning 'any character'. To indicate that we want a period and not 'any character' the period must be escaped with a backslash, i.e., \\.\" Following the XML schema provided in the original Appendix C, strings like \"1a1a1a1\" and \"1111111\" are considered valid IPv4 addresses, although they are not usable.",
    "submit_date": "2024-03-23",
    "submitter_name": "Fränz Friederes",
    "verifier_id": "157",
    "verifier_name": "Eliot Lear",
    "update_date": "2024-12-02 22:59:54"
  }
]
