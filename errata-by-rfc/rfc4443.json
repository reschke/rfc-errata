[
  {
    "errata_id": "1918",
    "doc-id": "RFC4443",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "7.2",
    "orig_text": "   [IPv6-ESP]   Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC\r\n                4203, December 2005.\r\n",
    "correct_text": "   [IPv6-ESP]   Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC\r\n                4303, December 2005.\r\n",
    "notes": null,
    "submit_date": "2009-10-19",
    "submitter_name": "Thorsten Ulbricht",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "1926",
    "doc-id": "RFC4443",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "7.2",
    "orig_text": "   [IPv6-ADDR]  Hinden, R. and S. Deering, \"Intpernet Protocol Version 6\r\n                (IPv6) Addressing Architecture\", RFC 3513, April 2003.\r\n",
    "correct_text": "   [IPv6-ADDR]  Hinden, R. and S. Deering, \"Internet Protocol Version 6\r\n                (IPv6) Addressing Architecture\", RFC 3513, April 2003.\r\n",
    "notes": null,
    "submit_date": "2009-10-23",
    "submitter_name": "Thorsten Ulbricht",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3201",
    "doc-id": "RFC4443",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "7.2",
    "orig_text": "   [IPv6-ESP]   Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC\r\n                4203, December 2005.",
    "correct_text": "   [IPv6-ESP]   Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC\r\n                4303, December 2005.",
    "notes": "Wrong RFC reference.",
    "submit_date": "2012-04-25",
    "submitter_name": "David Gr√§ff",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4445",
    "doc-id": "RFC4443",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.1",
    "orig_text": "   ICMPv6 Fields:\r\n\r\n   Type           1\r\n\r\n   Code           0 - No route to destination\r\n[...]\r\n                  5 - Source address failed ingress/egress policy\r\n                  6 - Reject route to destination\r\n[...]\r\n   If the reason for the failure to deliver is lack of a matching entry\r\n   in the forwarding node's routing table, the Code field is set to 0.\r\n   (This error can occur only in nodes that do not hold a \"default\r\n   route\" in their routing tables.)\r\n[...]\r\n   If the reason for the failure to deliver is that the route to the\r\n   destination is a reject route, the Code field is set to 6.  This may\r\n   occur if the router has been configured to reject all the traffic for\r\n   a specific prefix.\r\n\r\n   Codes 5 and 6 are more informative subsets of code 1.\r\n",
    "correct_text": "   ICMPv6 Fields:\r\n\r\n   Type           1\r\n\r\n   Code           0 - No route to destination\r\n[...]\r\n                  5 - Source address failed ingress/egress policy\r\n                  6 - Destination address failed ingress/egress policy\r\n[...]\r\n   If the reason for the failure to deliver is lack of an entry in the\r\n   forwarding node's routing table that can be used to reach the\r\n   destination, the Code field is set to 0.  This error may be reported\r\n   by nodes that lack a default route or are the origin of an aggregate\r\n   route\r\n[...]\r\n   If the reason for the failure to deliver is that the packet with this\r\n   destination address is not allowed due to ingress or egress filtering\r\n   policies, the Code field is set to 6.\r\n\r\n   Codes 5 and 6 are more informative subsets of code 1.\r\n",
    "notes": "A router that is the explicit or implicit origin of an aggregate\r\nroute prefix in routing must not forward messages to destinations\r\nmatching the aggregate prefix using a route with a prefix less specific\r\nthan the aggregate route it originated (e.g. a defaut route).  This\r\nconstraint is necessary to produce correct, loop-free routing.  The\r\nparenthetical comment in the current description of the Code 0 error\r\noverlooks the fact that such nodes may lack a route which may be used to\r\nreach a destination matching an aggregate prefix, and may be the only\r\nnodes which could report this lack, even if they do have routes to less\r\nspecific matching prefixes.  The suggested change to the Code 0\r\ndescription attempts to correct this.\r\n\r\nConcerning Code 6, the earliest definition of a \"reject route\" I've\r\nfound in writing is in the RFC 2096 IP Forwarding Table MIB (though\r\n4.3BSD-Reno kernels supported them in 1990 and there may well be earlier\r\nuses).  The updated description of inetCidrRouteType in RFC 4292 says this:\r\n\r\n     reject(2) refers to a route that, if matched, discards\r\n     the message as unreachable and returns a notification\r\n     (e.g., ICMP error) to the message sender.  This is used\r\n     in some protocols as a means of correctly aggregating\r\n     routes.\r\n\r\nIn the MIB a reject route is a generic mechanism to indicate that packets\r\nwith matching destinations won't be forwarded using less specific routes,\r\nbut instead will be discarded if no more specific matching route to use\r\nto forward the packet is known with an error being returned to the\r\nmessage sender.  The reason no specific error is associated with this is\r\nthat while the presence of the reject route describes how messages are\r\nforwarded, or not forwarded (i.e. the mechanism), it does not describe why\r\nthey are being forwarded like that (i.e. the policy); to know the latter\r\nrequires knowing why the reject route was added.  Knowing which error\r\nwill be reported hence requires knowing the purpose that is being\r\nimplemented by the reject route.\r\n\r\nThe original use of the mechanism, as indicated above, was to produce\r\ncorrect forwarding on routers originating aggregate routes.  Another use\r\nof the mechanism, to prevent packets with Local IPv6 destination addresses\r\nfrom being forwarded beyond a site's administrative boundary, was suggested\r\nin Section 4.3 of RFC 4193 (I believe this can only be understood as a\r\nsuggestion, rather than an implementation requirement, since the policy\r\nit requires could be indistinguishably implemented with a firewall filter\r\ninstead).\r\n\r\nThe current definition of Code 6 describes the error being reported\r\nas \"Reject route to destination\", that is it ascribes the reason for\r\nthe error to the mechanism itself rather than the policy the mechanism\r\nwas employed to implement.  If this was the intent then its discription\r\nis technically inaccurate.  A reject route does not necessarily implement\r\nan administrative prohibition nor is its function necessarily to \"reject\r\nall traffic for a specific prefix\"; the original use of reject routes\r\nfor aggregation is inconsistent with both of these.  What I believe is\r\nthat the intent of Code 6 is to report the error associated with the\r\nRFC 4193 border patrol policy, independent of how that is implemented, and\r\nso I've changed the text to better reflect that.\n --VERIFIER NOTES-- \nThe changes proposed go beyond the level of fixing an error.  Some of the changes are explicitly changing the consensus of the working group that developed the specification. If these changes are warranted, an internet-draft should be written and discussion started within the working group.",
    "submit_date": "2015-08-15",
    "submitter_name": "Dennis Ferguson",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6153",
    "doc-id": "RFC4443",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.1",
    "orig_text": "3.1.  Destination Unreachable Message\r\n\r\n   [..]\r\n\r\n   If the reason for the failure to deliver is that the destination is\r\n   beyond the scope of the source address, the Code field is set to 2.\r\n   This condition can occur only when the scope of the source address is\r\n   smaller than the scope of the destination address (e.g., when a\r\n   packet has a link-local source address and a global-scope destination\r\n   address) and the packet cannot be delivered to the destination\r\n   without leaving the scope of the source address.",
    "correct_text": "3.1.  Destination Unreachable Message\r\n\r\n   [..]\r\n\r\n   If the reason for the failure to deliver is that the destination is\r\n   beyond the scope zone of the source address, the Code field is set to\r\n   2.  The scope zone of the destination address is determined by the\r\n   scope of the address and arrival interface of the packet, as specified\r\n   in [IPv6-SCOPE, Section 9].  Similarly, the scope zone of the source\r\n   address is determined by the scope of the address and arrival\r\n   interface of the packet.  This condition can occur only when\r\n   transmitting the packet on the chosen next-hop interface would cause\r\n   the packet to leave the zone of the source address, i.e., cross a zone\r\n   boundary of the scope of the source address.\r\n\r\n7.1.  Normative References\r\n\r\n   [..]\r\n\r\n   [IPv6-SCOPE] Deering, S., Haberman, B., Jinmei, T., Nordmark, E.,\r\n                and B. Zill, \"IPv6 Scoped Address Architecture\", RFC\r\n                4007, March 2005.   ",
    "notes": "https://tools.ietf.org/html/rfc4007#section-9\r\n\r\nScope zone is not scope.\r\n\r\nConsider a case when the source IP is link-local and the destination is global, yet the routing happens in the same VLAN. Per RFC 4007, the packet should be transmitted; however, RFC 4443 allows for an ambiguity which is already causing vendors to reject packets in this case.\n --VERIFIER NOTES-- \nI was tempted to mark this HFDU, since it seems like there is always the opportunity to improve clarity around text that deals with IPv6 scope concepts.\r\n\r\nHowever, I'm not sure this specific text is an improvement and some discussion on the mailing list did not seem to come to any consensus as to what should be done.  See also:\r\n\r\n    https://mailarchive.ietf.org/arch/msg/ipv6/pkRo2Bt4hHu9PFJf2BtYPVn4sJk/\r\n\r\nand preceding messages.",
    "submit_date": "2020-05-01",
    "submitter_name": "T√∂ma Gavrichenkov",
    "verifier_id": "165",
    "verifier_name": "Erik Kline",
    "update_date": "2025-10-16 21:20:56"
  },
  {
    "errata_id": "88",
    "doc-id": "RFC4443",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "",
    "orig_text": "(1)  text omission ???\r\n\r\nI suspect that something went wrong in the publication process\r\nfor RFC 4443, leading to significant text omission.\r\n\r\nSymptoms:\r\n\r\no  Text on top of page 5 apparently *continues* specifications\r\n   that are not in the published text;\r\n\r\no  Appendix A contains the change item:\r\n\r\n   - Added specification that all ICMP error messages shall have exactly\r\n     32 bits of type-specific data, so that receivers can reliably find\r\n     the embedded invoking packet even when they don't recognize the\r\n     ICMP message Type.\r\n\r\n   I could not find any text in the body of the RFC corresponding\r\n   to this statement.\r\n\r\nTherefore, I suspect that general specifications for ICMPv6 error\r\nmessages have been dropped inadvertently from the end of Section\r\n2.1, at the bottom of page 4 in the published text, or that even\r\na subsection dealing with the peculiar requirements for ICMPv6\r\nerror messages has been dropped, just leaving in the published text\r\nthe single sentence at top of page 5.\r\n\r\nI expect the missing text to depict the general structure of the\r\nMessage Body of ICMPv6 error messages with all related explanations,\r\naccording to the above mentioned change note.\r\n\r\nAppendix A also states:\r\n\r\n   - Removed the general packet format from Section 2.1.  It refers to\r\n     Sections 3 and 4 for packet formats now.\r\n\r\nThis is not literally true.  The general format *is* in Section 2.1.\r\nBut in fact, it would be logical to have the (missing) specifications\r\nfor error messages -- including the 4 lines of test on top of page 5 --\r\nincorporated into (the start of) Section 3 (*before* the heading for\r\nSection 3.1.) instead of the end of Section 2.1.\r\n\r\n\r\n(2)  possible textual improvement\r\n\r\nin the lower third of page 3, Section 2.1 says:\r\n\r\n   The code field depends on the message type.  It is used to create an\r\n   additional level of message granularity.\r\n\r\nIt should perhaps better say:\r\n\r\n   The code field depends on the message type.  It is used to create an\r\n   additional level of message type granularity.\r\n                              ^^^^^^\r\n\r\n(3)  reference to old IPsec Architecture document\r\n\r\nSection 5.1, at the bottom of page 15, has been updated to point\r\nto the new IPsec Architecture document, RFC 4301, via the reference\r\ntag [SEC-ARCH].  But immediately below, in the first paragraph of\r\nSection 5.2, on top of page 16, the RFC text says:\r\n\r\n   ICMP messages may be subject to various attacks.  A complete\r\n   discussion can be found in the IP Security Architecture [IPv6-SA].\r\n   [...]\r\n\r\nIt remains unclear why the reference is made to the previous IPsec\r\nArchitecture document, RFC 2401, in this case.\r\nIn fact, RFC 4301 has simplified ICMP handling by the introduction\r\nof ICMP Type+Code as a Traffic Selector for the SPD, and therefore\r\ncontains restructured text on ICMP message processing.\r\nNevertheless, as far as I can see, RFC 4301 has not removed\r\nsignificant ICMP security related material from RFC 2401.\r\nThus, IMHO there is no reason to explicitely refer to the obsoleted\r\nspecification, RFC 2401 [IPv6-SA], instead of the current one,\r\nRFC 4301 [SEC-ARCH].\r\n\r\n\r\n(4)  more issues with references\r\n\r\nAccording to Appendix A, RFC 4443 has\r\n\r\n   - Separated References into Normative and Informative.\r\n\r\nThe latest RFC Authoring Internet draft revisions\r\n(cf. draft-rfc-editor-rfc2223bis-xx\r\n and draft-hoffman-rfc-author-guide-01)\r\nall have included the definition:\r\n     Normative references specify documents that must be read\r\n     to understand or implement the technology in the document,\r\n     or whose technology must be present for the technology in\r\n     the new RFC to work.  [...] an informative reference might\r\n     provide background or historical information to the reader.\r\n     [...]\r\n\r\nThe separation performed does not match this definition.\r\n\r\n(4a)\r\nRFC 4443 refers to RFC 792 and RFC 1122 to point out the analogy\r\nto ICMP[v4], but it is a self-contained specification, and ICMPv6\r\ndoes not rely on the implementation of ICMP[v4] -- IPv6 only nodes\r\nare possible and even expected for the (far?) future.\r\nTherefore, the references [RFC-792] and [RFC-1122] should better\r\nhave been placed into section 7.2, Informative References, instead\r\nof Section 7.1, Normative References.\r\n\r\n(4b)\r\nRFC 4443 also lists in Section 7.1, Normative References, the\r\nreference to its obsoleted predecessor, RFC 2463 [RFC-2463].\r\nThis is a fatal lock on the Standards Track for RFC 4443:\r\nRFC 4443 can *not* be advanced above the level of RFC 2463,\r\nif the written procedures are taken literally !\r\n(Also, RFC 4443 contains all material from RFC 2463, and thus\r\nRFC 2463 is not needed to understand and/or implement RFC 4443.)\r\n\r\nTherefore, all references to obsoleted documents should be\r\nnamed Informative, and in the case of RFC 4443, [RFC-2463]\r\nshould have been moved into Section 7.2 as well.\r\n\r\n(4c)\r\nThe old IPv6 Addressing Architecture document, RFC 3513, has been\r\nreplaced by RFC 4291, published more than 5 weeks before RFC 4443.\r\n\r\nTherefore, in Section 7.2 of RFC 4443, the Informative Reference\r\n[IPv6-ADDR] should be have been changed to point to RFC 4291\r\ninstead of the obsolete RFC 3513.\r\n\r\n(4d)\r\nWhen following my recommendations in item (3) above, the\r\nInformative Reference [IPv6-SA] is not needed any more;\r\nits role has been taken over by the Reference [SEC-ARCH].\r\n\r\n\r\n(5)  misleading change note\r\n\r\nThe second bulleted item in Appendix A,\r\n\r\n   - Corrected typos in Section 2.4, where references to sub-bullet e.2\r\n     were supposed to be references to e.3.\r\n\r\napparently is not correct; it must have been introduced in the\r\ndraft history, referring to a change in the draft.\r\nThe references in RFC 2463 to sub-bullet (e.2) were correct.\r\nRFC 4443 has inserted a new item (e.2) into the list, incrementing\r\nthe numbers of the previous sub-bullet (e.2) and all subsequent\r\nsub-bullets, thus making it necessary to increment the references.\r\nPerhaps, the latter had not been done in an early draft revision,\r\nand has then been corrected in a later one.\r\nThus, the above change note should not have been included in RFC 4443.",
    "correct_text": "",
    "notes": "from pending",
    "submit_date": "2006-04-19",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  }
]
