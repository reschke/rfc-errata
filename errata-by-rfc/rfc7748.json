[
  {
    "errata_id": "4730",
    "doc-id": "RFC7748",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "V(P)  147816194475895447910205935684099868872646061346164752889648818\r\n37755586237401",
    "correct_text": "V(P)  431144251710685529207648989359339670393703861982038067307639101\r\n66200978582548",
    "notes": "The Montgomery form of the curve is generally used with a ladder, where the v coordinate is unused and unspecified. Thus I picked the smaller of the two possible values for v.\r\n\r\nHowever, the curve is birationally equivalent to edwards25519, where both coordinates of the base point are used and are already in widespread use. Sadly, picking the smaller of the values for v ends up mapping to the negative of the base point on edwards25519.\r\n\r\nThis change replaces v with -v so that it matches up.",
    "submit_date": "2016-07-05",
    "submitter_name": "Adam Langley",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5028",
    "doc-id": "RFC7748",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5.2",
    "orig_text": "Input u-coordinate as a number (base 10):",
    "correct_text": "Decoded u-coordinate as a number (base 10):",
    "notes": "It is unclear that the base 10 numbers are the decoded values (i.e. after masking). That should have been made more explicit to reduce confusion.",
    "submit_date": "2017-06-02",
    "submitter_name": "Adam Langley",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2020-12-14 22:58:47"
  },
  {
    "errata_id": "5568",
    "doc-id": "RFC7748",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.2",
    "orig_text": "   Input u-coordinate:\r\n     e5210f12786811d3f4b7959d0538ae2c31dbe7106fc03c3efc4cd549c715a493",
    "correct_text": "   Input u-coordinate:\r\n     e5210f12786811d3f4b7959d0538ae2c31dbe7106fc03c3efc4cd549c715a413",
    "notes": "In the X25519 2nd test vector the last byte of input u-coordinate should be 13 instead of 93. This will fix inconsistency between u-coordinate, its base10 representation and the output u-coordinate.\n --VERIFIER NOTES-- \nA change of one bit of the input u-coordinate in the hexadecimal representation is proposed (to make it \"consistent\" with the base 10 representation). However, implementations of x25519 should \"mask\" that bit after taking a u-coordinate as an input - therefore, the existing text of RFC does not have any errors there. ",
    "submit_date": "2018-12-07",
    "submitter_name": "Juan Alcasabas",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2020-12-14 23:02:25"
  },
  {
    "errata_id": "5651",
    "doc-id": "RFC7748",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "z_2 = E * (AA + a24 * E)",
    "correct_text": "z_2 = E * (BB + a24 * E)",
    "notes": "When BB is used, the point multiplication of the second test vector\r\n\r\nP = (0x13a415c749d54cfc3e3cc06f10e7db312cae38059d95b7f4d3116878120f21e5, 0x1) \r\n\r\nby scalar k\r\n0x4dba18799e16a42cd401eae021641bc1f56a7d959126d25a3c67b4d1d4e96648\r\n\r\ngives the expected point\r\n[k]P = (0x5779ac7a64f7f8e652a19f79685a598bf873b8b45ce4ad7a7d90e87694decb95, 0x1)\r\n\r\nThe implementation based on AA gives the unexpected point \r\n[k]P = (0x3884d5c22af664f822cb3dd728b03c9fac1e1d78c772a74f05546566bd7bed9c, 1)\n --VERIFIER NOTES-- \nIt is proposed to modify the algorithm description for calculation of z_2. However, after checking the original algorithm independently, it was confirmed that the expected numbers are obtained. Therefore, the existing text of RFC does not have any errors here.",
    "submit_date": "2019-03-11",
    "submitter_name": "Pierre Laurent",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2020-12-14 23:06:31"
  },
  {
    "errata_id": "7095",
    "doc-id": "RFC7748",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Appendix A says:",
    "orig_text": "This section specifies the procedure that was used to generate the\r\nabove curves; specifically, it defines how to generate the parameter\r\nA of the Montgomery curve y^2 = x^3 + A*x^2 + x.\r\n",
    "correct_text": "This section specifies the procedure that was used to generate the\r\nabove curves; specifically, it defines how to generate the parameter\r\nA of the Montgomery curve v^2 = u^3 + A*u^2 + u.\r\n",
    "notes": "For consistency with the other parts of the document (e.g. Section 3), use the variables u and v in the Montgomery curve equation.",
    "submit_date": "2022-08-18",
    "submitter_name": "James Muir",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-01-22 21:17:49"
  },
  {
    "errata_id": "7096",
    "doc-id": "RFC7748",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": "# section A.1 sage code:\r\n\r\n       for A in xrange(3, int(1e9)):\r\n           if (A-2) % 4 != 0:\r\n             continue\r\n\r\n# section A.3 sage code:\r\n\r\n       for uInt in range(1, 1e3):\r\n         u = F(uInt)",
    "correct_text": "# section A.1 sage code:\r\n\r\n       for A in xsrange(3, int(1e9)):\r\n           if (A-2) % 4 != 0:\r\n             continue\r\n\r\n# section A.3 sage code:\r\n\r\n       for uInt in xsrange(1, int(1e3)):\r\n         u = F(uInt)",
    "notes": "\"xrange\" is not recognized by Sage with python 3, so the script from section A.1 fails with a syntax error (using \"xrange\" likely worked fine for Sage with python 2).  The suggested changes in A.3 are just for consistency.\r\n\r\nHeld for Document Update. Errata 7096 updates Sage code in Appendix A to make it compatible with Python 3 by replacing 'xrange' with 'xsrange'. This change addresses a compatibility issue for modern implementations but does not affect the cryptographic security or functionality of the protocol, making it low-priority and suitable for future document updates. - CFRG co-chair",
    "submit_date": "2022-08-18",
    "submitter_name": "James Muir",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 10:31:17"
  },
  {
    "errata_id": "7625",
    "doc-id": "RFC7748",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "swap ^= k_t",
    "correct_text": "swap = swap XOR k_t",
    "notes": "The '^' symbol is used inconsistently. In the line `swap ^= k_t` this symbol means the XOR operation, while later, e.g. in line `x_3 = (DA + CB)^2`, it indicates exponentiation. Pseudocode in this document also denotes the XOR operation in the following way: `x_2 = x_2 XOR dummy`. The inconsistent use of the '^' symbol may cause confusion. If one were to perform the operation `swap = swap (to the power of) k_t` instead of `swap = swap XOR k_t`, they would get incorrect results.",
    "submit_date": "2023-08-31",
    "submitter_name": "Tomasz Mioduszewski",
    "verifier_id": "168",
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2023-09-04 02:05:42"
  },
  {
    "errata_id": "7824",
    "doc-id": "RFC7748",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.2",
    "orig_text": "   Input scalar:\r\n     203d494428b8399352665ddca42f9de8fef600908e0d461cb021f8c5\r\n     38345dd77c3e4806e25f46d3315c44e0a5b4371282dd2c8d5be3095f\r\n   Input scalar as a number (base 10):\r\n     633254335906970592779259481534862372382525155\r\n     252028961056404001332122152890562527156973881\r\n     968934311400345568203929409663925541994577184\r\n   Input u-coordinate:\r\n     0fbcc2f993cd56d3305b0b7d9e55d4c1a8fb5dbb52f8e9a1e9b6201b\r\n     165d015894e56c4d3570bee52fe205e28a78b91cdfbde71ce8d157db\r\n   Input u-coordinate as a number (base 10):\r\n     622761797758325444462922068431234180649590390\r\n     024811299761625153767228042600197997696167956\r\n     134770744996690267634159427999832340166786063\r\n   Output u-coordinate:\r\n     884a02576239ff7a2f2f63b2db6a9ff37047ac13568e1e30fe63c4a7\r\n     ad1b3ee3a5700df34321d62077e63633c575c1c954514e99da7c179d",
    "correct_text": "   Input scalar:\r\n     203d494428b8399352665ddca42f9de8fef600908e0d461cb021f8c5\r\n     38345dd77c3e4806e25f46d3315c44e0a5b4371282dd2c8d5be3095f\r\n   Input scalar as a number (base 10):\r\n     633254335906970592779259481534862372382525155\r\n     252028961056404001332122152890562527156973881\r\n     968934311400345568203929409663925541994577184\r\n   Input u-coordinate:\r\n     1e37b1e6368991ebce5815bf6b567cedfec0d32246815a6707f02c4a\r\n     61247656f5df569f02613cc5bcedf7a924424ff063c9c0aff5b395ae\r\n   Input u-coordinate as a number (base 10):\r\n     495683502945530038677307449626580741146441879\r\n     406119444019011021926629134928724388368946852\r\n     962833749157931574628774133988199037473470238\r\n   Output u-coordinate:\r\n     d34142faca68f7a3ddf805fa39cc706d5ab3f5633ceff5e6462b775d\r\n     ef45f33083461dcf821cc3f0f74a813277e6895a35d958feef79a5bf",
    "notes": "Regarding Section 5.2, X448, second vector, the given input u-coordinate is not part of a valid point on the Montgomery form of Curve448.\r\n\r\nI suggest replacing the point with a valid one: (2^447 + 100)*G\r\n\r\nSee the SageMath code (permalink): https://web.archive.org/web/20240227114733/https://pastebin.com/yAuzvEJG",
    "submit_date": "2024-02-27",
    "submitter_name": "Jose Luis Amador Moreno",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7879",
    "doc-id": "RFC7748",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "z_2 = E * (AA + a24 * E)",
    "correct_text": "z_2 = E * (BB + a24 * E)",
    "notes": "In the for loop on page 8, the variable AA should be replaced with BB in Z_2. This modification is necessary because the mathematical formula for point doubling on the Montgomery curve according to (https://en.wikipedia.org/wiki/Montgomery_curve#Montgomery_arithmetic) indicates that Z2n (equivalent to Z_2 in this case) is calculated as follows: Z2n = 4XnZn((Xn-Zn)^2 + ((A+2)/4)(4XnZn)). It is observed in this equation that the operation in the (Xn-Zn)^2 part involves subtraction similar to the variable B, while the operation in the variable A involves addition. Considering this discrepancy, it is suggested to substitute AA with BB for correctness.\n --VERIFIER NOTES-- \n Duplicate of errata report 5651, rejected on CFRG list",
    "submit_date": "2024-04-02",
    "submitter_name": "Nawras Hussein Sabbry",
    "verifier_id": "182",
    "verifier_name": "Nick Sullivan",
    "update_date": "2025-01-18 10:37:14"
  }
]
